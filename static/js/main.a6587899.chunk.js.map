{"version":3,"sources":["i18n.ts","components/analytics/GoogleAnalyticsReporter.tsx","assets/svg/logo_white.svg","assets/images/menu.svg","state/application/actions.ts","connectors/Fortmatic.ts","connectors/NetworkConnector.ts","connectors/index.ts","constants/index.ts","hooks/index.ts","state/application/hooks.ts","state/user/actions.ts","state/user/hooks.tsx","theme/components.tsx","theme/index.tsx","components/Menu/index.tsx","hooks/useOnClickOutside.tsx","components/Row/index.tsx","state/tokens/actions.ts","apollo/client.ts","data/tokens/poolsForToken.ts","data/tokens/chartData.ts","utils/queries.ts","hooks/useBlocksFromTimestamps.ts","data/tokens/priceData.ts","types/index.ts","utils/tokens.ts","data/tokens/transactions.ts","utils/index.ts","state/tokens/hooks.ts","utils/data.ts","hooks/useEthPrices.ts","data/tokens/tokenData.ts","state/pools/actions.ts","data/pools/chartData.ts","data/pools/transactions.ts","state/pools/hooks.ts","data/search/index.ts","components/Column/index.tsx","components/Logo/index.tsx","components/CurrencyLogo/index.tsx","utils/numbers.ts","components/DoubleLogo/index.tsx","components/Card/index.tsx","hooks/useTheme.ts","components/Button/index.tsx","components/Popover/index.tsx","hooks/useInterval.ts","components/Tooltip/index.tsx","components/HoverInlineText/index.tsx","components/Search/index.tsx","components/Header/index.tsx","components/Header/URLWarning.tsx","state/lists/actions.ts","utils/listVersionLabel.ts","components/Popups/ListUpdatePopup.tsx","components/Popups/TransactionPopup.tsx","components/Popups/PopupItem.tsx","components/Popups/index.tsx","theme/DarkModeQueryParamReader.tsx","components/LineChart/alt.tsx","state/protocol/actions.ts","state/protocol/hooks.ts","components/Percent/index.tsx","assets/images/whitev3.svg","components/Loader/index.tsx","components/Text/index.ts","components/shared/index.tsx","components/tokens/TokenTable.tsx","components/pools/PoolTable.tsx","pages/styled.ts","utils/date.ts","components/BarChart/alt.tsx","components/TransactionsTable/index.tsx","pages/Home/index.tsx","pages/Protocol/index.tsx","pages/Pool/PoolsOverview.tsx","components/tokens/TopTokenMovers.tsx","pages/Token/TokensOverview.tsx","components/Header/Polling.tsx","components/Header/TopBar.tsx","hooks/useColor.ts","components/Toggle/index.tsx","components/CandleChart/index.tsx","pages/Token/TokenPage.tsx","constants/intervals.ts","pages/Token/redirects.tsx","data/pools/tickData.ts","components/DensityChart/CurrentPriceLabel.tsx","components/DensityChart/CustomToolTip.tsx","components/DensityChart/index.tsx","pages/Pool/PoolPage.tsx","pages/App.tsx","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","constants/lists.ts","state/lists/reducer.ts","state/multicall/actions.ts","state/multicall/reducer.ts","state/protocol/reducer.ts","state/tokens/reducer.ts","state/pools/reducer.ts","state/index.ts","state/user/updater.tsx","data/protocol/overview.ts","data/protocol/chart.ts","data/protocol/transactions.ts","state/protocol/updater.ts","data/tokens/topTokens.ts","state/tokens/updater.ts","data/pools/topPools.ts","data/pools/poolData.ts","state/pools/updater.ts","data/application/index.ts","state/application/updater.ts","index.tsx"],"names":["i18next","use","XHR","LanguageDetector","initReactI18next","init","backend","loadPath","react","useSuspense","fallbackLng","preload","keySeparator","interpolation","escapeValue","GoogleAnalyticsReporter","location","pathname","search","useEffect","ReactGA","pageview","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","SvgMenu","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","ForwardRef","ApplicationModal","updateBlockNumber","createAction","setOpenModal","addPopup","removePopup","updateSubgraphStatus","CHAIN_ID_NETWORK_ARGUMENT","ChainId","MAINNET","undefined","ROPSTEN","RINKEBY","KOVAN","FortmaticConnector","a","fortmatic","Fortmatic","default","apiKey","chainId","Error","provider","getProvider","pollForOverlayReady","Promise","resolve","interval","setInterval","overlayReady","clearInterval","emit","all","enable","then","accounts","account","FortmaticConnectorCore","RequestError","message","code","data","MiniRpcProvider","url","batchWaitTimeMs","isMetaMask","host","path","nextId","batchTimeoutId","batch","clearBatch","console","debug","fetch","method","headers","accept","body","JSON","stringify","map","item","request","response","forEach","reject","ok","status","statusText","json","byKey","reduce","memo","current","result","error","sendAsync","callback","params","jsonrpc","catch","toString","promise","push","setTimeout","parsed","URL","NetworkConnector","urls","defaultChainId","invariant","supportedChainIds","k","Number","providers","currentChainId","accumulator","AbstractConnector","NETWORK_URL","process","FORMATIC_KEY","REACT_APP_FORTMATIC_KEY","PORTIS_ID","REACT_APP_PORTIS_ID","NETWORK_CHAIN_ID","parseInt","InjectedConnector","WalletConnectConnector","rpc","1","bridge","qrcode","pollingInterval","PortisConnector","dAppId","networks","WalletLinkConnector","appName","appLogoUrl","MAX_UINT128","BigNumber","from","pow","sub","WETH_ADDRESS","DAI","Token","USDC","USDT","COMP","MKR","AMPL","WBTC","UNI_ADDRESS","WETH_ONLY","GÖRLI","WETH9","TOKEN_HIDE","address","POOL_HIDE","BIPS_BASE","JSBI","BigInt","Percent","exponentiate","useActiveWeb3React","context","useWeb3ReactCore","contextNetwork","active","useModalOpen","modal","useSelector","state","application","openModal","useToggleModal","open","dispatch","useDispatch","useCallback","useRemovePopup","useSubgraphStatus","subgraphStatus","available","syncedBlock","updateMatchesDarkMode","updateUserDarkMode","addSerializedToken","removeSerializedToken","addSavedToken","addSavedPool","addSerializedPair","removeSerializedPair","toggleURLWarning","useSavedTokens","savedTokens","user","useSavedPools","savedPools","useURLWarningVisible","URLWarningVisible","StyledInternalLink","styled","button","attrs","warning","theme","backgroundColor","red1","primary1","white","darken","bg1","text4","X","div","size","marginRight","marginLeft","blue1","disabled","text2","Link","fontSize","StyledLink","rotateImg","LinkIconFeather","Trash","text3","keyframes","img","ExternalLink","href","rel","rest","handleClick","event","ctrlKey","metaKey","outboundLink","label","preventDefault","window","onClick","rotate","Spinner","text1","span","mediaWidth","upToMedium","HideMedium","HideSmall","upToSmall","HideExtraSmall","upToExtraSmall","ExtraSmallOnly","MEDIA_WIDTHS","upToLarge","mediaWidthTemplates","b","c","css","colors","darkMode","black","text5","bg0","bg2","bg3","bg4","bg5","modalBG","advancedBG","primary2","primary3","primary4","primary5","primaryText1","secondary1","secondary2","secondary3","pink1","red2","red3","green1","yellow1","yellow2","yellow3","blue2","ThemeProvider","children","matchesDarkMode","userDarkMode","shallowEqual","useIsDarkMode","themeObject","useMemo","grids","sm","md","lg","shadow1","flexColumnNoWrap","flexRowNoWrap","TextWrapper","Text","color","TYPE","fontWeight","FixedGlobalStyle","createGlobalStyle","ThemedGlobalStyle","StyledMenuIcon","MenuIcon","StyledMenuButton","StyledMenu","MenuFlyout","MenuItem","Menu","node","useRef","MENU","toggle","handler","handlerRef","handleClickOutside","e","contains","document","addEventListener","removeEventListener","useOnClickOutside","Row","Box","align","justify","padding","border","borderRadius","RowBetween","RowFlat","AutoRow","gap","RowFixed","ResponsiveRow","updateTokenData","addTokenKeys","addPoolAddresses","updateChartData","updateTransactions","updatePriceData","client","ApolloClient","uri","cache","InMemoryCache","queryDeduplication","defaultOptions","watchQuery","fetchPolicy","query","errorPolicy","healthClient","blockClient","POOLS_FOR_TOKEN","gql","fetchPoolsForToken","variables","loading","Boolean","addresses","formattedData","asToken0","concat","asToken1","p","dayjs","extend","utc","weekOfYear","ONE_DAY_UNIX","TOKEN_CHART","fetchTokenChartData","startTimestamp","endTimestamp","unix","skip","allFound","startTime","chartResData","tokenDayDatas","formattedExisting","accum","dayData","date","toFixed","volumeUSD","parseFloat","totalValueLockedUSD","firstEntry","timestamp","latestTvl","nextDay","currentDayIndex","includes","dateMap","splitQuery","vars","values","skipCount","fetchedData","end","sliced","slice","log","useDeltaTimestamps","utcCurrentTime","subtract","startOf","GET_BLOCKS","timestamps","queryString","useBlocksFromTimestamps","useState","blocks","setBlocks","setError","results","fetchData","formatted","t","split","number","getBlocksFromTimestamps","TransactionType","PRICES_BY_BLOCK","tokenAddress","block","fetchTokenPriceData","time","prices","pricesCopy","row","derivedETH","priceUSD","brow","index","ethPriceUSD","formattedHistory","close","high","low","formatTokenSymbol","symbol","formatTokenName","name","GLOBAL_TRANSACTIONS","fetchTokenTransactions","mints0","mintsAs0","m","type","MINT","hash","transaction","sender","origin","token0Symbol","pool","token0","token1Symbol","token1","token0Address","token1Address","amountUSD","amountToken0","amount0","amountToken1","amount1","mints1","mintsAs1","burns0","burnsAs0","BURN","owner","burns1","burnsAs1","swaps0","swapsAs0","SWAP","swaps1","swapsAs1","isAddress","value","getAddress","ETHERSCAN_PREFIXES","3","4","5","42","getEtherscanLink","prefix","currentTimestamp","Date","getTime","shortenAddress","chars","substring","Fraction","escapeRegExp","string","replace","feeTierPercent","fee","toPrecision","notEmpty","useAllTokenData","tokens","byAddress","useAddTokenKeys","tokenAddresses","useTokenDatas","allTokenData","filter","get2DayChange","valueNow","value24HoursAgo","value48HoursAgo","currentChange","previousChange","adjustedPercentChange","isNaN","isFinite","getPercentChange","change","ETH_PRICES","fetchEthPrices","block24","block48","blockWeek","oneDay","twoDay","week","oneWeek","useEthPrices","setPrices","blockError","formattedBlocks","TOKENS_BULK","tokenString","useFetchedTokenDatas","ethPrices","useQuery","loading24","error24","data24","loading48","error48","data48","loadingWeek","errorWeek","dataWeek","anyError","anyLoading","poolData","parsed24","parsed48","parsedWeek","volumeUSDChange","volumeUSDWeek","tvlUSD","tvlUSDChange","tvlToken","totalValueLocked","priceUSDOneDay","priceUSDWeek","priceUSDChange","priceUSDChangeWeek","txCount","feesUSD","exists","updatePoolData","addPoolKeys","updatePoolChartData","updatePoolTransactions","updateTickData","POOL_CHART","fetchPoolChartData","poolDayDatas","POOL_TRANSACTIONS","fetchPoolTransactions","mints","burns","swaps","useAllPoolData","pools","useAddPoolKeys","poolAddresses","usePoolDatas","allPoolData","untrackedAddresses","TOKEN_SEARCH","POOL_SEARCH","Column","AutoColumn","BAD_SRCS","getTokenLogoURL","StyledLogo","srcs","alt","refresh","src","find","onError","CurrencyLogo","style","checkSummed","formatDollarAmount","num","digits","round","numbro","formatCurrency","average","mantissa","abbreviations","million","billion","formatAmount","nf","Intl","NumberFormat","format","Wrapper","sizeraw","margin","HigherLogo","CoveredLogo","DoubleCurrencyLogo","address0","address1","Card","LightCard","LightGreyCard","GreyCard","DarkGreyCard","GreyBadge","useTheme","useContext","ThemeContext","Base","RebassButton","ButtonPrimary","bgColor","altDisabledStyle","ButtonGray","ButtonSecondary","ButtonOutlined","lighten","HoverIcon","SavedIcon","PopoverContainer","show","transparentize","ReferenceElement","Arrow","Popover","content","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","options","offset","element","styles","update","attributes","delay","leading","savedCallback","tick","useInterval","popper","className","arrow","TooltipContainer","Tooltip","text","link","adjustSize","HoverInlineText","maxCharacters","showHover","setShowHover","onMouseEnter","onMouseLeave","Container","StyledInput","input","hide","Blackout","ResponsiveGrid","Break","HoverText","HoverRowLink","OptionButton","enabled","Search","history","useHistory","menuRef","textRef","handleDown","focus","focused","setFocused","showMenu","setShowMenu","setValue","allTokens","allPools","tokenData","setTokenData","setPoolData","toUpperCase","asSymbol","allFetchedTokens","asAddress","asName","allFetchedPools","as0","as1","tokenFullDatas","tokenFullLoading","poolDatasFull","formattedTokens","newTokens","combinedTokens","filteredSortedTokens","tokenEntryKey","match","RegExp","some","newPools","combinedPools","toLocaleLowerCase","useFetchSearchResults","tokensShown","setTokensShown","poolsShown","setPoolsShown","handleNav","to","watchListTokenData","watchListPoolData","showWatchlist","setShowWatchlist","tokensForList","sort","t0","t1","poolForList","p0","p1","keyName","onKeyDown","onChange","placeholder","onFocus","onBlur","pl","textAlign","ml","stopPropagation","whiteSpace","feeTier","token0Price","HeaderFrame","HeaderControls","HeaderElementWrap","HeaderRow","HeaderLinks","Title","NavLink","UniIcon","activeClassName","StyledNavLink","Header","LogoDark","isActive","PhishAlert","StyledClose","URLWarning","useURLWarningToggle","showURLWarning","isMobile","display","hostname","fetchTokenList","pending","fulfilled","rejected","addList","removeList","enableList","disableList","acceptListUpdate","listVersionLabel","version","major","minor","patch","ChangesList","ul","ListUpdatePopup","popKey","listUrl","oldList","newList","auto","removeThisPopup","handleAcceptUpdate","category","action","diffTokenLists","tokensAdded","added","tokensChanged","changed","tokensRemoved","removed","numTokensChanged","flex","token","Fragment","flexGrow","RowNoFlex","TransactionPopup","success","summary","paddingRight","Popup","Fader","AnimatedFader","animated","PopupItem","removeAfterMs","timeout","clearTimeout","popupContent","txn","listUpdate","faderStyle","useSpring","config","duration","MobilePopupWrapper","MobilePopupInner","FixedPopupColumn","extraPadding","Popups","activePopups","list","popupList","useActivePopups","urlWarningActive","reverse","DarkModeQueryParamReader","parse","parseArrays","ignoreQueryPrefix","toLowerCase","Chart","setLabel","topLeft","topRight","bottomLeft","bottomRight","minHeight","parsedValue","ResponsiveContainer","AreaChart","top","right","left","bottom","x1","y1","x2","y2","stopColor","stopOpacity","XAxis","dataKey","axisLine","tickLine","tickFormatter","minTickGap","cursor","contentStyle","formatter","payload","formattedTime","Area","updateProtocolData","useProtocolData","protocolData","protocol","useProtocolChartData","chartData","useProtocolTransactions","transactions","negative","decimals","wrap","simple","truncated","neutral","Math","abs","StyledSVG","svg","Loader","pulse","AnimatedImg","LocalLoader","v3","loadingAnimation","LoadingRows","Label","ClickableText","PageButtons","faded","MonoSpace","LinkWrapper","ResponsiveLogo","DataRow","SORT_FIELD","TokenTable","tokenDatas","maxItems","sortField","setSortField","sortDirection","setSortDirection","page","setPage","maxPage","setMaxPage","extraPages","floor","sortedTokens","x","handleSort","newField","field","PoolTable","poolDatas","sortedPools","PageWrapper","ThemedBackground","ThemedBackgroundGlobal","unixToDate","formatTime","now","inSeconds","diff","inMinutes","inHours","inDays","CustomBar","y","rx","BarChart","Bar","shape","SortText","abs0","abs1","outputTokenSymbol","inputTokenSymbol","TransactionTable","txFilter","setTxFilter","sortedTransactions","ChartWrapper","Home","scrollTo","volumeHover","setVolumeHover","liquidityHover","setLiquidityHover","leftLabel","setLeftLabel","rightLabel","setRightLabel","formattedTvlData","day","formattedVolumeData","mr","feeChange","Protocol","PoolPage","watchlistPools","CardWrapper","FixedContainer","ScrollableRow","DataCard","lineHeight","TopTokenMovers","topPriceIncrease","min","increaseRef","increaseSet","setIncreaseSet","scrollLeft","scrollWidth","entry","TokensOverview","watchListTokens","paddingTop","StyledPolling","StyledPollingDot","rotate360","Polling","isMounted","setIsMounted","latestBlock","timer1","opacity","Item","TopBar","justifyContent","Vibrant","getPalette","palette","detectedHex","hex","AAscore","shade","useColor","setColor","formattedAddress","useLayoutEffect","stale","getColorFromToken","tokenColor","isOnSwitch","ToggleWrapper","ToggleElementFree","ChartView","CandleChart","textColor","chartRef","chartCreated","setChart","handleResize","parentElement","resize","clientWidth","timeScale","fitContent","scrollToPosition","isClient","chart","createChart","layout","fontFamily","rightPriceScale","scaleMargins","borderVisible","secondsVisible","tickMarkFormatter","unixTime","watermark","visible","grid","horzLines","vertLines","crosshair","horzLine","labelVisible","mode","vertLine","labelBackgroundColor","series","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","setData","subscribeCrosshairMove","param","point","seriesPrices","get","PriceText","ContentLayout","TokenPage","useTokenData","poolsForToken","usePoolsForToken","useTokenTransactions","useTokenChartData","VOL","view","setView","latestValue","setLatestValue","valueLabel","setValueLabel","timeWindow","priceData","oldestTimestampFetched","oldestFetchedTimestamp","fetchingError","secondsInterval","useTokenPriceData","adjustedToCurrent","adjusted","marginTop","alignItems","TVL","PRICE","RedirectInvalidToken","FEE_TIER_TO_TICK_SPACING","fetchInitializedTicks","poolAddress","tickIdxLowerBound","tickIdxUpperBound","tickQuery","surroundingTicks","surroundingTicksResult","ticks","poolQuery","fetchTicksSurroundingPrice","numSurroundingTicks","poolResult","poolCurrentTick","liquidity","token0Decimals","token1Decimals","poolCurrentTickIdx","tickSpacing","activeTickIdx","initializedTicksResult","initializedTicks","tickIdxToInitializedTick","keyBy","activeTickIdxForPrice","TickMath","MIN_TICK","MAX_TICK","activeTickProcessed","liquidityActive","tickIdx","liquidityNet","price0","tickToPrice","price1","liquidityGross","activeTick","Direction","subsequentTicks","computeSurroundingTicks","direction","previousTickProcessed","processedTicks","currentTickIdx","ASC","currentTickProcessed","currentInitializedTick","add","DESC","notEqual","previousTicks","ticksProcessed","CurrentPriceLabel","chartProps","labelData","entryData","isCurrent","toLocaleString","minimumSignificantDigits","TooltipWrapper","CustomToolTip","currentPrice","tvlToken0","tvlToken1","ControlsWrapper","ActionButton","ZOOM_INTERVAL","initialState","INITIAL_TICKS_TO_FETCH","refAreaLeft","refAreaRight","DensityChart","formattedAddress0","formattedAddress1","tickData","usePoolTickData","poolTickData","updatePoolTickData","ticksToFetch","setTicksToFetch","amountTicks","setLoading","zoomState","setZoomState","setFormattedData","sqrtPriceX96","getSqrtRatioAtTick","feeAmount","mockTicks","TICK_SPACINGS","multiply","Pool","nextSqrtX96","maxAmountToken0","CurrencyAmount","fromRawAmount","getOutputAmount","outputRes0","token1Amount","toExact","activeLiquidity","newData","formatData","atZoomMax","atZoomMin","handleZoomIn","handleZoomOut","zoomedData","reversed","isAnimationActive","Cell","LabelList","position","TokenButton","usePoolChartData","usePoolTransactions","token1Price","DENSITY","AppWrapper","HeaderWrapper","BodyWrapper","Marginer","App","fallback","component","maxWidth","exact","strict","PoolsOverview","blockNumber","createReducer","builder","addCase","max","popup","nanoid","updateVersion","pairKey","pairs","lastUpdateVersionTimestamp","serializedToken","serializedPair","tokenAAddress","tokenBAddress","GEMINI_LIST","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","byUrl","activeListUrls","requestId","tokenList","getVersionUpgrade","VersionUpgrade","NONE","errorMessage","u","lastInitializedSet","s","l","Set","newListOfListsSet","has","ADDRESS_REGEX","LOWER_HEX_REGEX","toCallKey","test","callData","addMulticallListeners","removeMulticallListeners","fetchingMulticallResults","errorFetchingMulticallResults","updateMulticallResults","callResults","calls","blocksPerFetch","listeners","callListeners","callKey","fetchingBlockNumber","lastUpdated","PERSISTED_KEYS","store","configureStore","reducer","multicall","lists","middleware","getDefaultMiddleware","thunk","immutableCheck","save","states","preloadedState","load","Updater","darkHandler","matches","matchMedia","addListener","removeListener","GLOBAL_DATA","GLOBAL_CHART","fetchChartData","uniswapDayDatas","fetchTopTransactions","mintEntries","burnEntries","swapEntries","factories","totalVolumeUSD","volumeOneWindowAgo","txCountOneWindowAgo","txCountChange","feesOneWindowAgo","totalFeesUSD","useFetchProtocolData","fetchedProtocolData","useFetchGlobalChartData","fetchedChartData","chartError","TOP_TOKENS","updateTokenDatas","useUpdateTokenData","useTopTokenAddresses","tokenDataError","tokenDataLoading","TOP_POOLS","POOLS_BULK","poolString","useUpdatePoolData","useTopPoolAddresses","totalValueLockedToken0","totalValueLockedToken1","sqrtPrice","poolDataError","poolDataLoading","SUBGRAPH_HEALTH","updateStatus","indexingStatusForCurrentVersion","headBlock","chains","chainHeadBlock","useFetchedSubgraphStatus","newSyncedBlock","GOOGLE_ANALYTICS_ID","REACT_APP_GOOGLE_ANALYTICS_ID","Updaters","initialize","set","customBrowserType","testMode","exception","description","filename","lineno","colno","fatal","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a6587899.chunk.js","sourcesContent":["import i18next from 'i18next'\r\nimport { initReactI18next } from 'react-i18next'\r\nimport XHR from 'i18next-xhr-backend'\r\nimport LanguageDetector from 'i18next-browser-languagedetector'\r\n\r\ni18next\r\n  .use(XHR)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    backend: {\r\n      loadPath: `./locales/{{lng}}.json`,\r\n    },\r\n    react: {\r\n      useSuspense: true,\r\n    },\r\n    fallbackLng: 'en',\r\n    preload: ['en'],\r\n    keySeparator: false,\r\n    interpolation: { escapeValue: false },\r\n  })\r\n\r\nexport default i18next\r\n","import { useEffect } from 'react'\r\nimport ReactGA from 'react-ga'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\n\r\n// fires a GA pageview every time the route changes\r\nexport default function GoogleAnalyticsReporter({ location: { pathname, search } }: RouteComponentProps): null {\r\n  useEffect(() => {\r\n    ReactGA.pageview(`${pathname}${search}`)\r\n  }, [pathname, search])\r\n  return null\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo_white.57af584b.svg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 13C12.5523 13 13 12.5523 13 12C13 11.4477 12.5523 11 12 11C11.4477 11 11 11.4477 11 12C11 12.5523 11.4477 13 12 13Z\",\n  stroke: \"black\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13C19.5523 13 20 12.5523 20 12C20 11.4477 19.5523 11 19 11C18.4477 11 18 11.4477 18 12C18 12.5523 18.4477 13 19 13Z\",\n  stroke: \"black\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5 13C5.55228 13 6 12.5523 6 12C6 11.4477 5.55228 11 5 11C4.44772 11 4 11.4477 4 12C4 12.5523 4.44772 13 5 13Z\",\n  stroke: \"black\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n});\n\nfunction SvgMenu(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMenu);\nexport default __webpack_public_path__ + \"static/media/menu.f7a8c0ea.svg\";\nexport { ForwardRef as ReactComponent };","import { createAction } from '@reduxjs/toolkit'\r\nimport { TokenList } from '@uniswap/token-lists'\r\n\r\nexport type PopupContent = {\r\n  listUpdate: {\r\n    listUrl: string\r\n    oldList: TokenList\r\n    newList: TokenList\r\n    auto: boolean\r\n  }\r\n}\r\n\r\nexport enum ApplicationModal {\r\n  WALLET,\r\n  SETTINGS,\r\n  MENU,\r\n}\r\n\r\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\r\nexport const setOpenModal = createAction<ApplicationModal | null>('application/setOpenModal')\r\nexport const addPopup = createAction<{ key?: string; removeAfterMs?: number | null; content: PopupContent }>(\r\n  'application/addPopup'\r\n)\r\nexport const removePopup = createAction<{ key: string }>('application/removePopup')\r\nexport const updateSubgraphStatus = createAction<{ available: boolean | null; syncedBlock: number | undefined }>(\r\n  'application/updateSubgraphStatus'\r\n)\r\n","import { ChainId } from '@uniswap/sdk-core'\r\nimport { FortmaticConnector as FortmaticConnectorCore } from '@web3-react/fortmatic-connector'\r\n\r\nexport const OVERLAY_READY = 'OVERLAY_READY'\r\n\r\ntype FormaticSupportedChains = Extract<ChainId, ChainId.MAINNET | ChainId.ROPSTEN | ChainId.RINKEBY | ChainId.KOVAN>\r\n\r\nconst CHAIN_ID_NETWORK_ARGUMENT: { readonly [chainId in FormaticSupportedChains]: string | undefined } = {\r\n  [ChainId.MAINNET]: undefined,\r\n  [ChainId.ROPSTEN]: 'ropsten',\r\n  [ChainId.RINKEBY]: 'rinkeby',\r\n  [ChainId.KOVAN]: 'kovan',\r\n}\r\n\r\nexport class FortmaticConnector extends FortmaticConnectorCore {\r\n  async activate() {\r\n    if (!this.fortmatic) {\r\n      const { default: Fortmatic } = await import('fortmatic')\r\n\r\n      const { apiKey, chainId } = this as any\r\n      if (chainId in CHAIN_ID_NETWORK_ARGUMENT) {\r\n        this.fortmatic = new Fortmatic(apiKey, CHAIN_ID_NETWORK_ARGUMENT[chainId as FormaticSupportedChains])\r\n      } else {\r\n        throw new Error(`Unsupported network ID: ${chainId}`)\r\n      }\r\n    }\r\n\r\n    const provider = this.fortmatic.getProvider()\r\n\r\n    const pollForOverlayReady = new Promise((resolve) => {\r\n      const interval = setInterval(() => {\r\n        if (provider.overlayReady) {\r\n          clearInterval(interval)\r\n          this.emit(OVERLAY_READY)\r\n          resolve()\r\n        }\r\n      }, 200)\r\n    })\r\n\r\n    const [account] = await Promise.all([\r\n      provider.enable().then((accounts: string[]) => accounts[0]),\r\n      pollForOverlayReady,\r\n    ])\r\n\r\n    return { provider: this.fortmatic.getProvider(), chainId: (this as any).chainId, account }\r\n  }\r\n}\r\n","import { ConnectorUpdate } from '@web3-react/types'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\nimport invariant from 'tiny-invariant'\r\n\r\ninterface NetworkConnectorArguments {\r\n  urls: { [chainId: number]: string }\r\n  defaultChainId?: number\r\n}\r\n\r\n// taken from ethers.js, compatible interface with web3 provider\r\ntype AsyncSendable = {\r\n  isMetaMask?: boolean\r\n  host?: string\r\n  path?: string\r\n  sendAsync?: (request: any, callback: (error: any, response: any) => void) => void\r\n  send?: (request: any, callback: (error: any, response: any) => void) => void\r\n}\r\n\r\nclass RequestError extends Error {\r\n  constructor(message: string, public code: number, public data?: unknown) {\r\n    super(message)\r\n  }\r\n}\r\n\r\ninterface BatchItem {\r\n  request: { jsonrpc: '2.0'; id: number; method: string; params: unknown }\r\n  resolve: (result: any) => void\r\n  reject: (error: Error) => void\r\n}\r\n\r\nclass MiniRpcProvider implements AsyncSendable {\r\n  public readonly isMetaMask: false = false\r\n  public readonly chainId: number\r\n  public readonly url: string\r\n  public readonly host: string\r\n  public readonly path: string\r\n  public readonly batchWaitTimeMs: number\r\n\r\n  private nextId = 1\r\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null\r\n  private batch: BatchItem[] = []\r\n\r\n  constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\r\n    this.chainId = chainId\r\n    this.url = url\r\n    const parsed = new URL(url)\r\n    this.host = parsed.host\r\n    this.path = parsed.pathname\r\n    // how long to wait to batch calls\r\n    this.batchWaitTimeMs = batchWaitTimeMs ?? 50\r\n  }\r\n\r\n  public readonly clearBatch = async () => {\r\n    console.debug('Clearing batch', this.batch)\r\n    const batch = this.batch\r\n    this.batch = []\r\n    this.batchTimeoutId = null\r\n    let response: Response\r\n    try {\r\n      response = await fetch(this.url, {\r\n        method: 'POST',\r\n        headers: { 'content-type': 'application/json', accept: 'application/json' },\r\n        body: JSON.stringify(batch.map((item) => item.request)),\r\n      })\r\n    } catch (error) {\r\n      batch.forEach(({ reject }) => reject(new Error('Failed to send batch call')))\r\n      return\r\n    }\r\n\r\n    if (!response.ok) {\r\n      batch.forEach(({ reject }) => reject(new RequestError(`${response.status}: ${response.statusText}`, -32000)))\r\n      return\r\n    }\r\n\r\n    let json\r\n    try {\r\n      json = await response.json()\r\n    } catch (error) {\r\n      batch.forEach(({ reject }) => reject(new Error('Failed to parse JSON response')))\r\n      return\r\n    }\r\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\r\n      memo[current.request.id] = current\r\n      return memo\r\n    }, {})\r\n    for (const result of json) {\r\n      const {\r\n        resolve,\r\n        reject,\r\n        request: { method },\r\n      } = byKey[result.id]\r\n      if (resolve && reject) {\r\n        if ('error' in result) {\r\n          reject(new RequestError(result?.error?.message, result?.error?.code, result?.error?.data))\r\n        } else if ('result' in result) {\r\n          resolve(result.result)\r\n        } else {\r\n          reject(new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, result))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public readonly sendAsync = (\r\n    request: {\r\n      jsonrpc: '2.0'\r\n      id: number | string | null\r\n      method: string\r\n      params?: unknown[] | Record<string, unknown>\r\n    },\r\n    callback: (error: any, response: any) => void\r\n  ): void => {\r\n    this.request(request.method, request.params)\r\n      .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\r\n      .catch((error) => callback(error, null))\r\n  }\r\n\r\n  public readonly request = async (\r\n    method: string | { method: string; params: unknown[] },\r\n    params?: unknown[] | Record<string, unknown>\r\n  ): Promise<unknown> => {\r\n    if (typeof method !== 'string') {\r\n      return this.request(method.method, method.params)\r\n    }\r\n    if (method === 'eth_chainId') {\r\n      return `0x${this.chainId.toString(16)}`\r\n    }\r\n    const promise = new Promise((resolve, reject) => {\r\n      this.batch.push({\r\n        request: {\r\n          jsonrpc: '2.0',\r\n          id: this.nextId++,\r\n          method,\r\n          params,\r\n        },\r\n        resolve,\r\n        reject,\r\n      })\r\n    })\r\n    this.batchTimeoutId = this.batchTimeoutId ?? setTimeout(this.clearBatch, this.batchWaitTimeMs)\r\n    return promise\r\n  }\r\n}\r\n\r\nexport class NetworkConnector extends AbstractConnector {\r\n  private readonly providers: { [chainId: number]: MiniRpcProvider }\r\n  private currentChainId: number\r\n\r\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\r\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url')\r\n    super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) })\r\n\r\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0])\r\n    this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\r\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)])\r\n      return accumulator\r\n    }, {})\r\n  }\r\n\r\n  public get provider(): MiniRpcProvider {\r\n    return this.providers[this.currentChainId]\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    return { provider: this.providers[this.currentChainId], chainId: this.currentChainId, account: null }\r\n  }\r\n\r\n  public async getProvider(): Promise<MiniRpcProvider> {\r\n    return this.providers[this.currentChainId]\r\n  }\r\n\r\n  public async getChainId(): Promise<number> {\r\n    return this.currentChainId\r\n  }\r\n\r\n  public async getAccount(): Promise<null> {\r\n    return null\r\n  }\r\n\r\n  public deactivate() {\r\n    return\r\n  }\r\n}\r\n","import { Web3Provider } from '@ethersproject/providers'\r\nimport { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\r\nimport { PortisConnector } from '@web3-react/portis-connector'\r\n\r\nimport { FortmaticConnector } from './Fortmatic'\r\nimport { NetworkConnector } from './NetworkConnector'\r\n\r\nconst NETWORK_URL = process.env.REACT_APP_NETWORK_URL\r\nconst FORMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY\r\nconst PORTIS_ID = process.env.REACT_APP_PORTIS_ID\r\n\r\nexport const NETWORK_CHAIN_ID: number = parseInt(process.env.REACT_APP_CHAIN_ID ?? '1')\r\n\r\nif (typeof NETWORK_URL === 'undefined') {\r\n  throw new Error(`REACT_APP_NETWORK_URL must be a defined environment variable`)\r\n}\r\n\r\nexport const network = new NetworkConnector({\r\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\r\n})\r\n\r\nlet networkLibrary: Web3Provider | undefined\r\nexport function getNetworkLibrary(): Web3Provider {\r\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any))\r\n}\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: [1, 3, 4, 5, 42],\r\n})\r\n\r\n// mainnet only\r\nexport const walletconnect = new WalletConnectConnector({\r\n  rpc: { 1: NETWORK_URL },\r\n  bridge: 'https://bridge.walletconnect.org',\r\n  qrcode: true,\r\n  pollingInterval: 15000,\r\n})\r\n\r\n// mainnet only\r\nexport const fortmatic = new FortmaticConnector({\r\n  apiKey: FORMATIC_KEY ?? '',\r\n  chainId: 1,\r\n})\r\n\r\n// mainnet only\r\nexport const portis = new PortisConnector({\r\n  dAppId: PORTIS_ID ?? '',\r\n  networks: [1],\r\n})\r\n\r\n// mainnet only\r\nexport const walletlink = new WalletLinkConnector({\r\n  url: NETWORK_URL,\r\n  appName: 'Uniswap',\r\n  appLogoUrl:\r\n    'https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg',\r\n})\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { ChainId, Percent, Token, WETH9 } from '@uniswap/sdk-core'\r\nimport JSBI from 'jsbi'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\n\r\nimport { fortmatic, injected, portis, walletconnect, walletlink } from '../connectors'\r\n\r\nexport const FACTORY_ADDRESS = '0xFeabCc62240297F1e4b238937D68e7516f0918D7'\r\n\r\nexport const ROUTER_ADDRESS = '0x0e3a18cA44933a1c4B177B69E52bD906289f0c53'\r\n\r\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\r\n\r\nexport const MAX_UINT128 = BigNumber.from(2).pow(128).sub(1)\r\n\r\n// a list of tokens by chain\r\ntype ChainTokenList = {\r\n  readonly [chainId in ChainId]: Token[]\r\n}\r\n\r\nexport const WETH_ADDRESS = '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c'\r\n\r\nexport const DAI = new Token(ChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18, 'DAI', 'Dai Stablecoin')\r\nexport const USDC = new Token(ChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6, 'USDC', 'USD//C')\r\nexport const USDT = new Token(ChainId.MAINNET, '0xdAC17F958D2ee523a2206206994597C13D831ec7', 6, 'USDT', 'Tether USD')\r\nexport const COMP = new Token(ChainId.MAINNET, '0xc00e94Cb662C3520282E6f5717214004A7f26888', 18, 'COMP', 'Compound')\r\nexport const MKR = new Token(ChainId.MAINNET, '0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2', 18, 'MKR', 'Maker')\r\nexport const AMPL = new Token(ChainId.MAINNET, '0xD46bA6D942050d489DBd938a2C909A5d5039A161', 9, 'AMPL', 'Ampleforth')\r\nexport const WBTC = new Token(ChainId.MAINNET, '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599', 8, 'WBTC', 'Wrapped BTC')\r\n\r\n// Block time here is slightly higher (~1s) than average in order to avoid ongoing proposals past the displayed time\r\nexport const AVERAGE_BLOCK_TIME_IN_SECS = 13\r\nexport const PROPOSAL_LENGTH_IN_BLOCKS = 40_320\r\nexport const PROPOSAL_LENGTH_IN_SECS = AVERAGE_BLOCK_TIME_IN_SECS * PROPOSAL_LENGTH_IN_BLOCKS\r\n\r\nexport const GOVERNANCE_ADDRESS = '0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F'\r\n\r\nexport const TIMELOCK_ADDRESS = '0x1a9C8182C09F50C8318d769245beA52c32BE35BC'\r\n\r\nconst UNI_ADDRESS = '0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984'\r\nexport const UNI: { [chainId in ChainId]: Token } = {\r\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, UNI_ADDRESS, 18, 'UNI', 'Uniswap'),\r\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, UNI_ADDRESS, 18, 'UNI', 'Uniswap'),\r\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, UNI_ADDRESS, 18, 'UNI', 'Uniswap'),\r\n  [ChainId.GÖRLI]: new Token(ChainId.GÖRLI, UNI_ADDRESS, 18, 'UNI', 'Uniswap'),\r\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, UNI_ADDRESS, 18, 'UNI', 'Uniswap'),\r\n}\r\n\r\nexport const COMMON_CONTRACT_NAMES: { [address: string]: string } = {\r\n  [UNI_ADDRESS]: 'UNI',\r\n  [GOVERNANCE_ADDRESS]: 'Governance',\r\n  [TIMELOCK_ADDRESS]: 'Timelock',\r\n}\r\n\r\n// TODO: specify merkle distributor for mainnet\r\nexport const MERKLE_DISTRIBUTOR_ADDRESS: { [chainId in ChainId]?: string } = {\r\n  [ChainId.MAINNET]: '0x090D4613473dEE047c3f2706764f49E0821D256e',\r\n}\r\n\r\nconst WETH_ONLY: ChainTokenList = {\r\n  [ChainId.MAINNET]: [WETH9[ChainId.MAINNET]],\r\n  [ChainId.ROPSTEN]: [WETH9[ChainId.ROPSTEN]],\r\n  [ChainId.RINKEBY]: [WETH9[ChainId.RINKEBY]],\r\n  [ChainId.GÖRLI]: [WETH9[ChainId.GÖRLI]],\r\n  [ChainId.KOVAN]: [WETH9[ChainId.KOVAN]],\r\n}\r\n\r\n// used to construct intermediary pairs for trading\r\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\r\n  ...WETH_ONLY,\r\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT, COMP, MKR, WBTC],\r\n}\r\n\r\n/**\r\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\r\n * tokens.\r\n */\r\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {\r\n    [AMPL.address]: [DAI, WETH9[ChainId.MAINNET]],\r\n  },\r\n}\r\n\r\n// used to construct the list of all pairs we consider by default in the frontend\r\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\r\n  ...WETH_ONLY,\r\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, USDC, USDT, WBTC],\r\n}\r\n\r\nexport const NETWORK_ONLY = {\r\n  fetchPolicy: 'network-only',\r\n}\r\n\r\n// temporary! fixing USD accounting on subgraph - open issue if urgent\r\nexport const TOKEN_HIDE = ['0xd46ba6d942050d489dbd938a2c909a5d5039a161', '0x7dfb72a2aad08c937706f21421b15bfc34cba9ca']\r\nexport const POOL_HIDE = [\r\n  '0x86d257cdb7bc9c0df10e84c8709697f92770b335',\r\n  '0xf8dbd52488978a79dfe6ffbd81a01fc5948bf9ee',\r\n  '0x8fe8d9bb8eeba3ed688069c3d6b556c9ca258248',\r\n]\r\n\r\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\r\n  [ChainId.MAINNET]: [\r\n    [\r\n      new Token(ChainId.MAINNET, '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643', 8, 'cDAI', 'Compound Dai'),\r\n      new Token(ChainId.MAINNET, '0x39AA39c021dfbaE8faC545936693aC917d5E7563', 8, 'cUSDC', 'Compound USD Coin'),\r\n    ],\r\n    [USDC, USDT],\r\n    [DAI, USDT],\r\n  ],\r\n}\r\n\r\nexport interface WalletInfo {\r\n  connector?: AbstractConnector\r\n  name: string\r\n  iconName: string\r\n  description: string\r\n  href: string | null\r\n  color: string\r\n  primary?: true\r\n  mobile?: true\r\n  mobileOnly?: true\r\n}\r\n\r\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\r\n  INJECTED: {\r\n    connector: injected,\r\n    name: 'Injected',\r\n    iconName: 'arrow-right.svg',\r\n    description: 'Injected web3 provider.',\r\n    href: null,\r\n    color: '#010101',\r\n    primary: true,\r\n  },\r\n  METAMASK: {\r\n    connector: injected,\r\n    name: 'MetaMask',\r\n    iconName: 'metamask.png',\r\n    description: 'Easy-to-use browser extension.',\r\n    href: null,\r\n    color: '#E8831D',\r\n  },\r\n  WALLET_CONNECT: {\r\n    connector: walletconnect,\r\n    name: 'WalletConnect',\r\n    iconName: 'walletConnectIcon.svg',\r\n    description: 'Connect to Trust Wallet, Rainbow Wallet and more...',\r\n    href: null,\r\n    color: '#4196FC',\r\n    mobile: true,\r\n  },\r\n  WALLET_LINK: {\r\n    connector: walletlink,\r\n    name: 'Coinbase Wallet',\r\n    iconName: 'coinbaseWalletIcon.svg',\r\n    description: 'Use Coinbase Wallet app on mobile device',\r\n    href: null,\r\n    color: '#315CF5',\r\n  },\r\n  COINBASE_LINK: {\r\n    name: 'Open in Coinbase Wallet',\r\n    iconName: 'coinbaseWalletIcon.svg',\r\n    description: 'Open in Coinbase Wallet app.',\r\n    href: 'https://go.cb-w.com/mtUDhEZPy1',\r\n    color: '#315CF5',\r\n    mobile: true,\r\n    mobileOnly: true,\r\n  },\r\n  FORTMATIC: {\r\n    connector: fortmatic,\r\n    name: 'Fortmatic',\r\n    iconName: 'fortmaticIcon.png',\r\n    description: 'Login using Fortmatic hosted wallet',\r\n    href: null,\r\n    color: '#6748FF',\r\n    mobile: true,\r\n  },\r\n  Portis: {\r\n    connector: portis,\r\n    name: 'Portis',\r\n    iconName: 'portisIcon.png',\r\n    description: 'Login using Portis hosted wallet',\r\n    href: null,\r\n    color: '#4A6C9B',\r\n    mobile: true,\r\n  },\r\n}\r\n\r\nexport const NetworkContextName = 'NETWORK'\r\n\r\n// used for rewards deadlines\r\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7)\r\n\r\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\r\n\r\n// one basis point\r\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\r\nexport const BIPS_BASE = JSBI.BigInt(10000)\r\n// used for warning states\r\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\r\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\r\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\r\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\r\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\r\n// for non expert mode disable swaps above this\r\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\r\n\r\n// used to ensure the user doesn't send so much ETH so they end up with <.01\r\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\r\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\r\n\r\nexport const ZERO_PERCENT = new Percent('0')\r\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\r\n\r\n// SDN OFAC addresses\r\nexport const BLOCKED_ADDRESSES: string[] = [\r\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\r\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\r\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\r\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\r\n]\r\n","import { Web3Provider } from '@ethersproject/providers'\r\nimport { ChainId } from '@uniswap/sdk-core'\r\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core'\r\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\r\nimport { useEffect, useState } from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport { injected } from '../connectors'\r\nimport { NetworkContextName } from '../constants'\r\n\r\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & { chainId?: ChainId } {\r\n  const context = useWeb3ReactCore<Web3Provider>()\r\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName)\r\n  return context.active ? context : contextNetwork\r\n}\r\n\r\nexport function useEagerConnect() {\r\n  const { activate, active } = useWeb3ReactCore() // specifically using useWeb3ReactCore because of what this hook does\r\n  const [tried, setTried] = useState(false)\r\n\r\n  useEffect(() => {\r\n    injected.isAuthorized().then((isAuthorized) => {\r\n      if (isAuthorized) {\r\n        activate(injected, undefined, true).catch(() => {\r\n          setTried(true)\r\n        })\r\n      } else {\r\n        if (isMobile && window.ethereum) {\r\n          activate(injected, undefined, true).catch(() => {\r\n            setTried(true)\r\n          })\r\n        } else {\r\n          setTried(true)\r\n        }\r\n      }\r\n    })\r\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (active) {\r\n      setTried(true)\r\n    }\r\n  }, [active])\r\n\r\n  return tried\r\n}\r\n\r\n/**\r\n * Use for network and injected - logs user in\r\n * and out after checking what network theyre on\r\n */\r\nexport function useInactiveListener(suppress = false) {\r\n  const { active, error, activate } = useWeb3ReactCore() // specifically using useWeb3React because of what this hook does\r\n\r\n  useEffect(() => {\r\n    const { ethereum } = window\r\n\r\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n      const handleChainChanged = () => {\r\n        // eat errors\r\n        activate(injected, undefined, true).catch((error) => {\r\n          console.error('Failed to activate after chain changed', error)\r\n        })\r\n      }\r\n\r\n      const handleAccountsChanged = (accounts: string[]) => {\r\n        if (accounts.length > 0) {\r\n          // eat errors\r\n          activate(injected, undefined, true).catch((error) => {\r\n            console.error('Failed to activate after accounts changed', error)\r\n          })\r\n        }\r\n      }\r\n\r\n      ethereum.on('chainChanged', handleChainChanged)\r\n      ethereum.on('accountsChanged', handleAccountsChanged)\r\n\r\n      return () => {\r\n        if (ethereum.removeListener) {\r\n          ethereum.removeListener('chainChanged', handleChainChanged)\r\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\r\n        }\r\n      }\r\n    }\r\n    return undefined\r\n  }, [active, error, suppress, activate])\r\n}\r\n","import { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { addPopup, ApplicationModal, PopupContent, removePopup, setOpenModal, updateSubgraphStatus } from './actions'\r\n\r\nexport function useBlockNumber(): number | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\r\n}\r\n\r\nexport function useModalOpen(modal: ApplicationModal): boolean {\r\n  const openModal = useSelector((state: AppState) => state.application.openModal)\r\n  return openModal === modal\r\n}\r\n\r\nexport function useToggleModal(modal: ApplicationModal): () => void {\r\n  const open = useModalOpen(modal)\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(() => dispatch(setOpenModal(open ? null : modal)), [dispatch, modal, open])\r\n}\r\n\r\nexport function useOpenModal(modal: ApplicationModal): () => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(() => dispatch(setOpenModal(modal)), [dispatch, modal])\r\n}\r\n\r\nexport function useCloseModals(): () => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(() => dispatch(setOpenModal(null)), [dispatch])\r\n}\r\n\r\nexport function useWalletModalToggle(): () => void {\r\n  return useToggleModal(ApplicationModal.WALLET)\r\n}\r\n\r\nexport function useToggleSettingsMenu(): () => void {\r\n  return useToggleModal(ApplicationModal.SETTINGS)\r\n}\r\n\r\n// returns a function that allows adding a popup\r\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\r\n  const dispatch = useDispatch()\r\n\r\n  return useCallback(\r\n    (content: PopupContent, key?: string) => {\r\n      dispatch(addPopup({ content, key }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\n// returns a function that allows removing a popup via its key\r\nexport function useRemovePopup(): (key: string) => void {\r\n  const dispatch = useDispatch()\r\n  return useCallback(\r\n    (key: string) => {\r\n      dispatch(removePopup({ key }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\n// get the list of active popups\r\nexport function useActivePopups(): AppState['application']['popupList'] {\r\n  const list = useSelector((state: AppState) => state.application.popupList)\r\n  return useMemo(() => list.filter((item) => item.show), [list])\r\n}\r\n\r\n// returns a function that allows adding a popup\r\nexport function useSubgraphStatus(): [\r\n  {\r\n    available: boolean | null\r\n    syncedBlock: number | undefined\r\n  },\r\n  (available: boolean | null, syncedBlock: number | undefined) => void\r\n] {\r\n  const dispatch = useDispatch()\r\n  const status = useSelector((state: AppState) => state.application.subgraphStatus)\r\n\r\n  const update = useCallback(\r\n    (available: boolean | null, syncedBlock: number | undefined) => {\r\n      dispatch(updateSubgraphStatus({ available, syncedBlock }))\r\n    },\r\n    [dispatch]\r\n  )\r\n  return [status, update]\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport interface SerializedToken {\r\n  chainId: number\r\n  address: string\r\n  decimals: number\r\n  symbol?: string\r\n  name?: string\r\n}\r\n\r\nexport interface SerializedPair {\r\n  token0: SerializedToken\r\n  token1: SerializedToken\r\n}\r\n\r\nexport const updateMatchesDarkMode = createAction<{ matchesDarkMode: boolean }>('user/updateMatchesDarkMode')\r\nexport const updateUserDarkMode = createAction<{ userDarkMode: boolean }>('user/updateUserDarkMode')\r\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\r\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\r\nexport const addSavedToken = createAction<{ address: string }>('user/addSavedToken')\r\nexport const addSavedPool = createAction<{ address: string }>('user/addSavedPool')\r\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\r\nexport const removeSerializedPair = createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>(\r\n  'user/removeSerializedPair'\r\n)\r\nexport const toggleURLWarning = createAction<void>('app/toggleURLWarning')\r\n","import { ChainId, Token } from '@uniswap/sdk-core'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { Pair } from '@uniswap/v2-sdk'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateUserDarkMode,\r\n  toggleURLWarning,\r\n  addSavedToken,\r\n  addSavedPool,\r\n} from './actions'\r\n\r\nfunction serializeToken(token: Token): SerializedToken {\r\n  return {\r\n    chainId: token.chainId,\r\n    address: token.address,\r\n    decimals: token.decimals,\r\n    symbol: token.symbol,\r\n    name: token.name,\r\n  }\r\n}\r\n\r\nfunction deserializeToken(serializedToken: SerializedToken): Token {\r\n  return new Token(\r\n    serializedToken.chainId,\r\n    serializedToken.address,\r\n    serializedToken.decimals,\r\n    serializedToken.symbol,\r\n    serializedToken.name\r\n  )\r\n}\r\n\r\nexport function useIsDarkMode(): boolean {\r\n  const { userDarkMode, matchesDarkMode } = useSelector<\r\n    AppState,\r\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\r\n  >(\r\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\r\n      userDarkMode,\r\n      matchesDarkMode,\r\n    }),\r\n    shallowEqual\r\n  )\r\n\r\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\r\n}\r\n\r\nexport function useDarkModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const darkMode = true\r\n\r\n  const toggleSetDarkMode = useCallback(() => {\r\n    dispatch(updateUserDarkMode({ userDarkMode: !darkMode }))\r\n  }, [darkMode, dispatch])\r\n\r\n  return [darkMode, toggleSetDarkMode]\r\n}\r\n\r\nexport function useAddUserToken(): (token: Token) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (token: Token) => {\r\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\nexport function useSavedTokens(): [string[], (address: string) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const savedTokens = useSelector((state: AppState) => state.user.savedTokens)\r\n  const updatedSavedTokens = useCallback(\r\n    (address: string) => {\r\n      dispatch(addSavedToken({ address }))\r\n    },\r\n    [dispatch]\r\n  )\r\n  return [savedTokens ?? [], updatedSavedTokens]\r\n}\r\n\r\nexport function useSavedPools(): [string[], (address: string) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const savedPools = useSelector((state: AppState) => state.user.savedPools)\r\n  const updateSavedPools = useCallback(\r\n    (address: string) => {\r\n      dispatch(addSavedPool({ address }))\r\n    },\r\n    [dispatch]\r\n  )\r\n  return [savedPools ?? [], updateSavedPools]\r\n}\r\n\r\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (chainId: number, address: string) => {\r\n      dispatch(removeSerializedToken({ chainId, address }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\nexport function useUserAddedTokens(): Token[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return []\r\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\r\n  }, [serializedTokensMap, chainId])\r\n}\r\n\r\nfunction serializePair(pair: Pair): SerializedPair {\r\n  return {\r\n    token0: serializeToken(pair.token0),\r\n    token1: serializeToken(pair.token1),\r\n  }\r\n}\r\n\r\nexport function usePairAdder(): (pair: Pair) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (pair: Pair) => {\r\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\nexport function useURLWarningVisible(): boolean {\r\n  return useSelector((state: AppState) => state.user.URLWarningVisible)\r\n}\r\n\r\nexport function useURLWarningToggle(): () => void {\r\n  const dispatch = useDispatch()\r\n  return useCallback(() => dispatch(toggleURLWarning()), [dispatch])\r\n}\r\n","import React, { HTMLProps, useCallback } from 'react'\r\nimport ReactGA from 'react-ga'\r\nimport { Link } from 'react-router-dom'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { darken } from 'polished'\r\nimport { MEDIA_WIDTHS } from './index'\r\nimport { ArrowLeft, X, ExternalLink as LinkIconFeather, Trash } from 'react-feather'\r\n\r\nexport const ButtonText = styled.button`\r\n  outline: none;\r\n  border: none;\r\n  font-size: inherit;\r\n  padding: 0;\r\n  margin: 0;\r\n  background: none;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    opacity: 0.7;\r\n  }\r\n\r\n  :focus {\r\n    text-decoration: underline;\r\n  }\r\n`\r\n\r\nexport const Button = styled.button.attrs<{ warning: boolean }, { backgroundColor: string }>(({ warning, theme }) => ({\r\n  backgroundColor: warning ? theme.red1 : theme.primary1,\r\n}))`\r\n  padding: 1rem 2rem 1rem 2rem;\r\n  border-radius: 3rem;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  font-size: 1rem;\r\n  border: none;\r\n  outline: none;\r\n  background-color: ${({ backgroundColor }) => backgroundColor};\r\n  color: ${({ theme }) => theme.white};\r\n  width: 100%;\r\n\r\n  :hover,\r\n  :focus {\r\n    background-color: ${({ backgroundColor }) => darken(0.05, backgroundColor)};\r\n  }\r\n\r\n  :active {\r\n    background-color: ${({ backgroundColor }) => darken(0.1, backgroundColor)};\r\n  }\r\n\r\n  :disabled {\r\n    background-color: ${({ theme }) => theme.bg1};\r\n    color: ${({ theme }) => theme.text4};\r\n    cursor: auto;\r\n  }\r\n`\r\n\r\nexport const CloseIcon = styled(X)<{ onClick: () => void }>`\r\n  cursor: pointer;\r\n`\r\n\r\n// for wrapper react feather icons\r\nexport const IconWrapper = styled.div<{ stroke?: string; size?: string; marginRight?: string; marginLeft?: string }>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: ${({ size }) => size ?? '20px'};\r\n  height: ${({ size }) => size ?? '20px'};\r\n  margin-right: ${({ marginRight }) => marginRight ?? 0};\r\n  margin-left: ${({ marginLeft }) => marginLeft ?? 0};\r\n  & > * {\r\n    stroke: ${({ theme, stroke }) => stroke ?? theme.blue1};\r\n  }\r\n`\r\n\r\n// A button that triggers some onClick result, but looks like a link.\r\nexport const LinkStyledButton = styled.button<{ disabled?: boolean }>`\r\n  border: none;\r\n  text-decoration: none;\r\n  background: none;\r\n\r\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\r\n  color: ${({ theme, disabled }) => (disabled ? theme.text2 : theme.primary1)};\r\n  font-weight: 500;\r\n\r\n  :hover {\r\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\n// An internal link from the react-router-dom library that is correctly styled\r\nexport const StyledInternalLink = styled(Link)<{ fontSize?: string }>`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.primary1};\r\n  font-weight: 500;\r\n  font-size: ${({ fontSize }) => fontSize ?? '16px'};\r\n\r\n  :hover {\r\n    text-decoration: none;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: none;\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst StyledLink = styled.a`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.primary1};\r\n  font-weight: 500;\r\n  display: inline;\r\n  flex-direction: center;\r\n  align-items: center;\r\n\r\n  :hover {\r\n    text-decoration: underline;\r\n    text-decoration: none;\r\n    opacity: 0.7;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: none;\r\n  }\r\n\r\n  :active {\r\n    outline: none;\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst LinkIconWrapper = styled.a`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  align-items: center;\r\n  justify-content: center;\r\n  display: flex;\r\n\r\n  :hover {\r\n    text-decoration: none;\r\n    opacity: 0.7;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: none;\r\n  }\r\n\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nexport const LinkIcon = styled(LinkIconFeather)`\r\n  height: 16px;\r\n  width: 18px;\r\n  margin-left: 10px;\r\n  stroke: ${({ theme }) => theme.blue1};\r\n`\r\n\r\nexport const TrashIcon = styled(Trash)`\r\n  height: 16px;\r\n  width: 18px;\r\n  margin-left: 10px;\r\n  stroke: ${({ theme }) => theme.text3};\r\n\r\n  cursor: pointer;\r\n  align-items: center;\r\n  justify-content: center;\r\n  display: flex;\r\n\r\n  :hover {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst rotateImg = keyframes`\r\n  0% {\r\n    transform: perspective(1000px) rotateY(0deg);\r\n  }\r\n\r\n  100% {\r\n    transform: perspective(1000px) rotateY(360deg);\r\n  }\r\n`\r\n\r\nexport const UniTokenAnimated = styled.img`\r\n  animation: ${rotateImg} 5s cubic-bezier(0.83, 0, 0.17, 1) infinite;\r\n  padding: 2rem 0 0 0;\r\n  filter: drop-shadow(0px 2px 4px rgba(0, 0, 0, 0.15));\r\n`\r\n\r\n/**\r\n * Outbound link that handles firing google analytics events\r\n */\r\nexport function ExternalLink({\r\n  target = '_blank',\r\n  href,\r\n  rel = 'noopener noreferrer',\r\n  ...rest\r\n}: Omit<HTMLProps<HTMLAnchorElement>, 'as' | 'ref' | 'onClick'> & { href: string }) {\r\n  const handleClick = useCallback(\r\n    (event: React.MouseEvent<HTMLAnchorElement>) => {\r\n      // don't prevent default, don't redirect if it's a new tab\r\n      if (target === '_blank' || event.ctrlKey || event.metaKey) {\r\n        ReactGA.outboundLink({ label: href }, () => {\r\n          console.debug('Fired outbound link event', href)\r\n        })\r\n      } else {\r\n        event.preventDefault()\r\n        // send a ReactGA event and then trigger a location change\r\n        ReactGA.outboundLink({ label: href }, () => {\r\n          window.location.href = href\r\n        })\r\n      }\r\n    },\r\n    [href, target]\r\n  )\r\n  return <StyledLink target={target} rel={rel} href={href} onClick={handleClick} {...rest} />\r\n}\r\n\r\nexport function ExternalLinkIcon({\r\n  target = '_blank',\r\n  href,\r\n  rel = 'noopener noreferrer',\r\n  ...rest\r\n}: Omit<HTMLProps<HTMLAnchorElement>, 'as' | 'ref' | 'onClick'> & { href: string }) {\r\n  const handleClick = useCallback(\r\n    (event: React.MouseEvent<HTMLAnchorElement>) => {\r\n      // don't prevent default, don't redirect if it's a new tab\r\n      if (target === '_blank' || event.ctrlKey || event.metaKey) {\r\n        ReactGA.outboundLink({ label: href }, () => {\r\n          console.debug('Fired outbound link event', href)\r\n        })\r\n      } else {\r\n        event.preventDefault()\r\n        // send a ReactGA event and then trigger a location change\r\n        ReactGA.outboundLink({ label: href }, () => {\r\n          window.location.href = href\r\n        })\r\n      }\r\n    },\r\n    [href, target]\r\n  )\r\n  return (\r\n    <LinkIconWrapper target={target} rel={rel} href={href} onClick={handleClick} {...rest}>\r\n      <LinkIcon />\r\n    </LinkIconWrapper>\r\n  )\r\n}\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nexport const Spinner = styled.img`\r\n  animation: 2s ${rotate} linear infinite;\r\n  width: 16px;\r\n  height: 16px;\r\n`\r\n\r\nconst BackArrowLink = styled(StyledInternalLink)`\r\n  color: ${({ theme }) => theme.text1};\r\n`\r\nexport function BackArrow({ to }: { to: string }) {\r\n  return (\r\n    <BackArrowLink to={to}>\r\n      <ArrowLeft />\r\n    </BackArrowLink>\r\n  )\r\n}\r\n\r\nexport const CustomLightSpinner = styled(Spinner)<{ size: string }>`\r\n  height: ${({ size }) => size};\r\n  width: ${({ size }) => size};\r\n`\r\n\r\nexport const OnlyMedium = styled.span`\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    display: none;\r\n  `};\r\n`\r\n\r\nexport const HideMedium = styled.span`\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    display: none;\r\n  `};\r\n`\r\n\r\nexport const HideSmall = styled.span`\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    display: none;\r\n  `};\r\n`\r\n\r\nexport const HideExtraSmall = styled.span`\r\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\r\n    display: none;\r\n  `};\r\n`\r\n\r\nexport const ExtraSmallOnly = styled.span`\r\n  display: none;\r\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\r\n    display: block;\r\n  `};\r\n`\r\n","import React, { useMemo } from 'react'\r\nimport styled, {\r\n  ThemeProvider as StyledComponentsThemeProvider,\r\n  createGlobalStyle,\r\n  css,\r\n  DefaultTheme,\r\n} from 'styled-components'\r\nimport { useIsDarkMode } from '../state/user/hooks'\r\nimport { Text, TextProps } from 'rebass'\r\nimport { Colors } from './styled'\r\n\r\nexport * from './components'\r\n\r\nexport const MEDIA_WIDTHS = {\r\n  upToExtraSmall: 500,\r\n  upToSmall: 720,\r\n  upToMedium: 960,\r\n  upToLarge: 1280,\r\n}\r\n\r\nconst mediaWidthTemplates: { [width in keyof typeof MEDIA_WIDTHS]: typeof css } = Object.keys(MEDIA_WIDTHS).reduce(\r\n  (accumulator, size) => {\r\n    ;(accumulator as any)[size] = (a: any, b: any, c: any) => css`\r\n      @media (max-width: ${(MEDIA_WIDTHS as any)[size]}px) {\r\n        ${css(a, b, c)}\r\n      }\r\n    `\r\n    return accumulator\r\n  },\r\n  {}\r\n) as any\r\n\r\nconst white = '#FFFFFF'\r\nconst black = '#000000'\r\n\r\nexport function colors(darkMode: boolean): Colors {\r\n  return {\r\n    // base\r\n    white,\r\n    black,\r\n\r\n    // text\r\n    text1: darkMode ? '#FFFFFF' : '#000000',\r\n    text2: darkMode ? '#C3C5CB' : '#565A69',\r\n    text3: darkMode ? '#6C7284' : '#888D9B',\r\n    text4: darkMode ? '#565A69' : '#C3C5CB',\r\n    text5: darkMode ? '#2C2F36' : '#EDEEF2',\r\n\r\n    // backgrounds / greys\r\n    bg0: darkMode ? '#191B1F' : '#F7F8FA',\r\n    bg1: darkMode ? '#1F2128' : '#FFFFFF',\r\n    bg2: darkMode ? '#2C2F36' : '#F7F8FA',\r\n    bg3: darkMode ? '#40444F' : '#EDEEF2',\r\n    bg4: darkMode ? '#565A69' : '#CED0D9',\r\n    bg5: darkMode ? '#6C7284' : '#888D9B',\r\n\r\n    //specialty colors\r\n    modalBG: darkMode ? 'rgba(0,0,0,.425)' : 'rgba(0,0,0,0.3)',\r\n    advancedBG: darkMode ? 'rgba(0,0,0,0.1)' : 'rgba(255,255,255,0.6)',\r\n\r\n    //primary colors\r\n    primary1: darkMode ? '#2172E5' : '#ff007a',\r\n    primary2: darkMode ? '#3680E7' : '#FF8CC3',\r\n    primary3: darkMode ? '#4D8FEA' : '#FF99C9',\r\n    primary4: darkMode ? '#376bad70' : '#F6DDE8',\r\n    primary5: darkMode ? '#153d6f70' : '#FDEAF1',\r\n\r\n    // color text\r\n    primaryText1: darkMode ? '#6da8ff' : '#ff007a',\r\n\r\n    // secondary colors\r\n    secondary1: darkMode ? '#2172E5' : '#ff007a',\r\n    secondary2: darkMode ? '#17000b26' : '#F6DDE8',\r\n    secondary3: darkMode ? '#17000b26' : '#FDEAF1',\r\n\r\n    // other\r\n    pink1: '#ff007a',\r\n    red1: '#FD4040',\r\n    red2: '#F82D3A',\r\n    red3: '#D60000',\r\n    green1: '#27AE60',\r\n    yellow1: '#FFE270',\r\n    yellow2: '#F3841E',\r\n    yellow3: '#F3B71E',\r\n    blue1: '#2172E5',\r\n    blue2: '#5199FF',\r\n\r\n    // dont wanna forget these blue yet\r\n    // blue4: darkMode ? '#153d6f70' : '#C4D9F8',\r\n    // blue5: darkMode ? '#153d6f70' : '#EBF4FF',\r\n  }\r\n}\r\n\r\nexport function theme(darkMode: boolean): DefaultTheme {\r\n  return {\r\n    ...colors(darkMode),\r\n\r\n    grids: {\r\n      sm: 8,\r\n      md: 12,\r\n      lg: 24,\r\n    },\r\n\r\n    //shadows\r\n    shadow1: darkMode ? '#000' : '#2F80ED',\r\n\r\n    // media queries\r\n    mediaWidth: mediaWidthTemplates,\r\n\r\n    // css snippets\r\n    flexColumnNoWrap: css`\r\n      display: flex;\r\n      flex-flow: column nowrap;\r\n    `,\r\n    flexRowNoWrap: css`\r\n      display: flex;\r\n      flex-flow: row nowrap;\r\n    `,\r\n  }\r\n}\r\n\r\nexport default function ThemeProvider({ children }: { children: React.ReactNode }) {\r\n  const darkMode = useIsDarkMode()\r\n\r\n  const themeObject = useMemo(() => theme(darkMode), [darkMode])\r\n\r\n  return <StyledComponentsThemeProvider theme={themeObject}>{children}</StyledComponentsThemeProvider>\r\n}\r\n\r\nconst TextWrapper = styled(Text)<{ color: keyof Colors }>`\r\n  color: ${({ color, theme }) => (theme as any)[color]};\r\n`\r\n\r\nexport const TYPE = {\r\n  main(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} color={'text2'} {...props} />\r\n  },\r\n  link(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} color={'primary1'} {...props} />\r\n  },\r\n  label(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} color={'text1'} {...props} />\r\n  },\r\n  black(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} color={'text1'} {...props} />\r\n  },\r\n  white(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} color={'white'} {...props} />\r\n  },\r\n  body(props: TextProps) {\r\n    return <TextWrapper fontWeight={400} fontSize={16} color={'text1'} {...props} />\r\n  },\r\n  largeHeader(props: TextProps) {\r\n    return <TextWrapper fontWeight={600} fontSize={24} color={'text1'} {...props} />\r\n  },\r\n  mediumHeader(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} fontSize={20} color={'text3'} {...props} />\r\n  },\r\n  subHeader(props: TextProps) {\r\n    return <TextWrapper fontWeight={400} fontSize={14} {...props} />\r\n  },\r\n  small(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} fontSize={11} {...props} />\r\n  },\r\n  blue(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} color={'blue1'} {...props} />\r\n  },\r\n  yellow(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} color={'yellow3'} {...props} />\r\n  },\r\n  darkGray(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} color={'text3'} {...props} />\r\n  },\r\n  gray(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} color={'bg3'} {...props} />\r\n  },\r\n  italic(props: TextProps) {\r\n    return <TextWrapper fontWeight={500} fontSize={12} fontStyle={'italic'} color={'text2'} {...props} />\r\n  },\r\n  error({ error, ...props }: { error: boolean } & TextProps) {\r\n    return <TextWrapper fontWeight={500} color={error ? 'red1' : 'text2'} {...props} />\r\n  },\r\n}\r\n\r\nexport const FixedGlobalStyle = createGlobalStyle`\r\nhtml, input, textarea, button {\r\n  font-family: 'Inter', sans-serif;\r\n  font-display: fallback;\r\n}\r\n@supports (font-variation-settings: normal) {\r\n  html, input, textarea, button {\r\n    font-family: 'Inter var', sans-serif;\r\n  }\r\n}\r\n\r\nhtml,\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n a {\r\n   color: ${colors(false).blue1}; \r\n }\r\n\r\n* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbutton {\r\n  user-select: none;\r\n}\r\n\r\nhtml {\r\n  font-size: 16px;\r\n  font-variant: none;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n  font-feature-settings: 'ss01' on, 'ss02' on, 'cv01' on, 'cv03' on;\r\n  \r\n}\r\n`\r\n\r\nexport const ThemedGlobalStyle = createGlobalStyle`\r\nhtml {\r\n  color: ${({ theme }) => theme.text1};\r\n  background-color: ${({ theme }) => theme.bg1};\r\n}\r\n\r\n.three-line-legend-dark {\r\n\twidth: 100%;\r\n\theight: 70px;\r\n\tposition: absolute;\r\n\tpadding: 8px;\r\n\tfont-size: 12px;\r\n\tcolor: white;\r\n\tbackground-color: transparent;\r\n\ttext-align: left;\r\n\tz-index: 10;\r\n  pointer-events: none;\r\n}\r\n\r\n.tv-lightweight-charts{\r\n  width: 100% !important;\r\n  \r\n  & > * {\r\n    width: 100% !important;\r\n  }\r\n}\r\n\r\nbody {\r\n  min-height: 100vh;\r\n  background-position: 0 -30vh;\r\n  background-repeat: no-repeat;\r\n\r\n}\r\n`\r\n","import React, { useRef } from 'react'\r\nimport { BookOpen, Code, Info, MessageCircle, PieChart } from 'react-feather'\r\nimport styled from 'styled-components'\r\nimport { ReactComponent as MenuIcon } from '../../assets/images/menu.svg'\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\r\nimport { ApplicationModal } from '../../state/application/actions'\r\nimport { useModalOpen, useToggleModal } from '../../state/application/hooks'\r\n\r\nimport { ExternalLink } from '../../theme'\r\n\r\nconst StyledMenuIcon = styled(MenuIcon)`\r\n  path {\r\n    stroke: ${({ theme }) => theme.text1};\r\n  }\r\n`\r\n\r\nconst StyledMenuButton = styled.button`\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  background-color: transparent;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 35px;\r\n  background-color: ${({ theme }) => theme.bg3};\r\n\r\n  padding: 0.15rem 0.5rem;\r\n  border-radius: 0.5rem;\r\n\r\n  :hover,\r\n  :focus {\r\n    cursor: pointer;\r\n    outline: none;\r\n    background-color: ${({ theme }) => theme.bg4};\r\n  }\r\n\r\n  svg {\r\n    margin-top: 2px;\r\n  }\r\n`\r\n\r\nconst StyledMenu = styled.div`\r\n  margin-left: 0.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  border: none;\r\n  text-align: left;\r\n`\r\n\r\nconst MenuFlyout = styled.span`\r\n  min-width: 8.125rem;\r\n  background-color: ${({ theme }) => theme.bg3};\r\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\r\n    0px 24px 32px rgba(0, 0, 0, 0.01);\r\n  border-radius: 12px;\r\n  padding: 0.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 1rem;\r\n  position: absolute;\r\n  top: 4rem;\r\n  right: 0rem;\r\n  z-index: 100;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    top: -17.25rem;\r\n  `};\r\n`\r\n\r\nconst MenuItem = styled(ExternalLink)`\r\n  flex: 1;\r\n  padding: 0.5rem 0.5rem;\r\n  color: ${({ theme }) => theme.text2};\r\n  :hover {\r\n    color: ${({ theme }) => theme.text1};\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n  }\r\n  > svg {\r\n    margin-right: 8px;\r\n  }\r\n`\r\n\r\nconst CODE_LINK = 'https://github.com/Uniswap/uniswap-interface'\r\n\r\nexport default function Menu() {\r\n  const node = useRef<HTMLDivElement>()\r\n  const open = useModalOpen(ApplicationModal.MENU)\r\n  const toggle = useToggleModal(ApplicationModal.MENU)\r\n  useOnClickOutside(node, open ? toggle : undefined)\r\n\r\n  return (\r\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30451\r\n    <StyledMenu ref={node as any}>\r\n      <StyledMenuButton onClick={toggle}>\r\n        <StyledMenuIcon />\r\n      </StyledMenuButton>\r\n\r\n      {open && (\r\n        <MenuFlyout>\r\n          <MenuItem id=\"link\" href=\"https://uniswap.org/\">\r\n            <Info size={14} />\r\n            About\r\n          </MenuItem>\r\n          <MenuItem id=\"link\" href=\"https://uniswap.org/docs/v2\">\r\n            <BookOpen size={14} />\r\n            Docs\r\n          </MenuItem>\r\n          <MenuItem id=\"link\" href={CODE_LINK}>\r\n            <Code size={14} />\r\n            Code\r\n          </MenuItem>\r\n          <MenuItem id=\"link\" href=\"https://discord.gg/FCfyBSbCU5\">\r\n            <MessageCircle size={14} />\r\n            Discord\r\n          </MenuItem>\r\n        </MenuFlyout>\r\n      )}\r\n    </StyledMenu>\r\n  )\r\n}\r\n","import { RefObject, useEffect, useRef } from 'react'\r\n\r\nexport function useOnClickOutside<T extends HTMLElement>(\r\n  node: RefObject<T | undefined>,\r\n  handler: undefined | (() => void)\r\n) {\r\n  const handlerRef = useRef<undefined | (() => void)>(handler)\r\n  useEffect(() => {\r\n    handlerRef.current = handler\r\n  }, [handler])\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (e: MouseEvent) => {\r\n      if (node.current?.contains(e.target as Node) ?? false) {\r\n        return\r\n      }\r\n      if (handlerRef.current) handlerRef.current()\r\n    }\r\n\r\n    document.addEventListener('mousedown', handleClickOutside)\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside)\r\n    }\r\n  }, [node])\r\n}\r\n","import styled from 'styled-components'\r\nimport { Box } from 'rebass/styled-components'\r\n\r\nconst Row = styled(Box)<{\r\n  width?: string\r\n  align?: string\r\n  justify?: string\r\n  padding?: string\r\n  border?: string\r\n  borderRadius?: string\r\n}>`\r\n  width: ${({ width }) => width ?? '100%'};\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: ${({ align }) => align ?? 'center'};\r\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`\r\n\r\nexport const RowBetween = styled(Row)`\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const RowFlat = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\r\n  flex-wrap: wrap;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n  justify-content: ${({ justify }) => justify && justify};\r\n\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`\r\n\r\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\r\n  width: fit-content;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n`\r\n\r\nexport const ResponsiveRow = styled(RowBetween)`\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    flex-direction: column;\r\n    row-gap: 1rem;\r\n  `};\r\n`\r\n\r\nexport default Row\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { TokenData, TokenChartEntry } from './reducer'\r\nimport { PriceChartEntry, Transaction } from 'types'\r\n\r\n// protocol wide info\r\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('tokens/updateTokenData')\r\n\r\n// add token address to byAddress\r\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('tokens/addTokenKeys')\r\n\r\n// add list of pools token is in\r\nexport const addPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\r\n  'tokens/addPoolAddresses'\r\n)\r\n\r\n// tvl and volume data over time\r\nexport const updateChartData = createAction<{ tokenAddress: string; chartData: TokenChartEntry[] }>(\r\n  'tokens/updateChartData'\r\n)\r\n\r\n// transactions\r\nexport const updateTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\r\n  'tokens/updateTransactions'\r\n)\r\n\r\n// price data at arbitrary intervals\r\nexport const updatePriceData = createAction<{\r\n  tokenAddress: string\r\n  secondsInterval: number\r\n  priceData: PriceChartEntry[] | undefined\r\n  oldestFetchedTimestamp: number\r\n}>('tokens/updatePriceData')\r\n","import { ApolloClient, InMemoryCache } from '@apollo/client'\r\n\r\nexport const client = new ApolloClient({\r\n  uri: 'https://api.thegraph.com/subgraphs/name/james485713/t3-subgraphs1',\r\n  cache: new InMemoryCache(),\r\n  queryDeduplication: true,\r\n  defaultOptions: {\r\n    watchQuery: {\r\n      fetchPolicy: 'no-cache',\r\n    },\r\n    query: {\r\n      fetchPolicy: 'no-cache',\r\n      errorPolicy: 'all',\r\n    },\r\n  },\r\n})\r\n\r\nexport const healthClient = new ApolloClient({\r\n  uri: 'https://api.thegraph.com/index-node/graphql',\r\n  cache: new InMemoryCache(),\r\n})\r\n\r\nexport const blockClient = new ApolloClient({\r\n  uri: 'https://api.thegraph.com/subgraphs/name/pancakeswap/blocks',\r\n  cache: new InMemoryCache(),\r\n  queryDeduplication: true,\r\n  defaultOptions: {\r\n    watchQuery: {\r\n      fetchPolicy: 'network-only',\r\n    },\r\n    query: {\r\n      fetchPolicy: 'network-only',\r\n      errorPolicy: 'all',\r\n    },\r\n  },\r\n})\r\n","import gql from 'graphql-tag'\r\nimport { client } from 'apollo/client'\r\n\r\nexport const POOLS_FOR_TOKEN = gql`\r\n  query topPools($address: Bytes!) {\r\n    asToken0: pools(first: 200, orderBy: totalValueLockedUSD, orderDirection: desc, where: { token0: $address }) {\r\n      id\r\n    }\r\n    asToken1: pools(first: 200, orderBy: totalValueLockedUSD, orderDirection: desc, where: { token1: $address }) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\ninterface PoolsForTokenResponse {\r\n  asToken0: {\r\n    id: string\r\n  }[]\r\n  asToken1: {\r\n    id: string\r\n  }[]\r\n}\r\n\r\n/**\r\n * Fetch top addresses by volume\r\n */\r\nexport async function fetchPoolsForToken(\r\n  address: string\r\n): Promise<{\r\n  loading: boolean\r\n  error: boolean\r\n  addresses: string[] | undefined\r\n}> {\r\n  try {\r\n    const { loading, error, data } = await client.query<PoolsForTokenResponse>({\r\n      query: POOLS_FOR_TOKEN,\r\n      variables: {\r\n        address: address,\r\n      },\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n\r\n    if (loading || error || !data) {\r\n      return {\r\n        loading,\r\n        error: Boolean(error),\r\n        addresses: undefined,\r\n      }\r\n    }\r\n\r\n    const formattedData = data.asToken0.concat(data.asToken1).map((p) => p.id)\r\n\r\n    return {\r\n      loading,\r\n      error: Boolean(error),\r\n      addresses: formattedData,\r\n    }\r\n  } catch {\r\n    return {\r\n      loading: false,\r\n      error: true,\r\n      addresses: undefined,\r\n    }\r\n  }\r\n}\r\n","import dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\r\nimport gql from 'graphql-tag'\r\nimport { client } from 'apollo/client'\r\nimport { TokenChartEntry } from 'state/tokens/reducer'\r\n\r\n// format dayjs with the libraries that we need\r\ndayjs.extend(utc)\r\ndayjs.extend(weekOfYear)\r\nconst ONE_DAY_UNIX = 24 * 60 * 60\r\n\r\nconst TOKEN_CHART = gql`\r\n  query tokenDayDatas($startTime: Int!, $skip: Int!, $address: Bytes!) {\r\n    tokenDayDatas(\r\n      first: 1000\r\n      skip: $skip\r\n      where: { token: $address, date_gt: $startTime }\r\n      orderBy: date\r\n      orderDirection: asc\r\n    ) {\r\n      date\r\n      volumeUSD\r\n      totalValueLockedUSD\r\n    }\r\n  }\r\n`\r\n\r\ninterface ChartResults {\r\n  tokenDayDatas: {\r\n    date: number\r\n    volumeUSD: string\r\n    totalValueLockedUSD: string\r\n  }[]\r\n}\r\n\r\nexport async function fetchTokenChartData(address: string) {\r\n  let data: {\r\n    date: number\r\n    volumeUSD: string\r\n    totalValueLockedUSD: string\r\n  }[] = []\r\n  const startTimestamp = 1619170975\r\n  const endTimestamp = dayjs.utc().unix()\r\n\r\n  let error = false\r\n  let skip = 0\r\n  let allFound = false\r\n\r\n  try {\r\n    while (!allFound) {\r\n      const { data: chartResData, error, loading } = await client.query<ChartResults>({\r\n        query: TOKEN_CHART,\r\n        variables: {\r\n          address: address,\r\n          startTime: startTimestamp,\r\n          skip,\r\n        },\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      if (!loading) {\r\n        skip += 1000\r\n        if (chartResData.tokenDayDatas.length < 1000 || error) {\r\n          allFound = true\r\n        }\r\n        if (chartResData) {\r\n          data = data.concat(chartResData.tokenDayDatas)\r\n        }\r\n      }\r\n    }\r\n  } catch {\r\n    error = true\r\n  }\r\n\r\n  if (data) {\r\n    const formattedExisting = data.reduce((accum: { [date: number]: TokenChartEntry }, dayData) => {\r\n      const roundedDate = parseInt((dayData.date / ONE_DAY_UNIX).toFixed(0))\r\n      accum[roundedDate] = {\r\n        date: dayData.date,\r\n        volumeUSD: parseFloat(dayData.volumeUSD),\r\n        totalValueLockedUSD: parseFloat(dayData.totalValueLockedUSD),\r\n      }\r\n      return accum\r\n    }, {})\r\n\r\n    const firstEntry = formattedExisting[parseInt(Object.keys(formattedExisting)[0])]\r\n\r\n    // fill in empty days ( there will be no day datas if no trades made that day )\r\n    let timestamp = firstEntry?.date ?? startTimestamp\r\n    let latestTvl = firstEntry?.totalValueLockedUSD ?? 0\r\n    while (timestamp < endTimestamp - ONE_DAY_UNIX) {\r\n      const nextDay = timestamp + ONE_DAY_UNIX\r\n      const currentDayIndex = parseInt((nextDay / ONE_DAY_UNIX).toFixed(0))\r\n      if (!Object.keys(formattedExisting).includes(currentDayIndex.toString())) {\r\n        formattedExisting[currentDayIndex] = {\r\n          date: nextDay,\r\n          volumeUSD: 0,\r\n          totalValueLockedUSD: latestTvl,\r\n        }\r\n      } else {\r\n        latestTvl = formattedExisting[currentDayIndex].totalValueLockedUSD\r\n      }\r\n      timestamp = nextDay\r\n    }\r\n\r\n    const dateMap = Object.keys(formattedExisting).map((key) => {\r\n      return formattedExisting[parseInt(key)]\r\n    })\r\n\r\n    return {\r\n      data: dateMap,\r\n      error: false,\r\n    }\r\n  } else {\r\n    return {\r\n      data: undefined,\r\n      error,\r\n    }\r\n  }\r\n}\r\n","import { ApolloClient, NormalizedCacheObject } from '@apollo/client'\r\nimport dayjs from 'dayjs'\r\n\r\n/**\r\n * Used to get large amounts of data when\r\n * @param query\r\n * @param localClient\r\n * @param vars - any variables that are passed in every query\r\n * @param values - the keys that are used as the values to map over if\r\n * @param skipCount - amount of entities to skip per query\r\n */\r\nexport async function splitQuery<Type>(\r\n  query: any,\r\n  client: ApolloClient<NormalizedCacheObject>,\r\n  vars: any[],\r\n  values: any[],\r\n  skipCount = 1000\r\n) {\r\n  let fetchedData = {}\r\n  let allFound = false\r\n  let skip = 0\r\n  try {\r\n    while (!allFound) {\r\n      let end = values.length\r\n      if (skip + skipCount < values.length) {\r\n        end = skip + skipCount\r\n      }\r\n      const sliced = values.slice(skip, end)\r\n      const result = await client.query<Type>({\r\n        query: query(...vars, sliced),\r\n        fetchPolicy: 'network-only',\r\n      })\r\n      fetchedData = {\r\n        ...fetchedData,\r\n        ...result.data,\r\n      }\r\n      if (Object.keys(result.data).length < skipCount || skip + skipCount > values.length) {\r\n        allFound = true\r\n      } else {\r\n        skip += skipCount\r\n      }\r\n    }\r\n    return fetchedData\r\n  } catch (e) {\r\n    console.log(e)\r\n    return undefined\r\n  }\r\n}\r\n\r\nexport function useDeltaTimestamps(): [number, number, number] {\r\n  const utcCurrentTime = dayjs()\r\n  const t1 = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\r\n  const t2 = utcCurrentTime.subtract(2, 'day').startOf('minute').unix()\r\n  const tWeek = utcCurrentTime.subtract(1, 'week').startOf('minute').unix()\r\n  return [t1, t2, tWeek]\r\n}\r\n","import gql from 'graphql-tag'\r\nimport { useState, useEffect, useMemo } from 'react'\r\nimport { splitQuery } from 'utils/queries'\r\nimport { blockClient } from 'apollo/client'\r\n\r\nexport const GET_BLOCKS = (timestamps: string[]) => {\r\n  let queryString = 'query blocks {'\r\n  queryString += timestamps.map((timestamp) => {\r\n    return `t${timestamp}:blocks(first: 1, orderBy: timestamp, orderDirection: desc, where: { timestamp_gt: ${timestamp}, timestamp_lt: ${\r\n      timestamp + 600\r\n    } }) {\r\n        number\r\n      }`\r\n  })\r\n  queryString += '}'\r\n  return gql(queryString)\r\n}\r\n\r\n/**\r\n * for a given array of timestamps, returns block entities\r\n * @param timestamps\r\n */\r\nexport function useBlocksFromTimestamps(\r\n  timestamps: number[]\r\n): {\r\n  blocks:\r\n    | {\r\n        timestamp: string\r\n        number: any\r\n      }[]\r\n    | undefined\r\n  error: boolean\r\n} {\r\n  const [blocks, setBlocks] = useState<any>()\r\n  const [error, setError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const results = await splitQuery(GET_BLOCKS, blockClient, [], timestamps)\r\n      if (results) {\r\n        setBlocks(results)\r\n      } else {\r\n        setError(true)\r\n      }\r\n    }\r\n    if (!blocks && !error) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n  const blocksFormatted = useMemo(() => {\r\n    if (blocks) {\r\n      const formatted = []\r\n      for (const t in blocks) {\r\n        if (blocks[t].length > 0) {\r\n          formatted.push({\r\n            timestamp: t.split('t')[1],\r\n            number: blocks[t][0]['number'],\r\n          })\r\n        }\r\n      }\r\n      return formatted\r\n    }\r\n    return undefined\r\n  }, [blocks])\r\n\r\n  return {\r\n    blocks: blocksFormatted,\r\n    error,\r\n  }\r\n}\r\n\r\n/**\r\n * @notice Fetches block objects for an array of timestamps.\r\n * @dev blocks are returned in chronological order (ASC) regardless of input.\r\n * @dev blocks are returned at string representations of Int\r\n * @dev timestamps are returns as they were provided; not the block time.\r\n * @param {Array} timestamps\r\n */\r\nexport async function getBlocksFromTimestamps(timestamps: number[], skipCount = 500) {\r\n  if (timestamps?.length === 0) {\r\n    return []\r\n  }\r\n  const fetchedData: any = await splitQuery(GET_BLOCKS, blockClient, [], timestamps, skipCount)\r\n\r\n  const blocks: any[] = []\r\n  if (fetchedData) {\r\n    for (const t in fetchedData) {\r\n      if (fetchedData[t].length > 0) {\r\n        blocks.push({\r\n          timestamp: t.split('t')[1],\r\n          number: fetchedData[t][0]['number'],\r\n        })\r\n      }\r\n    }\r\n  }\r\n  return blocks\r\n}\r\n","import dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\r\nimport gql from 'graphql-tag'\r\nimport { client } from 'apollo/client'\r\nimport { getBlocksFromTimestamps } from 'hooks/useBlocksFromTimestamps'\r\nimport { splitQuery } from 'utils/queries'\r\nimport { PriceChartEntry } from 'types'\r\n\r\n// format dayjs with the libraries that we need\r\ndayjs.extend(utc)\r\ndayjs.extend(weekOfYear)\r\n\r\nexport const PRICES_BY_BLOCK = (tokenAddress: string, blocks: any) => {\r\n  let queryString = 'query blocks {'\r\n  queryString += blocks.map(\r\n    (block: any) => `\r\n      t${block.timestamp}:token(id:\"${tokenAddress}\", block: { number: ${block.number} }) { \r\n        derivedETH\r\n      }\r\n    `\r\n  )\r\n  queryString += ','\r\n  queryString += blocks.map(\r\n    (block: any) => `\r\n      b${block.timestamp}: bundle(id:\"1\", block: { number: ${block.number} }) { \r\n        ethPriceUSD\r\n      }\r\n    `\r\n  )\r\n\r\n  queryString += '}'\r\n  return gql(queryString)\r\n}\r\n\r\nexport async function fetchTokenPriceData(\r\n  address: string,\r\n  interval: number,\r\n  startTimestamp: number\r\n): Promise<{\r\n  data: PriceChartEntry[]\r\n  error: boolean\r\n}> {\r\n  // start and end bounds\r\n\r\n  try {\r\n    const endTimestamp = dayjs.utc().unix()\r\n\r\n    if (!startTimestamp) {\r\n      console.log('Error constructing price start timestamp')\r\n      return {\r\n        data: [],\r\n        error: false,\r\n      }\r\n    }\r\n\r\n    // create an array of hour start times until we reach current hour\r\n    const timestamps = []\r\n    let time = startTimestamp\r\n    while (time <= endTimestamp) {\r\n      timestamps.push(time)\r\n      time += interval\r\n    }\r\n\r\n    // backout if invalid timestamp format\r\n    if (timestamps.length === 0) {\r\n      return {\r\n        data: [],\r\n        error: false,\r\n      }\r\n    }\r\n\r\n    // fetch blocks based on timestamp\r\n    const blocks = await getBlocksFromTimestamps(timestamps, 500)\r\n    if (!blocks || blocks.length === 0) {\r\n      console.log('Error fetching blocks')\r\n      return {\r\n        data: [],\r\n        error: false,\r\n      }\r\n    }\r\n\r\n    const prices: any | undefined = await splitQuery(PRICES_BY_BLOCK, client, [address], blocks, 200)\r\n    const pricesCopy = Object.assign([], prices)\r\n\r\n    if (prices && pricesCopy) {\r\n      // format token ETH price results\r\n      const values: {\r\n        timestamp: string\r\n        derivedETH: number | undefined\r\n        priceUSD: number\r\n      }[] = []\r\n\r\n      for (const row in prices) {\r\n        const timestamp = row.split('t')[1]\r\n        const derivedETH = prices[row]?.derivedETH ? parseFloat(prices[row]?.derivedETH) : undefined\r\n        if (timestamp && derivedETH) {\r\n          values.push({\r\n            timestamp,\r\n            derivedETH,\r\n            priceUSD: 0,\r\n          })\r\n        }\r\n      }\r\n\r\n      // go through eth usd prices and assign to original values array\r\n      let index = 0\r\n      for (const brow in pricesCopy) {\r\n        const timestamp = brow.split('b')[1]\r\n        const derivedETH = values[index]?.derivedETH\r\n        if (timestamp && derivedETH) {\r\n          values[index].priceUSD = parseFloat(pricesCopy[brow]?.ethPriceUSD ?? 0) * derivedETH\r\n          index += 1\r\n        }\r\n      }\r\n\r\n      const formattedHistory = []\r\n\r\n      // for each hour, construct the open and close price\r\n      for (let i = 0; i < values.length - 1; i++) {\r\n        formattedHistory.push({\r\n          time: parseFloat(values[i].timestamp),\r\n          open: values[i].priceUSD,\r\n          close: values[i + 1].priceUSD,\r\n          high: values[i + 1].priceUSD,\r\n          low: values[i].priceUSD,\r\n        })\r\n      }\r\n\r\n      return { data: formattedHistory, error: false }\r\n    } else {\r\n      console.log('no price data loaded')\r\n      return {\r\n        data: [],\r\n        error: false,\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n    return {\r\n      data: [],\r\n      error: true,\r\n    }\r\n  }\r\n}\r\n","export interface Block {\r\n  number: number\r\n  timestamp: string\r\n}\r\n\r\nexport interface ChartDayData {\r\n  date: number\r\n  volumeUSD: number\r\n  tvlUSD: number\r\n}\r\n\r\nexport enum TransactionType {\r\n  SWAP,\r\n  MINT,\r\n  BURN,\r\n}\r\n\r\nexport type Transaction = {\r\n  type: TransactionType\r\n  hash: string\r\n  timestamp: string\r\n  sender: string\r\n  token0Symbol: string\r\n  token1Symbol: string\r\n  token0Address: string\r\n  token1Address: string\r\n  amountUSD: number\r\n  amountToken0: number\r\n  amountToken1: number\r\n}\r\n\r\n/**\r\n * Formatted type for Candlestick charts\r\n */\r\nexport type PriceChartEntry = {\r\n  time: number // unix timestamp\r\n  open: number\r\n  close: number\r\n  high: number\r\n  low: number\r\n}\r\n","import { Token } from '@uniswap/sdk-core'\r\nimport { WETH_ADDRESS } from '../constants/index'\r\n\r\nexport interface SerializedToken {\r\n  chainId: number\r\n  address: string\r\n  decimals: number\r\n  symbol?: string\r\n  name?: string\r\n}\r\n\r\nexport function serializeToken(token: Token): SerializedToken {\r\n  return {\r\n    chainId: token.chainId,\r\n    address: token.address,\r\n    decimals: token.decimals,\r\n    symbol: token.symbol,\r\n    name: token.name,\r\n  }\r\n}\r\n\r\nexport function deserializeToken(serializedToken: SerializedToken): Token {\r\n  return new Token(\r\n    serializedToken.chainId,\r\n    serializedToken.address,\r\n    serializedToken.decimals,\r\n    serializedToken.symbol,\r\n    serializedToken.name\r\n  )\r\n}\r\n\r\nexport function formatTokenSymbol(address: string, symbol: string) {\r\n  if (address === WETH_ADDRESS) {\r\n    return 'ETH'\r\n  }\r\n  return symbol\r\n}\r\n\r\nexport function formatTokenName(address: string, name: string) {\r\n  if (address === WETH_ADDRESS) {\r\n    return 'Ether'\r\n  }\r\n  return name\r\n}\r\n","import { client } from 'apollo/client'\r\nimport gql from 'graphql-tag'\r\nimport { Transaction, TransactionType } from 'types'\r\nimport { formatTokenSymbol } from 'utils/tokens'\r\n\r\nconst GLOBAL_TRANSACTIONS = gql`\r\n  query transactions($address: Bytes!) {\r\n    mintsAs0: mints(first: 500, orderBy: timestamp, orderDirection: desc, where: { token0: $address }) {\r\n      timestamp\r\n      transaction {\r\n        id\r\n      }\r\n      pool {\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      owner\r\n      sender\r\n      origin\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n    mintsAs1: mints(first: 500, orderBy: timestamp, orderDirection: desc, where: { token0: $address }) {\r\n      timestamp\r\n      transaction {\r\n        id\r\n      }\r\n      pool {\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      owner\r\n      sender\r\n      origin\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n    swapsAs0: swaps(first: 500, orderBy: timestamp, orderDirection: desc, where: { token0: $address }) {\r\n      timestamp\r\n      transaction {\r\n        id\r\n      }\r\n      pool {\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      origin\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n    swapsAs1: swaps(first: 500, orderBy: timestamp, orderDirection: desc, where: { token1: $address }) {\r\n      timestamp\r\n      transaction {\r\n        id\r\n      }\r\n      pool {\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      origin\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n    burnsAs0: burns(first: 500, orderBy: timestamp, orderDirection: desc, where: { token0: $address }) {\r\n      timestamp\r\n      transaction {\r\n        id\r\n      }\r\n      pool {\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      owner\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n    burnsAs1: burns(first: 500, orderBy: timestamp, orderDirection: desc, where: { token1: $address }) {\r\n      timestamp\r\n      transaction {\r\n        id\r\n      }\r\n      pool {\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      owner\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n  }\r\n`\r\n\r\ninterface TransactionResults {\r\n  mintsAs0: {\r\n    timestamp: string\r\n    transaction: {\r\n      id: string\r\n    }\r\n    pool: {\r\n      token0: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n      token1: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n    }\r\n    origin: string\r\n    amount0: string\r\n    amount1: string\r\n    amountUSD: string\r\n  }[]\r\n  mintsAs1: {\r\n    timestamp: string\r\n    transaction: {\r\n      id: string\r\n    }\r\n    pool: {\r\n      token0: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n      token1: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n    }\r\n    origin: string\r\n    amount0: string\r\n    amount1: string\r\n    amountUSD: string\r\n  }[]\r\n  swapsAs0: {\r\n    timestamp: string\r\n    transaction: {\r\n      id: string\r\n    }\r\n    pool: {\r\n      token0: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n      token1: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n    }\r\n    origin: string\r\n    amount0: string\r\n    amount1: string\r\n    amountUSD: string\r\n  }[]\r\n  swapsAs1: {\r\n    timestamp: string\r\n    transaction: {\r\n      id: string\r\n    }\r\n    pool: {\r\n      token0: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n      token1: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n    }\r\n    origin: string\r\n    amount0: string\r\n    amount1: string\r\n    amountUSD: string\r\n  }[]\r\n  burnsAs0: {\r\n    timestamp: string\r\n    transaction: {\r\n      id: string\r\n    }\r\n    pool: {\r\n      token0: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n      token1: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n    }\r\n    owner: string\r\n    amount0: string\r\n    amount1: string\r\n    amountUSD: string\r\n  }[]\r\n  burnsAs1: {\r\n    timestamp: string\r\n    transaction: {\r\n      id: string\r\n    }\r\n    pool: {\r\n      token0: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n      token1: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n    }\r\n    owner: string\r\n    amount0: string\r\n    amount1: string\r\n    amountUSD: string\r\n  }[]\r\n}\r\n\r\nexport async function fetchTokenTransactions(\r\n  address: string\r\n): Promise<{ data: Transaction[] | undefined; error: boolean; loading: boolean }> {\r\n  try {\r\n    const { data, error, loading } = await client.query<TransactionResults>({\r\n      query: GLOBAL_TRANSACTIONS,\r\n      variables: {\r\n        address: address,\r\n      },\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n\r\n    if (error) {\r\n      return {\r\n        data: undefined,\r\n        error: true,\r\n        loading: false,\r\n      }\r\n    }\r\n\r\n    if (loading && !data) {\r\n      return {\r\n        data: undefined,\r\n        error: false,\r\n        loading: true,\r\n      }\r\n    }\r\n\r\n    const mints0 = data.mintsAs0.map((m) => {\r\n      return {\r\n        type: TransactionType.MINT,\r\n        hash: m.transaction.id,\r\n        timestamp: m.timestamp,\r\n        sender: m.origin,\r\n        token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\r\n        token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\r\n        token0Address: m.pool.token0.id,\r\n        token1Address: m.pool.token1.id,\r\n        amountUSD: parseFloat(m.amountUSD),\r\n        amountToken0: parseFloat(m.amount0),\r\n        amountToken1: parseFloat(m.amount1),\r\n      }\r\n    })\r\n    const mints1 = data.mintsAs1.map((m) => {\r\n      return {\r\n        type: TransactionType.MINT,\r\n        hash: m.transaction.id,\r\n        timestamp: m.timestamp,\r\n        sender: m.origin,\r\n        token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\r\n        token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\r\n        token0Address: m.pool.token0.id,\r\n        token1Address: m.pool.token1.id,\r\n        amountUSD: parseFloat(m.amountUSD),\r\n        amountToken0: parseFloat(m.amount0),\r\n        amountToken1: parseFloat(m.amount1),\r\n      }\r\n    })\r\n\r\n    const burns0 = data.burnsAs0.map((m) => {\r\n      return {\r\n        type: TransactionType.BURN,\r\n        hash: m.transaction.id,\r\n        timestamp: m.timestamp,\r\n        sender: m.owner,\r\n        token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\r\n        token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\r\n        token0Address: m.pool.token0.id,\r\n        token1Address: m.pool.token1.id,\r\n        amountUSD: parseFloat(m.amountUSD),\r\n        amountToken0: parseFloat(m.amount0),\r\n        amountToken1: parseFloat(m.amount1),\r\n      }\r\n    })\r\n    const burns1 = data.burnsAs1.map((m) => {\r\n      return {\r\n        type: TransactionType.BURN,\r\n        hash: m.transaction.id,\r\n        timestamp: m.timestamp,\r\n        sender: m.owner,\r\n        token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\r\n        token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\r\n        token0Address: m.pool.token0.id,\r\n        token1Address: m.pool.token1.id,\r\n        amountUSD: parseFloat(m.amountUSD),\r\n        amountToken0: parseFloat(m.amount0),\r\n        amountToken1: parseFloat(m.amount1),\r\n      }\r\n    })\r\n\r\n    const swaps0 = data.swapsAs0.map((m) => {\r\n      return {\r\n        type: TransactionType.SWAP,\r\n        hash: m.transaction.id,\r\n        timestamp: m.timestamp,\r\n        sender: m.origin,\r\n        token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\r\n        token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\r\n        token0Address: m.pool.token0.id,\r\n        token1Address: m.pool.token1.id,\r\n        amountUSD: parseFloat(m.amountUSD),\r\n        amountToken0: parseFloat(m.amount0),\r\n        amountToken1: parseFloat(m.amount1),\r\n      }\r\n    })\r\n\r\n    const swaps1 = data.swapsAs1.map((m) => {\r\n      return {\r\n        type: TransactionType.SWAP,\r\n        hash: m.transaction.id,\r\n        timestamp: m.timestamp,\r\n        sender: m.origin,\r\n        token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\r\n        token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\r\n        token0Address: m.pool.token0.id,\r\n        token1Address: m.pool.token1.id,\r\n        amountUSD: parseFloat(m.amountUSD),\r\n        amountToken0: parseFloat(m.amount0),\r\n        amountToken1: parseFloat(m.amount1),\r\n      }\r\n    })\r\n\r\n    return { data: [...mints0, ...mints1, ...burns0, ...burns1, ...swaps0, ...swaps1], error: false, loading: false }\r\n  } catch {\r\n    return {\r\n      data: undefined,\r\n      error: true,\r\n      loading: false,\r\n    }\r\n  }\r\n}\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { getAddress } from '@ethersproject/address'\r\nimport { AddressZero } from '@ethersproject/constants'\r\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\r\nimport { ROUTER_ADDRESS } from '../constants'\r\nimport { ChainId, Percent, Token, CurrencyAmount, Fraction, Currency } from '@uniswap/sdk-core'\r\nimport JSBI from 'jsbi'\r\nimport { TokenAddressMap } from '../state/lists/hooks'\r\n\r\n// returns the checksummed address if the address is valid, otherwise returns false\r\nexport function isAddress(value: any): string | false {\r\n  try {\r\n    return getAddress(value)\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\nconst ETHERSCAN_PREFIXES: { [chainId in ChainId]: string } = {\r\n  1: '',\r\n  3: 'ropsten.',\r\n  4: 'rinkeby.',\r\n  5: 'goerli.',\r\n  42: 'kovan.',\r\n}\r\n\r\nexport function getEtherscanLink(\r\n  chainId: ChainId,\r\n  data: string,\r\n  type: 'transaction' | 'token' | 'address' | 'block'\r\n): string {\r\n  const prefix = `https://${ETHERSCAN_PREFIXES[chainId] || ETHERSCAN_PREFIXES[1]}etherscan.io`\r\n\r\n  switch (type) {\r\n    case 'transaction': {\r\n      return `${prefix}/tx/${data}`\r\n    }\r\n    case 'token': {\r\n      return `${prefix}/token/${data}`\r\n    }\r\n    case 'block': {\r\n      return `${prefix}/block/${data}`\r\n    }\r\n    case 'address':\r\n    default: {\r\n      return `${prefix}/address/${data}`\r\n    }\r\n  }\r\n}\r\n\r\nexport const currentTimestamp = () => new Date().getTime()\r\n\r\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\r\nexport function shortenAddress(address: string, chars = 4): string {\r\n  const parsed = isAddress(address)\r\n  if (!parsed) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`)\r\n  }\r\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\r\n}\r\n\r\n// add 10%\r\nexport function calculateGasMargin(value: BigNumber): BigNumber {\r\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\r\n}\r\n\r\n// converts a basis points value to a sdk percent\r\nexport function basisPointsToPercent(num: number): Percent {\r\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\r\n}\r\n\r\nconst ONE = new Fraction(1, 1)\r\nexport function calculateSlippageAmount(value: CurrencyAmount<Currency>, slippage: Percent): [JSBI, JSBI] {\r\n  if (slippage.lessThan(0) || slippage.greaterThan(ONE)) throw new Error('Unexpected slippage')\r\n  return [value.multiply(ONE.subtract(slippage)).quotient, value.multiply(ONE.add(slippage)).quotient]\r\n}\r\n// account is not optional\r\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\r\n  return library.getSigner(account).connectUnchecked()\r\n}\r\n\r\n// account is optional\r\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\r\n  return account ? getSigner(library, account) : library\r\n}\r\n\r\n// account is optional\r\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\r\n  if (!isAddress(address) || address === AddressZero) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`)\r\n  }\r\n\r\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\r\n}\r\n\r\n// account is optional\r\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\r\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\r\n}\r\n\r\nexport function escapeRegExp(string: string): string {\r\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\r\n}\r\n\r\nexport function isTokenOnList(tokenAddressMap: TokenAddressMap, token?: Token): boolean {\r\n  return Boolean(token?.isToken && tokenAddressMap[token.chainId as ChainId]?.[token.address])\r\n}\r\n\r\nexport function feeTierPercent(fee: number): string {\r\n  return (fee / 10000).toPrecision(1) + '%'\r\n}\r\n\r\nexport function notEmpty<TValue>(value: TValue | null | undefined): value is TValue {\r\n  return value !== null && value !== undefined\r\n}\r\n\r\n/**\r\n * Returns chain id if chain from chainId supports WETH\r\n * if not, return undefined\r\n * @param chainId\r\n */\r\nexport function supportedChainId(chainId: number): ChainId | undefined {\r\n  if (chainId in ChainId) {\r\n    return chainId\r\n  }\r\n  return undefined\r\n}\r\n","import { AppState, AppDispatch } from './../index'\r\nimport { TokenData, TokenChartEntry } from './reducer'\r\nimport { useCallback, useEffect, useState, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  updateTokenData,\r\n  addTokenKeys,\r\n  addPoolAddresses,\r\n  updateChartData,\r\n  updatePriceData,\r\n  updateTransactions,\r\n} from './actions'\r\nimport { isAddress } from 'ethers/lib/utils'\r\nimport { fetchPoolsForToken } from 'data/tokens/poolsForToken'\r\nimport { fetchTokenChartData } from 'data/tokens/chartData'\r\nimport { fetchTokenPriceData } from 'data/tokens/priceData'\r\nimport { fetchTokenTransactions } from 'data/tokens/transactions'\r\nimport { PriceChartEntry, Transaction } from 'types'\r\nimport { notEmpty } from 'utils'\r\nimport dayjs, { OpUnitType } from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\n// format dayjs with the libraries that we need\r\ndayjs.extend(utc)\r\n\r\nexport function useAllTokenData(): {\r\n  [address: string]: { data: TokenData | undefined; lastUpdated: number | undefined }\r\n} {\r\n  return useSelector((state: AppState) => state.tokens.byAddress)\r\n}\r\n\r\nexport function useUpdateTokenData(): (tokens: TokenData[]) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (tokens: TokenData[]) => {\r\n      dispatch(updateTokenData({ tokens }))\r\n    },\r\n    [dispatch]\r\n  )\r\n}\r\n\r\nexport function useAddTokenKeys(): (addresses: string[]) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback((tokenAddresses: string[]) => dispatch(addTokenKeys({ tokenAddresses })), [dispatch])\r\n}\r\n\r\nexport function useTokenDatas(addresses: string[] | undefined): TokenData[] | undefined {\r\n  const allTokenData = useAllTokenData()\r\n  const addTokenKeys = useAddTokenKeys()\r\n\r\n  // if token not tracked yet track it\r\n  addresses?.map((a) => {\r\n    if (!allTokenData[a]) {\r\n      addTokenKeys([a])\r\n    }\r\n  })\r\n\r\n  const data = useMemo(() => {\r\n    if (!addresses) {\r\n      return undefined\r\n    }\r\n    return addresses\r\n      .map((a) => {\r\n        return allTokenData[a]?.data\r\n      })\r\n      .filter(notEmpty)\r\n  }, [addresses, allTokenData])\r\n\r\n  return data\r\n}\r\n\r\nexport function useTokenData(address: string | undefined): TokenData | undefined {\r\n  const allTokenData = useAllTokenData()\r\n  const addTokenKeys = useAddTokenKeys()\r\n\r\n  // if invalid address return\r\n  if (!address || !isAddress(address)) {\r\n    return undefined\r\n  }\r\n\r\n  // if token not tracked yet track it\r\n  if (!allTokenData[address]) {\r\n    addTokenKeys([address])\r\n  }\r\n\r\n  // return data\r\n  return allTokenData[address]?.data\r\n}\r\n\r\n/**\r\n * Get top pools addresses that token is included in\r\n * If not loaded, fetch and store\r\n * @param address\r\n */\r\nexport function usePoolsForToken(address: string): string[] | undefined {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const token = useSelector((state: AppState) => state.tokens.byAddress[address])\r\n  const poolsForToken = token.poolAddresses\r\n  const [error, setError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      const { loading, error, addresses } = await fetchPoolsForToken(address)\r\n      if (!loading && !error && addresses) {\r\n        dispatch(addPoolAddresses({ tokenAddress: address, poolAddresses: addresses }))\r\n      }\r\n      if (error) {\r\n        setError(error)\r\n      }\r\n    }\r\n    if (!poolsForToken && !error) {\r\n      fetch()\r\n    }\r\n  }, [address, dispatch, error, poolsForToken])\r\n\r\n  // return data\r\n  return poolsForToken\r\n}\r\n\r\n/**\r\n * Get top pools addresses that token is included in\r\n * If not loaded, fetch and store\r\n * @param address\r\n */\r\nexport function useTokenChartData(address: string): TokenChartEntry[] | undefined {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const token = useSelector((state: AppState) => state.tokens.byAddress[address])\r\n  const chartData = token.chartData\r\n  const [error, setError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      const { error, data } = await fetchTokenChartData(address)\r\n      if (!error && data) {\r\n        dispatch(updateChartData({ tokenAddress: address, chartData: data }))\r\n      }\r\n      if (error) {\r\n        setError(error)\r\n      }\r\n    }\r\n    if (!chartData && !error) {\r\n      fetch()\r\n    }\r\n  }, [address, dispatch, error, chartData])\r\n\r\n  // return data\r\n  return chartData\r\n}\r\n\r\n/**\r\n * Get top pools addresses that token is included in\r\n * If not loaded, fetch and store\r\n * @param address\r\n */\r\nexport function useTokenPriceData(\r\n  address: string,\r\n  interval: number,\r\n  timeWindow: OpUnitType\r\n): PriceChartEntry[] | undefined {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const token = useSelector((state: AppState) => state.tokens.byAddress[address])\r\n  const priceData = token.priceData[interval]\r\n  const [error, setError] = useState(false)\r\n\r\n  // construct timestamps and check if we need to fetch more data\r\n  const oldestTimestampFetched = token.priceData.oldestFetchedTimestamp\r\n  const utcCurrentTime = dayjs()\r\n  const startTimestamp = utcCurrentTime.subtract(1, timeWindow).startOf('hour').unix()\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      const { data, error: fetchingError } = await fetchTokenPriceData(address, interval, startTimestamp)\r\n      if (data) {\r\n        dispatch(\r\n          updatePriceData({\r\n            tokenAddress: address,\r\n            secondsInterval: interval,\r\n            priceData: data,\r\n            oldestFetchedTimestamp: startTimestamp,\r\n          })\r\n        )\r\n      }\r\n      if (fetchingError) {\r\n        setError(true)\r\n      }\r\n    }\r\n    if (!priceData && !error) {\r\n      fetch()\r\n    }\r\n  }, [address, dispatch, error, interval, oldestTimestampFetched, priceData, startTimestamp, timeWindow])\r\n\r\n  // return data\r\n  return priceData\r\n}\r\n\r\n/**\r\n * Get top pools addresses that token is included in\r\n * If not loaded, fetch and store\r\n * @param address\r\n */\r\nexport function useTokenTransactions(address: string): Transaction[] | undefined {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const token = useSelector((state: AppState) => state.tokens.byAddress[address])\r\n  const transactions = token.transactions\r\n  const [error, setError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      const { error, data } = await fetchTokenTransactions(address)\r\n      if (error) {\r\n        setError(true)\r\n      } else if (data) {\r\n        dispatch(updateTransactions({ tokenAddress: address, transactions: data }))\r\n      }\r\n    }\r\n    if (!transactions && !error) {\r\n      fetch()\r\n    }\r\n  }, [address, dispatch, error, transactions])\r\n\r\n  // return data\r\n  return transactions\r\n}\r\n","/**\r\n * gets the amoutn difference plus the % change in change itself (second order change)\r\n * @param {*} valueNow\r\n * @param {*} value24HoursAgo\r\n * @param {*} value48HoursAgo\r\n */\r\nexport const get2DayChange = (valueNow: string, value24HoursAgo: string, value48HoursAgo: string): [number, number] => {\r\n  // get volume info for both 24 hour periods\r\n  const currentChange = parseFloat(valueNow) - parseFloat(value24HoursAgo)\r\n  const previousChange = parseFloat(value24HoursAgo) - parseFloat(value48HoursAgo)\r\n  const adjustedPercentChange = ((currentChange - previousChange) / previousChange) * 100\r\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\r\n    return [currentChange, 0]\r\n  }\r\n  return [currentChange, adjustedPercentChange]\r\n}\r\n\r\n/**\r\n * get standard percent change between two values\r\n * @param {*} valueNow\r\n * @param {*} value24HoursAgo\r\n */\r\nexport const getPercentChange = (valueNow: string | undefined, value24HoursAgo: string | undefined): number => {\r\n  if (valueNow && value24HoursAgo) {\r\n    const change = ((parseFloat(valueNow) - parseFloat(value24HoursAgo)) / parseFloat(value24HoursAgo)) * 100\r\n    if (isFinite(change)) return change\r\n  }\r\n  return 0\r\n}\r\n","import { useBlocksFromTimestamps } from 'hooks/useBlocksFromTimestamps'\r\nimport { useDeltaTimestamps } from 'utils/queries'\r\nimport { useState, useEffect, useMemo } from 'react'\r\nimport { client } from 'apollo/client'\r\nimport gql from 'graphql-tag'\r\n\r\nexport interface EthPrices {\r\n  current: number\r\n  oneDay: number\r\n  twoDay: number\r\n  week: number\r\n}\r\n\r\nexport const ETH_PRICES = gql`\r\n  query prices($block24: Int!, $block48: Int!, $blockWeek: Int!) {\r\n    current: bundles(first: 1) {\r\n      ethPriceUSD\r\n    }\r\n    oneDay: bundles(first: 1, block: { number: $block24 }) {\r\n      ethPriceUSD\r\n    }\r\n    twoDay: bundles(first: 1, block: { number: $block48 }) {\r\n      ethPriceUSD\r\n    }\r\n    oneWeek: bundles(first: 1, block: { number: $blockWeek }) {\r\n      ethPriceUSD\r\n    }\r\n  }\r\n`\r\n\r\ninterface PricesResponse {\r\n  current: {\r\n    ethPriceUSD: string\r\n  }[]\r\n  oneDay: {\r\n    ethPriceUSD: string\r\n  }[]\r\n  twoDay: {\r\n    ethPriceUSD: string\r\n  }[]\r\n  oneWeek: {\r\n    ethPriceUSD: string\r\n  }[]\r\n}\r\n\r\nasync function fetchEthPrices(\r\n  blocks: [number, number, number]\r\n): Promise<{ data: EthPrices | undefined; error: boolean }> {\r\n  try {\r\n    const { data, error } = await client.query<PricesResponse>({\r\n      query: ETH_PRICES,\r\n      variables: {\r\n        block24: blocks[0],\r\n        block48: blocks[1],\r\n        blockWeek: blocks[2],\r\n      },\r\n    })\r\n\r\n    if (error) {\r\n      return {\r\n        error: true,\r\n        data: undefined,\r\n      }\r\n    } else if (data) {\r\n      return {\r\n        data: {\r\n          current: parseFloat(data.current[0].ethPriceUSD ?? 0),\r\n          oneDay: parseFloat(data.oneDay[0]?.ethPriceUSD ?? 0),\r\n          twoDay: parseFloat(data.twoDay[0]?.ethPriceUSD ?? 0),\r\n          week: parseFloat(data.oneWeek[0]?.ethPriceUSD ?? 0),\r\n        },\r\n        error: false,\r\n      }\r\n    } else {\r\n      return {\r\n        data: undefined,\r\n        error: true,\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n    return {\r\n      data: undefined,\r\n      error: true,\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * returns eth prices at current, 24h, 48h, and 1k intervals\r\n */\r\nexport function useEthPrices(): EthPrices | undefined {\r\n  const [prices, setPrices] = useState<EthPrices | undefined>()\r\n  const [error, setError] = useState(false)\r\n\r\n  const [t24, t48, tWeek] = useDeltaTimestamps()\r\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24, t48, tWeek])\r\n\r\n  const formattedBlocks = useMemo(() => {\r\n    if (blocks) {\r\n      return blocks.map((b) => parseFloat(b.number))\r\n    }\r\n    return undefined\r\n  }, [blocks])\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      const { data, error } = await fetchEthPrices(formattedBlocks as [number, number, number])\r\n      if (error || blockError) {\r\n        setError(true)\r\n      } else if (data) {\r\n        setPrices(data)\r\n      }\r\n    }\r\n    if (!prices && !error && formattedBlocks) {\r\n      fetch()\r\n    }\r\n  }, [error, prices, formattedBlocks, blockError])\r\n\r\n  return prices\r\n}\r\n","import { getPercentChange } from './../../utils/data'\r\nimport { useQuery } from '@apollo/client'\r\nimport gql from 'graphql-tag'\r\nimport { useDeltaTimestamps } from 'utils/queries'\r\nimport { useBlocksFromTimestamps } from 'hooks/useBlocksFromTimestamps'\r\nimport { get2DayChange } from 'utils/data'\r\nimport { TokenData } from 'state/tokens/reducer'\r\nimport { useEthPrices } from 'hooks/useEthPrices'\r\nimport { formatTokenSymbol, formatTokenName } from 'utils/tokens'\r\n\r\nexport const TOKENS_BULK = (block: number | undefined, tokens: string[]) => {\r\n  let tokenString = `[`\r\n  tokens.map((address) => {\r\n    return (tokenString += `\"${address}\",`)\r\n  })\r\n  tokenString += ']'\r\n  const queryString =\r\n    `\r\n    query tokens {\r\n      tokens(where: {id_in: ${tokenString}},` +\r\n    (block ? `block: {number: ${block}} ,` : ``) +\r\n    ` orderBy: totalValueLockedUSD, orderDirection: desc) {\r\n        id\r\n        symbol\r\n        name\r\n        derivedETH\r\n        volumeUSD\r\n        volume\r\n        txCount\r\n        totalValueLocked\r\n        feesUSD\r\n        totalValueLockedUSD\r\n      }\r\n    }\r\n    `\r\n  return gql(queryString)\r\n}\r\n\r\ninterface TokenFields {\r\n  id: string\r\n  symbol: string\r\n  name: string\r\n  derivedETH: string\r\n  volumeUSD: string\r\n  volume: string\r\n  feesUSD: string\r\n  txCount: string\r\n  totalValueLocked: string\r\n  totalValueLockedUSD: string\r\n}\r\n\r\ninterface TokenDataResponse {\r\n  tokens: TokenFields[]\r\n  bundles: {\r\n    ethPriceUSD: string\r\n  }[]\r\n}\r\n\r\n/**\r\n * Fetch top addresses by volume\r\n */\r\nexport function useFetchedTokenDatas(\r\n  tokenAddresses: string[]\r\n): {\r\n  loading: boolean\r\n  error: boolean\r\n  data:\r\n    | {\r\n        [address: string]: TokenData\r\n      }\r\n    | undefined\r\n} {\r\n  // get blocks from historic timestamps\r\n  const [t24, t48, tWeek] = useDeltaTimestamps()\r\n\r\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24, t48, tWeek])\r\n  const [block24, block48, blockWeek] = blocks ?? []\r\n  const ethPrices = useEthPrices()\r\n\r\n  const { loading, error, data } = useQuery<TokenDataResponse>(TOKENS_BULK(undefined, tokenAddresses), {\r\n    fetchPolicy: 'no-cache',\r\n  })\r\n\r\n  const { loading: loading24, error: error24, data: data24 } = useQuery<TokenDataResponse>(\r\n    TOKENS_BULK(parseInt(block24?.number), tokenAddresses)\r\n  )\r\n\r\n  const { loading: loading48, error: error48, data: data48 } = useQuery<TokenDataResponse>(\r\n    TOKENS_BULK(parseInt(block48?.number), tokenAddresses)\r\n  )\r\n  const { loading: loadingWeek, error: errorWeek, data: dataWeek } = useQuery<TokenDataResponse>(\r\n    TOKENS_BULK(parseInt(blockWeek?.number), tokenAddresses)\r\n  )\r\n\r\n  const anyError = Boolean(error || error24 || error48 || blockError || errorWeek)\r\n  const anyLoading = Boolean(loading || loading24 || loading48 || loadingWeek || !blocks)\r\n\r\n  if (!ethPrices) {\r\n    return {\r\n      loading: true,\r\n      error: false,\r\n      data: undefined,\r\n    }\r\n  }\r\n\r\n  // return early if not all data yet\r\n  if (anyError || anyLoading) {\r\n    return {\r\n      loading: anyLoading,\r\n      error: anyError,\r\n      data: undefined,\r\n    }\r\n  }\r\n\r\n  const parsed = data?.tokens\r\n    ? data.tokens.reduce((accum: { [address: string]: TokenFields }, poolData) => {\r\n        accum[poolData.id] = poolData\r\n        return accum\r\n      }, {})\r\n    : {}\r\n  const parsed24 = data24?.tokens\r\n    ? data24.tokens.reduce((accum: { [address: string]: TokenFields }, poolData) => {\r\n        accum[poolData.id] = poolData\r\n        return accum\r\n      }, {})\r\n    : {}\r\n  const parsed48 = data48?.tokens\r\n    ? data48.tokens.reduce((accum: { [address: string]: TokenFields }, poolData) => {\r\n        accum[poolData.id] = poolData\r\n        return accum\r\n      }, {})\r\n    : {}\r\n  const parsedWeek = dataWeek?.tokens\r\n    ? dataWeek.tokens.reduce((accum: { [address: string]: TokenFields }, poolData) => {\r\n        accum[poolData.id] = poolData\r\n        return accum\r\n      }, {})\r\n    : {}\r\n\r\n  // format data and calculate daily changes\r\n  const formatted = tokenAddresses.reduce((accum: { [address: string]: TokenData }, address) => {\r\n    const current: TokenFields | undefined = parsed[address]\r\n    const oneDay: TokenFields | undefined = parsed24[address]\r\n    const twoDay: TokenFields | undefined = parsed48[address]\r\n    const week: TokenFields | undefined = parsedWeek[address]\r\n\r\n    if (address === '0xDe30da39c46104798bB5aA3fe8B9e0e1F348163F') {\r\n      console.log(current)\r\n    }\r\n\r\n    const [volumeUSD, volumeUSDChange] =\r\n      current && oneDay && twoDay\r\n        ? get2DayChange(current.volumeUSD, oneDay.volumeUSD, twoDay.volumeUSD)\r\n        : current\r\n        ? [parseFloat(current.volumeUSD), 0]\r\n        : [0, 0]\r\n    const volumeUSDWeek =\r\n      current && week\r\n        ? parseFloat(current.volumeUSD) - parseFloat(week.volumeUSD)\r\n        : current\r\n        ? parseFloat(current.volumeUSD)\r\n        : 0\r\n    const tvlUSD = current ? parseFloat(current.totalValueLockedUSD) : 0\r\n    const tvlUSDChange = getPercentChange(current?.totalValueLockedUSD, oneDay?.totalValueLockedUSD)\r\n    const tvlToken = current ? parseFloat(current.totalValueLocked) : 0\r\n    const priceUSD = current ? parseFloat(current.derivedETH) * ethPrices.current : 0\r\n    const priceUSDOneDay = oneDay ? parseFloat(oneDay.derivedETH) * ethPrices.oneDay : 0\r\n    const priceUSDWeek = week ? parseFloat(week.derivedETH) * ethPrices.week : 0\r\n    const priceUSDChange =\r\n      priceUSD && priceUSDOneDay ? getPercentChange(priceUSD.toString(), priceUSDOneDay.toString()) : 0\r\n    const priceUSDChangeWeek =\r\n      priceUSD && priceUSDWeek ? getPercentChange(priceUSD.toString(), priceUSDWeek.toString()) : 0\r\n    const txCount =\r\n      current && oneDay\r\n        ? parseFloat(current.txCount) - parseFloat(oneDay.txCount)\r\n        : current\r\n        ? parseFloat(current.txCount)\r\n        : 0\r\n    const feesUSD =\r\n      current && oneDay\r\n        ? parseFloat(current.feesUSD) - parseFloat(oneDay.feesUSD)\r\n        : current\r\n        ? parseFloat(current.feesUSD)\r\n        : 0\r\n\r\n    accum[address] = {\r\n      exists: !!current,\r\n      address,\r\n      name: current ? formatTokenName(address, current.name) : '',\r\n      symbol: current ? formatTokenSymbol(address, current.symbol) : '',\r\n      volumeUSD,\r\n      volumeUSDChange,\r\n      volumeUSDWeek,\r\n      txCount,\r\n      tvlUSD,\r\n      feesUSD,\r\n      tvlUSDChange,\r\n      tvlToken,\r\n      priceUSD,\r\n      priceUSDChange,\r\n      priceUSDChangeWeek,\r\n    }\r\n\r\n    return accum\r\n  }, {})\r\n\r\n  return {\r\n    loading: anyLoading,\r\n    error: anyError,\r\n    data: formatted,\r\n  }\r\n}\r\n","import { TickProcessed } from './../../data/pools/tickData'\r\nimport { createAction } from '@reduxjs/toolkit'\r\nimport { PoolData, PoolChartEntry } from './reducer'\r\nimport { Transaction } from 'types'\r\n\r\n// protocol wide info\r\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('pools/updatePoolData')\r\n\r\n// add pool address to byAddress\r\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('pool/addPoolKeys')\r\n\r\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: PoolChartEntry[] }>(\r\n  'pool/updatePoolChartData'\r\n)\r\n\r\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\r\n  'pool/updatePoolTransactions'\r\n)\r\n\r\nexport const updateTickData = createAction<{\r\n  poolAddress: string\r\n  tickData:\r\n    | {\r\n        ticksProcessed: TickProcessed[]\r\n        feeTier: string\r\n        tickSpacing: number\r\n        activeTickIdx: number\r\n      }\r\n    | undefined\r\n}>('pool/updateTickData')\r\n","import dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\r\nimport gql from 'graphql-tag'\r\nimport { client } from 'apollo/client'\r\nimport { TokenChartEntry } from 'state/tokens/reducer'\r\nimport { PoolChartEntry } from 'state/pools/reducer'\r\n\r\n// format dayjs with the libraries that we need\r\ndayjs.extend(utc)\r\ndayjs.extend(weekOfYear)\r\nconst ONE_DAY_UNIX = 24 * 60 * 60\r\n\r\nconst POOL_CHART = gql`\r\n  query poolDayDatas($startTime: Int!, $skip: Int!, $address: Bytes!) {\r\n    poolDayDatas(\r\n      first: 1000\r\n      skip: $skip\r\n      where: { pool: $address, date_gt: $startTime }\r\n      orderBy: date\r\n      orderDirection: asc\r\n    ) {\r\n      date\r\n      volumeUSD\r\n      tvlUSD\r\n    }\r\n  }\r\n`\r\n\r\ninterface ChartResults {\r\n  poolDayDatas: {\r\n    date: number\r\n    volumeUSD: string\r\n    tvlUSD: string\r\n  }[]\r\n}\r\n\r\nexport async function fetchPoolChartData(address: string) {\r\n  let data: {\r\n    date: number\r\n    volumeUSD: string\r\n    tvlUSD: string\r\n  }[] = []\r\n  const startTimestamp = 1619170975\r\n  const endTimestamp = dayjs.utc().unix()\r\n\r\n  let error = false\r\n  let skip = 0\r\n  let allFound = false\r\n\r\n  try {\r\n    while (!allFound) {\r\n      const { data: chartResData, error, loading } = await client.query<ChartResults>({\r\n        query: POOL_CHART,\r\n        variables: {\r\n          address: address,\r\n          startTime: startTimestamp,\r\n          skip,\r\n        },\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      if (!loading) {\r\n        skip += 1000\r\n        if (chartResData.poolDayDatas.length < 1000 || error) {\r\n          allFound = true\r\n        }\r\n        if (chartResData) {\r\n          data = data.concat(chartResData.poolDayDatas)\r\n        }\r\n      }\r\n    }\r\n  } catch {\r\n    error = true\r\n  }\r\n\r\n  if (data) {\r\n    const formattedExisting = data.reduce((accum: { [date: number]: PoolChartEntry }, dayData) => {\r\n      const roundedDate = parseInt((dayData.date / ONE_DAY_UNIX).toFixed(0))\r\n      accum[roundedDate] = {\r\n        date: dayData.date,\r\n        volumeUSD: parseFloat(dayData.volumeUSD),\r\n        totalValueLockedUSD: parseFloat(dayData.tvlUSD),\r\n      }\r\n      return accum\r\n    }, {})\r\n\r\n    const firstEntry = formattedExisting[parseInt(Object.keys(formattedExisting)[0])]\r\n\r\n    // fill in empty days ( there will be no day datas if no trades made that day )\r\n    let timestamp = firstEntry?.date ?? startTimestamp\r\n    let latestTvl = firstEntry?.totalValueLockedUSD ?? 0\r\n    while (timestamp < endTimestamp - ONE_DAY_UNIX) {\r\n      const nextDay = timestamp + ONE_DAY_UNIX\r\n      const currentDayIndex = parseInt((nextDay / ONE_DAY_UNIX).toFixed(0))\r\n      if (!Object.keys(formattedExisting).includes(currentDayIndex.toString())) {\r\n        formattedExisting[currentDayIndex] = {\r\n          date: nextDay,\r\n          volumeUSD: 0,\r\n          totalValueLockedUSD: latestTvl,\r\n        }\r\n      } else {\r\n        latestTvl = formattedExisting[currentDayIndex].totalValueLockedUSD\r\n      }\r\n      timestamp = nextDay\r\n    }\r\n\r\n    const dateMap = Object.keys(formattedExisting).map((key) => {\r\n      return formattedExisting[parseInt(key)]\r\n    })\r\n\r\n    return {\r\n      data: dateMap,\r\n      error: false,\r\n    }\r\n  } else {\r\n    return {\r\n      data: undefined,\r\n      error,\r\n    }\r\n  }\r\n}\r\n","import { client } from 'apollo/client'\r\nimport gql from 'graphql-tag'\r\nimport { Transaction, TransactionType } from 'types'\r\nimport { formatTokenSymbol } from 'utils/tokens'\r\n\r\nconst POOL_TRANSACTIONS = gql`\r\n  query transactions($address: Bytes!) {\r\n    mints(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }) {\r\n      timestamp\r\n      transaction {\r\n        id\r\n      }\r\n      pool {\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      owner\r\n      sender\r\n      origin\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n    swaps(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }) {\r\n      timestamp\r\n      transaction {\r\n        id\r\n      }\r\n      pool {\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      origin\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n    burns(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }) {\r\n      timestamp\r\n      transaction {\r\n        id\r\n      }\r\n      pool {\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      owner\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n  }\r\n`\r\n\r\ninterface TransactionResults {\r\n  mints: {\r\n    timestamp: string\r\n    transaction: {\r\n      id: string\r\n    }\r\n    pool: {\r\n      token0: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n      token1: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n    }\r\n    origin: string\r\n    amount0: string\r\n    amount1: string\r\n    amountUSD: string\r\n  }[]\r\n  swaps: {\r\n    timestamp: string\r\n    transaction: {\r\n      id: string\r\n    }\r\n    pool: {\r\n      token0: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n      token1: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n    }\r\n    origin: string\r\n    amount0: string\r\n    amount1: string\r\n    amountUSD: string\r\n  }[]\r\n  burns: {\r\n    timestamp: string\r\n    transaction: {\r\n      id: string\r\n    }\r\n    pool: {\r\n      token0: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n      token1: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n    }\r\n    owner: string\r\n    amount0: string\r\n    amount1: string\r\n    amountUSD: string\r\n  }[]\r\n}\r\n\r\nexport async function fetchPoolTransactions(\r\n  address: string\r\n): Promise<{ data: Transaction[] | undefined; error: boolean; loading: boolean }> {\r\n  const { data, error, loading } = await client.query<TransactionResults>({\r\n    query: POOL_TRANSACTIONS,\r\n    variables: {\r\n      address: address,\r\n    },\r\n    fetchPolicy: 'cache-first',\r\n  })\r\n\r\n  if (error) {\r\n    return {\r\n      data: undefined,\r\n      error: true,\r\n      loading: false,\r\n    }\r\n  }\r\n\r\n  if (loading && !data) {\r\n    return {\r\n      data: undefined,\r\n      error: false,\r\n      loading: true,\r\n    }\r\n  }\r\n\r\n  const mints = data.mints.map((m) => {\r\n    return {\r\n      type: TransactionType.MINT,\r\n      hash: m.transaction.id,\r\n      timestamp: m.timestamp,\r\n      sender: m.origin,\r\n      token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\r\n      token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\r\n      token0Address: m.pool.token0.id,\r\n      token1Address: m.pool.token1.id,\r\n      amountUSD: parseFloat(m.amountUSD),\r\n      amountToken0: parseFloat(m.amount0),\r\n      amountToken1: parseFloat(m.amount1),\r\n    }\r\n  })\r\n  const burns = data.burns.map((m) => {\r\n    return {\r\n      type: TransactionType.BURN,\r\n      hash: m.transaction.id,\r\n      timestamp: m.timestamp,\r\n      sender: m.owner,\r\n      token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\r\n      token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\r\n      token0Address: m.pool.token0.id,\r\n      token1Address: m.pool.token1.id,\r\n      amountUSD: parseFloat(m.amountUSD),\r\n      amountToken0: parseFloat(m.amount0),\r\n      amountToken1: parseFloat(m.amount1),\r\n    }\r\n  })\r\n\r\n  const swaps = data.swaps.map((m) => {\r\n    return {\r\n      type: TransactionType.SWAP,\r\n      hash: m.transaction.id,\r\n      timestamp: m.timestamp,\r\n      sender: m.origin,\r\n      token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\r\n      token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\r\n      token0Address: m.pool.token0.id,\r\n      token1Address: m.pool.token1.id,\r\n      amountUSD: parseFloat(m.amountUSD),\r\n      amountToken0: parseFloat(m.amount0),\r\n      amountToken1: parseFloat(m.amount1),\r\n    }\r\n  })\r\n\r\n  return { data: [...mints, ...burns, ...swaps], error: false, loading: false }\r\n}\r\n","import { addPoolKeys, updatePoolChartData, updatePoolTransactions, updateTickData } from 'state/pools/actions'\r\nimport { AppState, AppDispatch } from './../index'\r\nimport { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PoolData, PoolChartEntry } from './reducer'\r\nimport { updatePoolData } from './actions'\r\nimport { notEmpty } from 'utils'\r\nimport { fetchPoolChartData } from 'data/pools/chartData'\r\nimport { Transaction } from 'types'\r\nimport { fetchPoolTransactions } from 'data/pools/transactions'\r\nimport { PoolTickData } from 'data/pools/tickData'\r\n\r\nexport function useAllPoolData(): {\r\n  [address: string]: { data: PoolData | undefined; lastUpdated: number | undefined }\r\n} {\r\n  return useSelector((state: AppState) => state.pools.byAddress)\r\n}\r\n\r\nexport function useUpdatePoolData(): (pools: PoolData[]) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback((pools: PoolData[]) => dispatch(updatePoolData({ pools })), [dispatch])\r\n}\r\n\r\nexport function useAddPoolKeys(): (addresses: string[]) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback((poolAddresses: string[]) => dispatch(addPoolKeys({ poolAddresses })), [dispatch])\r\n}\r\n\r\nexport function usePoolDatas(poolAddresses: string[]): PoolData[] {\r\n  const allPoolData = useAllPoolData()\r\n  const addPoolKeys = useAddPoolKeys()\r\n\r\n  const untrackedAddresses = poolAddresses.reduce((accum: string[], address) => {\r\n    if (!Object.keys(allPoolData).includes(address)) {\r\n      accum.push(address)\r\n    }\r\n    return accum\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (untrackedAddresses) {\r\n      addPoolKeys(untrackedAddresses)\r\n    }\r\n    return\r\n  }, [addPoolKeys, untrackedAddresses])\r\n\r\n  // filter for pools with data\r\n  const poolsWithData = poolAddresses\r\n    .map((address) => {\r\n      const poolData = allPoolData[address]?.data\r\n      return poolData ?? undefined\r\n    })\r\n    .filter(notEmpty)\r\n\r\n  return poolsWithData\r\n}\r\n\r\n/**\r\n * Get top pools addresses that token is included in\r\n * If not loaded, fetch and store\r\n * @param address\r\n */\r\nexport function usePoolChartData(address: string): PoolChartEntry[] | undefined {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const pool = useSelector((state: AppState) => state.pools.byAddress[address])\r\n  const chartData = pool?.chartData\r\n  const [error, setError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      const { error, data } = await fetchPoolChartData(address)\r\n      if (!error && data) {\r\n        dispatch(updatePoolChartData({ poolAddress: address, chartData: data }))\r\n      }\r\n      if (error) {\r\n        setError(error)\r\n      }\r\n    }\r\n    if (!chartData && !error) {\r\n      fetch()\r\n    }\r\n  }, [address, dispatch, error, chartData])\r\n\r\n  // return data\r\n  return chartData\r\n}\r\n\r\n/**\r\n * Get all transactions on pool\r\n * @param address\r\n */\r\nexport function usePoolTransactions(address: string): Transaction[] | undefined {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const pool = useSelector((state: AppState) => state.pools.byAddress[address])\r\n  const transactions = pool?.transactions\r\n  const [error, setError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      const { error, data } = await fetchPoolTransactions(address)\r\n      if (error) {\r\n        setError(true)\r\n      } else if (data) {\r\n        dispatch(updatePoolTransactions({ poolAddress: address, transactions: data }))\r\n      }\r\n    }\r\n    if (!transactions && !error) {\r\n      fetch()\r\n    }\r\n  }, [address, dispatch, error, transactions])\r\n\r\n  // return data\r\n  return transactions\r\n}\r\n\r\nexport function usePoolTickData(\r\n  address: string\r\n): [PoolTickData | undefined, (poolAddress: string, tickData: PoolTickData) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const pool = useSelector((state: AppState) => state.pools.byAddress[address])\r\n  const tickData = pool.tickData\r\n\r\n  const setPoolTickData = useCallback(\r\n    (address: string, tickData: PoolTickData) => dispatch(updateTickData({ poolAddress: address, tickData })),\r\n    [dispatch]\r\n  )\r\n\r\n  return [tickData, setPoolTickData]\r\n}\r\n","import { useAllTokenData } from 'state/tokens/hooks'\r\nimport { TokenData } from 'state/tokens/reducer'\r\nimport { useFetchedTokenDatas } from 'data/tokens/tokenData'\r\nimport gql from 'graphql-tag'\r\nimport { useState, useEffect, useMemo } from 'react'\r\nimport { client } from 'apollo/client'\r\nimport { usePoolDatas, useAllPoolData } from 'state/pools/hooks'\r\nimport { PoolData } from 'state/pools/reducer'\r\nimport { notEmpty, escapeRegExp } from 'utils'\r\n\r\nexport const TOKEN_SEARCH = gql`\r\n  query tokens($value: String, $id: String) {\r\n    asSymbol: tokens(where: { symbol_contains: $value }, orderBy: totalValueLockedUSD, orderDirection: desc) {\r\n      id\r\n      symbol\r\n      name\r\n      totalValueLockedUSD\r\n    }\r\n    asName: tokens(where: { name_contains: $value }, orderBy: totalValueLockedUSD, orderDirection: desc) {\r\n      id\r\n      symbol\r\n      name\r\n      totalValueLockedUSD\r\n    }\r\n    asAddress: tokens(where: { id: $id }, orderBy: totalValueLockedUSD, orderDirection: desc) {\r\n      id\r\n      symbol\r\n      name\r\n      totalValueLockedUSD\r\n    }\r\n  }\r\n`\r\n\r\nexport const POOL_SEARCH = gql`\r\n  query pools($tokens: [Bytes]!, $id: String) {\r\n    as0: pools(where: { token0_in: $tokens }) {\r\n      id\r\n      feeTier\r\n      token0 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n      token1 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n    }\r\n    as1: pools(where: { token1_in: $tokens }) {\r\n      id\r\n      feeTier\r\n      token0 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n      token1 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n    }\r\n    asAddress: pools(where: { id: $id }) {\r\n      id\r\n      feeTier\r\n      token0 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n      token1 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\ninterface TokenRes {\r\n  asSymbol: {\r\n    id: string\r\n    symbol: string\r\n    name: string\r\n    totalValueLockedUSD: string\r\n  }[]\r\n  asName: {\r\n    id: string\r\n    symbol: string\r\n    name: string\r\n    totalValueLockedUSD: string\r\n  }[]\r\n  asAddress: {\r\n    id: string\r\n    symbol: string\r\n    name: string\r\n    totalValueLockedUSD: string\r\n  }[]\r\n}\r\n\r\ninterface PoolResFields {\r\n  id: string\r\n  feeTier: string\r\n  token0: {\r\n    id: string\r\n    symbol: string\r\n    name: string\r\n  }\r\n  token1: {\r\n    id: string\r\n    symbol: string\r\n    name: string\r\n  }\r\n}\r\n\r\ninterface PoolRes {\r\n  as0: PoolResFields[]\r\n  as1: PoolResFields[]\r\n  asAddress: PoolResFields[]\r\n}\r\n\r\nexport function useFetchSearchResults(\r\n  value: string\r\n): {\r\n  tokens: TokenData[]\r\n  pools: PoolData[]\r\n  loading: boolean\r\n} {\r\n  const allTokens = useAllTokenData()\r\n  const allPools = useAllPoolData()\r\n\r\n  const [tokenData, setTokenData] = useState<TokenRes | undefined>()\r\n  const [poolData, setPoolData] = useState<PoolRes | undefined>()\r\n\r\n  // fetch data based on search input\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      try {\r\n        const tokens = await client.query<TokenRes>({\r\n          query: TOKEN_SEARCH,\r\n          variables: {\r\n            value: value ? value.toUpperCase() : '',\r\n            id: value,\r\n          },\r\n        })\r\n        const pools = await client.query<PoolRes>({\r\n          query: POOL_SEARCH,\r\n          variables: {\r\n            tokens: tokens.data.asSymbol?.map((t) => t.id),\r\n            id: value,\r\n          },\r\n        })\r\n\r\n        if (tokens.data) {\r\n          setTokenData(tokens.data)\r\n        }\r\n        if (pools.data) {\r\n          setPoolData(pools.data)\r\n        }\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    if (value && value.length > 0) {\r\n      fetch()\r\n    }\r\n  }, [value])\r\n\r\n  const allFetchedTokens = useMemo(() => {\r\n    if (tokenData) {\r\n      return [...tokenData.asAddress, ...tokenData.asName, ...tokenData.asSymbol]\r\n    }\r\n    return []\r\n  }, [tokenData])\r\n\r\n  const allFetchedPools = useMemo(() => {\r\n    if (poolData) {\r\n      return [...poolData.asAddress, ...poolData.as0, ...poolData.as1]\r\n    }\r\n    return []\r\n  }, [poolData])\r\n\r\n  // format as token and pool datas\r\n  const { data: tokenFullDatas, loading: tokenFullLoading } = useFetchedTokenDatas(allFetchedTokens.map((t) => t.id))\r\n  const poolDatasFull = usePoolDatas(allFetchedPools.map((p) => p.id))\r\n  const formattedTokens = useMemo(() => (tokenFullDatas ? Object.values(tokenFullDatas) : []), [tokenFullDatas])\r\n\r\n  const newTokens = useMemo(() => {\r\n    return formattedTokens.filter((t) => !Object.keys(allTokens).includes(t.address))\r\n  }, [allTokens, formattedTokens])\r\n\r\n  const combinedTokens = useMemo(() => {\r\n    return [\r\n      ...newTokens,\r\n      ...Object.values(allTokens)\r\n        .map((t) => t.data)\r\n        .filter(notEmpty),\r\n    ]\r\n  }, [allTokens, newTokens])\r\n\r\n  const filteredSortedTokens = useMemo(() => {\r\n    return combinedTokens.filter((t) => {\r\n      const regexMatches = Object.keys(t).map((tokenEntryKey) => {\r\n        const isAddress = value.slice(0, 2) === '0x'\r\n        if (tokenEntryKey === 'address' && isAddress) {\r\n          return t[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\r\n        }\r\n        if (tokenEntryKey === 'symbol' && !isAddress) {\r\n          return t[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\r\n        }\r\n        if (tokenEntryKey === 'name' && !isAddress) {\r\n          return t[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\r\n        }\r\n        return false\r\n      })\r\n      return regexMatches.some((m) => m)\r\n    })\r\n  }, [combinedTokens, value])\r\n\r\n  const newPools = useMemo(() => {\r\n    return poolDatasFull.filter((p) => !Object.keys(allPools).includes(p.address))\r\n  }, [allPools, poolDatasFull])\r\n\r\n  const combinedPools = useMemo(() => {\r\n    return [\r\n      ...newPools,\r\n      ...Object.values(allPools)\r\n        .map((p) => p.data)\r\n        .filter(notEmpty),\r\n    ]\r\n  }, [allPools, newPools])\r\n\r\n  const filteredSortedPools = useMemo(() => {\r\n    return combinedPools.filter((t) => {\r\n      const regexMatches = Object.keys(t).map((key) => {\r\n        const isAddress = value.slice(0, 2) === '0x'\r\n        if (key === 'address' && isAddress) {\r\n          return t[key].match(new RegExp(escapeRegExp(value), 'i'))\r\n        }\r\n        if ((key === 'token0' || key === 'token1') && !isAddress) {\r\n          return (\r\n            t[key].name.match(new RegExp(escapeRegExp(value), 'i')) ||\r\n            t[key].symbol.toLocaleLowerCase().match(new RegExp(escapeRegExp(value.toLocaleLowerCase()), 'i'))\r\n          )\r\n        }\r\n        return false\r\n      })\r\n      return regexMatches.some((m) => m)\r\n    })\r\n  }, [combinedPools, value])\r\n\r\n  return {\r\n    tokens: filteredSortedTokens,\r\n    pools: filteredSortedPools,\r\n    loading: tokenFullLoading,\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\nexport const ColumnCenter = styled(Column)`\r\n  width: 100%;\r\n  align-items: center;\r\n`\r\n\r\nexport const AutoColumn = styled.div<{\r\n  gap?: 'sm' | 'md' | 'lg' | string\r\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\r\n}>`\r\n  display: grid;\r\n  grid-auto-rows: auto;\r\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\r\n  justify-items: ${({ justify }) => justify && justify};\r\n`\r\n\r\nexport default Column\r\n","import React, { useState } from 'react'\r\nimport { HelpCircle } from 'react-feather'\r\nimport { ImageProps } from 'rebass'\r\n\r\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\r\n\r\nexport interface LogoProps extends Pick<ImageProps, 'style' | 'alt' | 'className'> {\r\n  srcs: string[]\r\n}\r\n\r\n/**\r\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\r\n */\r\nexport default function Logo({ srcs, alt, ...rest }: LogoProps) {\r\n  const [, refresh] = useState<number>(0)\r\n\r\n  const src: string | undefined = srcs.find((src) => !BAD_SRCS[src])\r\n\r\n  if (src) {\r\n    return (\r\n      <img\r\n        {...rest}\r\n        alt={alt}\r\n        src={src}\r\n        onError={() => {\r\n          if (src) BAD_SRCS[src] = true\r\n          refresh((i) => i + 1)\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <HelpCircle {...rest} />\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { isAddress } from 'utils'\r\nimport Logo from '../Logo'\r\n\r\nexport const getTokenLogoURL = (address: string) =>\r\n  `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/smartchain/assets/${address}/logo.png`\r\n\r\nconst StyledLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n  border-radius: ${({ size }) => size};\r\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\r\n  background-color: ${({ theme }) => theme.white};\r\n  color: ${({ theme }) => theme.text4};\r\n`\r\n\r\nexport default function CurrencyLogo({\r\n  address,\r\n  size = '24px',\r\n  style,\r\n  ...rest\r\n}: {\r\n  address?: string\r\n  size?: string\r\n  style?: React.CSSProperties\r\n}) {\r\n  const srcs: string[] = useMemo(() => {\r\n    const checkSummed = isAddress(address)\r\n\r\n    if (checkSummed) {\r\n      return [getTokenLogoURL(checkSummed)]\r\n    }\r\n    return []\r\n  }, [address])\r\n\r\n  return <StyledLogo size={size} srcs={srcs} alt={'token logo'} style={style} {...rest} />\r\n}\r\n","import numbro from 'numbro'\r\n\r\n// using a currency library here in case we want to add more in future\r\nexport const formatDollarAmount = (num: number | undefined, digits = 2, round = true) => {\r\n  if (num === 0) return '$0.00'\r\n  if (!num) return '-'\r\n  if (num < 0.001 && digits <= 3) {\r\n    return '<$0.001'\r\n  }\r\n\r\n  return numbro(num).formatCurrency({\r\n    average: round,\r\n    mantissa: num > 1000 ? 2 : digits,\r\n    abbreviations: {\r\n      million: 'M',\r\n      billion: 'B',\r\n    },\r\n  })\r\n}\r\n\r\n// using a currency library here in case we want to add more in future\r\nexport const formatAmount = (num: number | undefined, digits = 2) => {\r\n  if (num === 0) return '0'\r\n  if (!num) return '-'\r\n  if (num < 0.001) {\r\n    return '<0.001'\r\n  }\r\n  const nf = new Intl.NumberFormat()\r\n  return nf.format(parseFloat(num.toFixed(num > 1000 ? 0 : digits)))\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport CurrencyLogo from '../CurrencyLogo'\r\n\r\nconst Wrapper = styled.div<{ margin: boolean; sizeraw: number }>`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-right: ${({ sizeraw, margin }) => margin && (sizeraw / 3 + 8).toString() + 'px'};\r\n`\r\n\r\ninterface DoubleCurrencyLogoProps {\r\n  margin?: boolean\r\n  size?: number\r\n  address0?: string\r\n  address1?: string\r\n}\r\n\r\nconst HigherLogo = styled(CurrencyLogo)`\r\n  z-index: 2;\r\n`\r\nconst CoveredLogo = styled(CurrencyLogo)<{ sizeraw: number }>`\r\n  // position: absolute;\r\n  // left: ${({ sizeraw }) => '-' + (sizeraw / 2).toString() + 'px'} !important;\r\n`\r\n\r\nexport default function DoubleCurrencyLogo({ address0, address1, size = 16, margin = false }: DoubleCurrencyLogoProps) {\r\n  return (\r\n    <Wrapper sizeraw={size} margin={margin}>\r\n      {address0 && <HigherLogo address={address0} size={size.toString() + 'px'} />}\r\n      {address1 && <CoveredLogo address={address1} size={size.toString() + 'px'} sizeraw={size} />}\r\n    </Wrapper>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport { Box } from 'rebass/styled-components'\r\n\r\nconst Card = styled(Box)<{ width?: string; padding?: string; border?: string; borderRadius?: string }>`\r\n  width: ${({ width }) => width ?? '100%'};\r\n  border-radius: 16px;\r\n  padding: 1rem;\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`\r\nexport default Card\r\n\r\nexport const LightCard = styled(Card)`\r\n  border: 1px solid ${({ theme }) => theme.bg2};\r\n  background-color: ${({ theme }) => theme.bg1};\r\n`\r\n\r\nexport const LightGreyCard = styled(Card)`\r\n  background-color: ${({ theme }) => theme.bg3};\r\n`\r\n\r\nexport const GreyCard = styled(Card)`\r\n  background-color: ${({ theme }) => theme.bg2};\r\n`\r\n\r\nexport const DarkGreyCard = styled(Card)`\r\n  background-color: ${({ theme }) => theme.bg0};\r\n`\r\n\r\nexport const OutlineCard = styled(Card)`\r\n  border: 1px solid ${({ theme }) => theme.bg3};\r\n`\r\n\r\nexport const YellowCard = styled(Card)`\r\n  background-color: rgba(243, 132, 30, 0.05);\r\n  color: ${({ theme }) => theme.yellow3};\r\n  font-weight: 500;\r\n`\r\n\r\nexport const PinkCard = styled(Card)`\r\n  background-color: rgba(255, 0, 122, 0.03);\r\n  color: ${({ theme }) => theme.primary1};\r\n  font-weight: 500;\r\n`\r\n\r\nexport const BlueCard = styled(Card)`\r\n  background-color: ${({ theme }) => theme.primary5};\r\n  color: ${({ theme }) => theme.blue2};\r\n  border-radius: 12px;\r\n  width: fit-content;\r\n`\r\n\r\nexport const ScrollableX = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  white-space: nowrap;\r\n\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n\r\nexport const GreyBadge = styled(Card)`\r\n  width: fit-content;\r\n  border-radius: 8px;\r\n  background: ${({ theme }) => theme.bg3};\r\n  color: ${({ theme }) => theme.text1};\r\n  padding: 4px 6px;\r\n  font-weight: 400;\r\n`\r\n","import { ThemeContext } from 'styled-components'\r\nimport { useContext } from 'react'\r\n\r\nexport default function useTheme() {\r\n  return useContext(ThemeContext)\r\n}\r\n","import React, { HTMLAttributes } from 'react'\r\nimport styled from 'styled-components'\r\nimport { darken, lighten } from 'polished'\r\n\r\nimport { RowBetween } from '../Row'\r\nimport { ChevronDown, Check, Star } from 'react-feather'\r\nimport { Button as RebassButton, ButtonProps } from 'rebass/styled-components'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nconst Base = styled(RebassButton)<{\r\n  padding?: string\r\n  width?: string\r\n  borderRadius?: string\r\n  altDisabledStyle?: boolean\r\n}>`\r\n  padding: ${({ padding }) => (padding ? padding : '8px 16px')};\r\n  width: ${({ width }) => (width ? width : '100%')};\r\n  font-weight: 500;\r\n  text-align: center;\r\n  border-radius: 12px;\r\n  border-radius: ${({ borderRadius }) => borderRadius && borderRadius};\r\n  outline: none;\r\n  border: 1px solid transparent;\r\n  color: white;\r\n  text-decoration: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: nowrap;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  position: relative;\r\n  z-index: 1;\r\n  &:disabled {\r\n    cursor: auto;\r\n  }\r\n\r\n  > * {\r\n    user-select: none;\r\n  }\r\n`\r\n\r\nexport const ButtonPrimary = styled(Base)<{ bgColor?: string }>`\r\n  background-color: ${({ theme, bgColor }) => bgColor ?? theme.primary1};\r\n  color: white;\r\n  &:focus {\r\n    box-shadow: 0 0 0 1pt ${({ theme, bgColor }) => darken(0.05, bgColor ?? theme.primary1)};\r\n    background-color: ${({ theme, bgColor }) => darken(0.05, bgColor ?? theme.primary1)};\r\n  }\r\n  &:hover {\r\n    background-color: ${({ theme, bgColor }) => darken(0.05, bgColor ?? theme.primary1)};\r\n  }\r\n  &:active {\r\n    box-shadow: 0 0 0 1pt ${({ theme, bgColor }) => darken(0.1, bgColor ?? theme.primary1)};\r\n    background-color: ${({ theme, bgColor }) => darken(0.1, bgColor ?? theme.primary1)};\r\n  }\r\n  &:disabled {\r\n    background-color: ${({ theme, altDisabledStyle, disabled }) =>\r\n      altDisabledStyle ? (disabled ? theme.bg3 : theme.primary1) : theme.bg3};\r\n    color: ${({ theme, altDisabledStyle, disabled }) =>\r\n      altDisabledStyle ? (disabled ? theme.text3 : 'white') : theme.text3};\r\n    cursor: auto;\r\n    box-shadow: none;\r\n    border: 1px solid transparent;\r\n    outline: none;\r\n    opacity: ${({ altDisabledStyle }) => (altDisabledStyle ? '0.5' : '1')};\r\n  }\r\n`\r\n\r\nexport const ButtonLight = styled(Base)`\r\n  background-color: ${({ theme }) => theme.primary5};\r\n  color: ${({ theme }) => theme.primaryText1};\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  &:focus {\r\n    box-shadow: 0 0 0 1pt ${({ theme, disabled }) => !disabled && darken(0.03, theme.primary5)};\r\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.03, theme.primary5)};\r\n  }\r\n  &:hover {\r\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.03, theme.primary5)};\r\n  }\r\n  &:active {\r\n    box-shadow: 0 0 0 1pt ${({ theme, disabled }) => !disabled && darken(0.05, theme.primary5)};\r\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.05, theme.primary5)};\r\n  }\r\n  :disabled {\r\n    opacity: 0.4;\r\n    :hover {\r\n      cursor: auto;\r\n      background-color: ${({ theme }) => theme.primary5};\r\n      box-shadow: none;\r\n      border: 1px solid transparent;\r\n      outline: none;\r\n    }\r\n  }\r\n`\r\n\r\nexport const ButtonGray = styled(Base)`\r\n  background-color: ${({ theme }) => theme.bg3};\r\n  color: ${({ theme }) => theme.text2};\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  outline: none;\r\n  &:focus {\r\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.05, theme.bg4)};\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.05, theme.bg4)};\r\n    outline: none;\r\n  }\r\n  &:active {\r\n    background-color: ${({ theme, disabled }) => !disabled && darken(0.1, theme.bg4)};\r\n    outline: none;\r\n  }\r\n`\r\n\r\nexport const ButtonSecondary = styled(Base)`\r\n  border: 1px solid ${({ theme }) => theme.primary4};\r\n  color: ${({ theme }) => theme.primary1};\r\n  background-color: transparent;\r\n  font-size: 16px;\r\n  border-radius: 12px;\r\n  padding: ${({ padding }) => (padding ? padding : '10px')};\r\n\r\n  &:focus {\r\n    box-shadow: 0 0 0 1pt ${({ theme }) => theme.primary4};\r\n    border: 1px solid ${({ theme }) => theme.primary3};\r\n  }\r\n  &:hover {\r\n    border: 1px solid ${({ theme }) => theme.primary3};\r\n  }\r\n  &:active {\r\n    box-shadow: 0 0 0 1pt ${({ theme }) => theme.primary4};\r\n    border: 1px solid ${({ theme }) => theme.primary3};\r\n  }\r\n  &:disabled {\r\n    opacity: 50%;\r\n    cursor: auto;\r\n  }\r\n  a:hover {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nexport const ButtonPink = styled(Base)`\r\n  background-color: ${({ theme }) => theme.primary1};\r\n  color: white;\r\n\r\n  &:focus {\r\n    box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.05, theme.primary1)};\r\n    background-color: ${({ theme }) => darken(0.05, theme.primary1)};\r\n  }\r\n  &:hover {\r\n    background-color: ${({ theme }) => darken(0.05, theme.primary1)};\r\n  }\r\n  &:active {\r\n    box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.1, theme.primary1)};\r\n    background-color: ${({ theme }) => darken(0.1, theme.primary1)};\r\n  }\r\n  &:disabled {\r\n    background-color: ${({ theme }) => theme.primary1};\r\n    opacity: 50%;\r\n    cursor: auto;\r\n  }\r\n`\r\n\r\nexport const ButtonUNIGradient = styled(ButtonPrimary)`\r\n  color: white;\r\n  padding: 4px 8px;\r\n  height: 36px;\r\n  font-weight: 500;\r\n  background-color: ${({ theme }) => theme.bg3};\r\n  background: radial-gradient(174.47% 188.91% at 1.84% 0%, #ff007a 0%, #2172e5 100%), #edeef2;\r\n  width: fit-content;\r\n  position: relative;\r\n  cursor: pointer;\r\n  border: none;\r\n  white-space: no-wrap;\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n  :active {\r\n    opacity: 0.9;\r\n  }\r\n`\r\n\r\nexport const ButtonOutlined = styled(Base)`\r\n  border: 1px solid ${({ theme }) => theme.bg2};\r\n  background-color: transparent;\r\n  color: ${({ theme }) => theme.text1};\r\n\r\n  &:focus {\r\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.bg4};\r\n  }\r\n  &:hover {\r\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.bg4};\r\n  }\r\n  &:active {\r\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.bg4};\r\n  }\r\n  &:disabled {\r\n    opacity: 50%;\r\n    cursor: auto;\r\n  }\r\n`\r\n\r\nexport const ButtonEmpty = styled(Base)`\r\n  background-color: transparent;\r\n  color: ${({ theme }) => theme.primary1};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  &:focus {\r\n    text-decoration: underline;\r\n  }\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n  &:active {\r\n    text-decoration: none;\r\n  }\r\n  &:disabled {\r\n    opacity: 50%;\r\n    cursor: auto;\r\n  }\r\n`\r\n\r\nexport const ButtonWhite = styled(Base)`\r\n  border: 1px solid #edeef2;\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  color: black;\r\n\r\n  &:focus {\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    box-shadow: 0 0 0 1pt ${darken(0.05, '#edeef2')};\r\n  }\r\n  &:hover {\r\n    box-shadow: 0 0 0 1pt ${darken(0.1, '#edeef2')};\r\n  }\r\n  &:active {\r\n    box-shadow: 0 0 0 1pt ${darken(0.1, '#edeef2')};\r\n  }\r\n  &:disabled {\r\n    opacity: 50%;\r\n    cursor: auto;\r\n  }\r\n`\r\n\r\nconst ButtonConfirmedStyle = styled(Base)`\r\n  background-color: ${({ theme }) => lighten(0.5, theme.green1)};\r\n  color: ${({ theme }) => theme.green1};\r\n  border: 1px solid ${({ theme }) => theme.green1};\r\n\r\n  &:disabled {\r\n    opacity: 50%;\r\n    cursor: auto;\r\n  }\r\n`\r\n\r\nconst ButtonErrorStyle = styled(Base)`\r\n  background-color: ${({ theme }) => theme.red1};\r\n  border: 1px solid ${({ theme }) => theme.red1};\r\n\r\n  &:focus {\r\n    box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.05, theme.red1)};\r\n    background-color: ${({ theme }) => darken(0.05, theme.red1)};\r\n  }\r\n  &:hover {\r\n    background-color: ${({ theme }) => darken(0.05, theme.red1)};\r\n  }\r\n  &:active {\r\n    box-shadow: 0 0 0 1pt ${({ theme }) => darken(0.1, theme.red1)};\r\n    background-color: ${({ theme }) => darken(0.1, theme.red1)};\r\n  }\r\n  &:disabled {\r\n    opacity: 50%;\r\n    cursor: auto;\r\n    box-shadow: none;\r\n    background-color: ${({ theme }) => theme.red1};\r\n    border: 1px solid ${({ theme }) => theme.red1};\r\n  }\r\n`\r\n\r\nexport function ButtonConfirmed({\r\n  confirmed,\r\n  altDisabledStyle,\r\n  ...rest\r\n}: { confirmed?: boolean; altDisabledStyle?: boolean } & ButtonProps) {\r\n  if (confirmed) {\r\n    return <ButtonConfirmedStyle {...rest} />\r\n  } else {\r\n    return <ButtonPrimary {...rest} altDisabledStyle={altDisabledStyle} />\r\n  }\r\n}\r\n\r\nexport function ButtonError({ error, ...rest }: { error?: boolean } & ButtonProps) {\r\n  if (error) {\r\n    return <ButtonErrorStyle {...rest} />\r\n  } else {\r\n    return <ButtonPrimary {...rest} />\r\n  }\r\n}\r\n\r\nexport function ButtonDropdown({ disabled = false, children, ...rest }: { disabled?: boolean } & ButtonProps) {\r\n  return (\r\n    <ButtonPrimary {...rest} disabled={disabled}>\r\n      <RowBetween>\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\r\n        <ChevronDown size={24} />\r\n      </RowBetween>\r\n    </ButtonPrimary>\r\n  )\r\n}\r\n\r\nexport function ButtonDropdownGrey({ disabled = false, children, ...rest }: { disabled?: boolean } & ButtonProps) {\r\n  return (\r\n    <ButtonGray {...rest} disabled={disabled} style={{ borderRadius: '20px' }}>\r\n      <RowBetween>\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\r\n        <ChevronDown size={24} />\r\n      </RowBetween>\r\n    </ButtonGray>\r\n  )\r\n}\r\n\r\nexport function ButtonDropdownLight({ disabled = false, children, ...rest }: { disabled?: boolean } & ButtonProps) {\r\n  return (\r\n    <ButtonOutlined {...rest} disabled={disabled}>\r\n      <RowBetween>\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\r\n        <ChevronDown size={24} />\r\n      </RowBetween>\r\n    </ButtonOutlined>\r\n  )\r\n}\r\n\r\nexport function ButtonRadio({ active, ...rest }: { active?: boolean } & ButtonProps) {\r\n  if (!active) {\r\n    return <ButtonWhite {...rest} />\r\n  } else {\r\n    return <ButtonPrimary {...rest} />\r\n  }\r\n}\r\n\r\nconst ActiveOutlined = styled(ButtonOutlined)`\r\n  border: 1px solid;\r\n  border-color: ${({ theme }) => theme.primary1};\r\n`\r\n\r\nconst Circle = styled.div`\r\n  height: 20px;\r\n  width: 20px;\r\n  border-radius: 50%;\r\n  background-color: ${({ theme }) => theme.primary1};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst CheckboxWrapper = styled.div`\r\n  width: 30px;\r\n  padding: 0 10px;\r\n`\r\n\r\nexport function ButtonRadioChecked({ active = false, children, ...rest }: { active?: boolean } & ButtonProps) {\r\n  if (!active) {\r\n    return (\r\n      <ButtonOutlined borderRadius=\"12px\" padding=\"12px 8px\" {...rest}>\r\n        {<RowBetween>{children}</RowBetween>}\r\n      </ButtonOutlined>\r\n    )\r\n  } else {\r\n    return (\r\n      <ActiveOutlined {...rest} padding=\"12px 8px\" borderRadius=\"12px\">\r\n        {\r\n          <RowBetween>\r\n            {children}\r\n            <CheckboxWrapper>\r\n              <Circle>\r\n                <Check size={13} />\r\n              </Circle>\r\n            </CheckboxWrapper>\r\n          </RowBetween>\r\n        }\r\n      </ActiveOutlined>\r\n    )\r\n  }\r\n}\r\n\r\nconst HoverIcon = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 9999;\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n`\r\n\r\nexport const SavedIcon = ({\r\n  fill = false,\r\n  size = '20px',\r\n  ...rest\r\n}: { fill: boolean; size?: string } & HTMLAttributes<HTMLDivElement>) => {\r\n  const theme = useTheme()\r\n  return (\r\n    <HoverIcon {...rest}>\r\n      <Star stroke={theme.text2} fill={fill ? theme.text2 : 'transparent'} size={size} />\r\n    </HoverIcon>\r\n  )\r\n}\r\n\r\nexport const SmallOptionButton = styled(Base)<{ active?: boolean }>`\r\n  padding: 4px;\r\n  width: fit-content;\r\n  font-size: 12px;\r\n  border-radius: 4px;\r\n  min-width: 36px;\r\n  background-color: ${({ active, theme }) => (active ? theme.bg2 : theme.bg1)};\r\n  color: ${({ active, theme }) => (active ? theme.text1 : theme.text2)};\r\n\r\n  :hover {\r\n    opacity: 0.6;\r\n  }\r\n`\r\n","import { Placement } from '@popperjs/core'\r\nimport { transparentize } from 'polished'\r\nimport React, { useCallback, useState } from 'react'\r\nimport { usePopper } from 'react-popper'\r\nimport styled from 'styled-components'\r\nimport useInterval from '../../hooks/useInterval'\r\nimport Portal from '@reach/portal'\r\n\r\nconst PopoverContainer = styled.div<{ show: boolean }>`\r\n  z-index: 9999;\r\n\r\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\r\n  opacity: ${(props) => (props.show ? 1 : 0)};\r\n  transition: visibility 150ms linear, opacity 150ms linear;\r\n\r\n  background: ${({ theme }) => theme.bg2};\r\n  border: 1px solid ${({ theme }) => theme.bg3};\r\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.9, theme.shadow1)};\r\n  color: ${({ theme }) => theme.text2};\r\n  border-radius: 8px;\r\n`\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  z-index: 9998;\r\n\r\n  ::before {\r\n    position: absolute;\r\n    width: 8px;\r\n    height: 8px;\r\n    z-index: 9998;\r\n\r\n    content: '';\r\n    border: 1px solid ${({ theme }) => theme.bg3};\r\n    transform: rotate(45deg);\r\n    background: ${({ theme }) => theme.bg2};\r\n  }\r\n\r\n  &.arrow-top {\r\n    bottom: -5px;\r\n    ::before {\r\n      border-top: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-bottom {\r\n    top: -5px;\r\n    ::before {\r\n      border-bottom: none;\r\n      border-right: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-left {\r\n    right: -5px;\r\n\r\n    ::before {\r\n      border-bottom: none;\r\n      border-left: none;\r\n    }\r\n  }\r\n\r\n  &.arrow-right {\r\n    left: -5px;\r\n    ::before {\r\n      border-right: none;\r\n      border-top: none;\r\n    }\r\n  }\r\n`\r\n\r\nexport interface PopoverProps {\r\n  content: React.ReactNode\r\n  show: boolean\r\n  children: React.ReactNode\r\n  placement?: Placement\r\n}\r\n\r\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\r\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null)\r\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null)\r\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null)\r\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement,\r\n    strategy: 'fixed',\r\n    modifiers: [\r\n      { name: 'offset', options: { offset: [8, 8] } },\r\n      { name: 'arrow', options: { element: arrowElement } },\r\n    ],\r\n  })\r\n  const updateCallback = useCallback(() => {\r\n    update && update()\r\n  }, [update])\r\n  useInterval(updateCallback, show ? 100 : null)\r\n\r\n  return (\r\n    <>\r\n      <ReferenceElement ref={setReferenceElement as any}>{children}</ReferenceElement>\r\n      <Portal>\r\n        <PopoverContainer show={show} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\r\n          {content}\r\n          <Arrow\r\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\r\n            ref={setArrowElement as any}\r\n            style={styles.arrow}\r\n            {...attributes.arrow}\r\n          />\r\n        </PopoverContainer>\r\n      </Portal>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\r\n  const savedCallback = useRef<() => void>()\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      const current = savedCallback.current\r\n      current && current()\r\n    }\r\n\r\n    if (delay !== null) {\r\n      if (leading) tick()\r\n      const id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n    return undefined\r\n  }, [delay, leading])\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Popover, { PopoverProps } from '../Popover'\r\n\r\nconst TooltipContainer = styled.div`\r\n  width: 228px;\r\n  padding: 0.6rem 1rem;\r\n  line-height: 150%;\r\n  font-weight: 400;\r\n`\r\n\r\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\r\n  text: string\r\n}\r\n\r\nexport default function Tooltip({ text, ...rest }: TooltipProps) {\r\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\r\n}\r\n\r\nexport function MouseoverTooltip({ children, ...rest }: Omit<TooltipProps, 'show'>) {\r\n  const [show, setShow] = useState(false)\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n  return (\r\n    <Tooltip {...rest} show={show}>\r\n      <div onMouseEnter={open} onMouseLeave={close}>\r\n        {children}\r\n      </div>\r\n    </Tooltip>\r\n  )\r\n}\r\n","import Tooltip from 'components/Tooltip'\r\nimport React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst TextWrapper = styled.div<{\r\n  margin: boolean\r\n  link: boolean\r\n  color?: string\r\n  fontSize?: string\r\n  adjustSize?: boolean\r\n}>`\r\n  position: relative;\r\n  margin-left: ${({ margin }) => margin && '4px'};\r\n  color: ${({ theme, link, color }) => (link ? theme.blue1 : color ?? theme.text1)};\r\n  font-size: ${({ fontSize }) => fontSize ?? 'inherit'};\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: ${({ adjustSize }) => adjustSize && '12px'};\r\n  }\r\n`\r\n\r\nconst HoverInlineText = ({\r\n  text,\r\n  maxCharacters = 20,\r\n  margin = false,\r\n  adjustSize = false,\r\n  fontSize,\r\n  color,\r\n  link,\r\n  ...rest\r\n}: {\r\n  text: string\r\n  maxCharacters?: number\r\n  margin?: boolean\r\n  adjustSize?: boolean\r\n  fontSize?: string\r\n  color?: string\r\n  link?: boolean\r\n}) => {\r\n  const [showHover, setShowHover] = useState(false)\r\n\r\n  if (!text) {\r\n    return <span></span>\r\n  }\r\n\r\n  if (text.length > maxCharacters) {\r\n    return (\r\n      <Tooltip text={text} show={showHover}>\r\n        <TextWrapper\r\n          onMouseEnter={() => setShowHover(true)}\r\n          onMouseLeave={() => setShowHover(false)}\r\n          margin={margin}\r\n          adjustSize={adjustSize}\r\n          link={!!link}\r\n          color={color}\r\n          fontSize={fontSize}\r\n          {...rest}\r\n        >\r\n          {' ' + text.slice(0, maxCharacters - 1) + '...'}\r\n        </TextWrapper>\r\n      </Tooltip>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <TextWrapper color={color} margin={margin} adjustSize={adjustSize} link={!!link} fontSize={fontSize} {...rest}>\r\n      {text}\r\n    </TextWrapper>\r\n  )\r\n}\r\n\r\nexport default HoverInlineText\r\n","import React, { useRef, useCallback, useState, useEffect, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport Row, { RowFixed } from 'components/Row'\r\nimport { HideSmall, TYPE } from 'theme'\r\nimport Hotkeys from 'react-hot-keys'\r\nimport { useFetchSearchResults } from 'data/search'\r\nimport { AutoColumn } from 'components/Column'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport { formatDollarAmount } from 'utils/numbers'\r\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\r\nimport { GreyBadge } from 'components/Card'\r\nimport { feeTierPercent } from 'utils'\r\nimport { useSavedTokens, useSavedPools } from 'state/user/hooks'\r\nimport { SavedIcon } from 'components/Button'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useTokenDatas } from 'state/tokens/hooks'\r\nimport { usePoolDatas } from 'state/pools/hooks'\r\nimport HoverInlineText from 'components/HoverInlineText'\r\nimport { TOKEN_HIDE, POOL_HIDE } from '../../constants/index'\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  z-index: 30;\r\n  width: 100%;\r\n`\r\n\r\nconst Wrapper = styled(Row)`\r\n  background-color: ${({ theme }) => theme.black};\r\n  padding: 10px 16px;\r\n  width: 500px;\r\n  height: 38px;\r\n  border-radius: 20px;\r\n  positon: relative;\r\n  z-index: 9999;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    width: 100%;\r\n  `};\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  white-space: nowrap;\r\n  background: none;\r\n  border: none;\r\n  width: 100%;\r\n  font-size: 16px;\r\n  outline: none;\r\n  color: ${({ theme }) => theme.text1};\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.text3};\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media screen and (max-width: 640px) {\r\n    ::placeholder {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nconst Menu = styled.div<{ hide: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  z-index: 9999;\r\n  width: 800px;\r\n  top: 50px;\r\n  max-height: 600px;\r\n  overflow: auto;\r\n  right: 0;\r\n  padding: 1.5rem;\r\n  padding-bottom: 1.5rem;\r\n  position: absolute;\r\n  background: ${({ theme }) => theme.bg0};\r\n  border-radius: 8px;\r\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\r\n    0px 24px 32px rgba(0, 0, 0, 0.04);\r\n  display: ${({ hide }) => hide && 'none'};\r\n  border: 1px solid ${({ theme }) => theme.pink1};\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    position: absolute;\r\n    margin-top: 4px;\r\n    z-index: 9999;\r\n    width: 100%;\r\n    max-height: 400px;\r\n  `};\r\n`\r\n\r\nconst Blackout = styled.div`\r\n  position: absolute;\r\n  min-height: 100vh;\r\n  width: 100vw;\r\n  z-index: -40;\r\n  background-color: black;\r\n  opacity: 0.7;\r\n  left: 0;\r\n  top: 0;\r\n`\r\n\r\nconst ResponsiveGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-template-columns: 1.5fr repeat(3, 1fr);\r\n  align-items: center;\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    grid-template-columns: 1fr;\r\n  `};\r\n`\r\n\r\nconst Break = styled.div`\r\n  height: 1px;\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  width: 100%;\r\n`\r\n\r\nconst HoverText = styled.div<{ hide?: boolean | undefined }>`\r\n  color: ${({ theme }) => theme.blue1}\r\n  display: ${({ hide = false }) => hide && 'none'};\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n`\r\n\r\nconst HoverRowLink = styled.div`\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n`\r\n\r\nconst OptionButton = styled.div<{ enabled: boolean }>`\r\n  width: fit-content;\r\n  padding: 4px 8px;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  margin-right: 10px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${({ theme, enabled }) => (enabled ? theme.pink1 : 'transparent')};\r\n  color: ${({ theme, enabled }) => (enabled ? theme.white : theme.pink1)};\r\n  :hover {\r\n    opacity: 0.6;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst Search = ({ ...rest }: React.HTMLAttributes<HTMLDivElement>) => {\r\n  const history = useHistory()\r\n\r\n  const ref = useRef<HTMLInputElement>(null)\r\n  const menuRef = useRef<HTMLDivElement>(null)\r\n  const textRef = useRef<HTMLDivElement>(null)\r\n\r\n  const handleDown = useCallback(() => {\r\n    if (ref != null && ref.current !== null) {\r\n      ref.current.focus()\r\n    }\r\n  }, [])\r\n\r\n  const [focused, setFocused] = useState<boolean>(false)\r\n  const [showMenu, setShowMenu] = useState(false)\r\n  const [value, setValue] = useState('')\r\n\r\n  const { tokens, pools } = useFetchSearchResults(value)\r\n\r\n  useEffect(() => {\r\n    if (value !== '') {\r\n      setFocused(true)\r\n    } else {\r\n      setFocused(false)\r\n    }\r\n  }, [value])\r\n\r\n  const [tokensShown, setTokensShown] = useState(3)\r\n  const [poolsShown, setPoolsShown] = useState(3)\r\n\r\n  const handleClick = (e: any) => {\r\n    if (!(menuRef.current && menuRef.current.contains(e.target)) && !(ref.current && ref.current.contains(e.target))) {\r\n      setPoolsShown(3)\r\n      setTokensShown(3)\r\n      setShowMenu(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClick)\r\n    return () => {\r\n      document.removeEventListener('click', handleClick)\r\n    }\r\n  })\r\n\r\n  // watchlist\r\n  const [savedTokens, addSavedToken] = useSavedTokens()\r\n  const [savedPools, addSavedPool] = useSavedPools()\r\n\r\n  const handleNav = (to: string) => {\r\n    setShowMenu(false)\r\n    setPoolsShown(3)\r\n    setTokensShown(3)\r\n    history.push(to)\r\n  }\r\n\r\n  // get date for watchlist\r\n  const watchListTokenData = useTokenDatas(savedTokens)\r\n  const watchListPoolData = usePoolDatas(savedPools)\r\n\r\n  // filter on view\r\n  const [showWatchlist, setShowWatchlist] = useState(false)\r\n  const tokensForList = useMemo(\r\n    () => (showWatchlist ? watchListTokenData ?? [] : tokens.sort((t0, t1) => (t0.volumeUSD > t1.volumeUSD ? -1 : 1))),\r\n    [showWatchlist, tokens, watchListTokenData]\r\n  )\r\n  const poolForList = useMemo(\r\n    () => (showWatchlist ? watchListPoolData ?? [] : pools.sort((p0, p1) => (p0.volumeUSD > p1.volumeUSD ? -1 : 1))),\r\n    [pools, showWatchlist, watchListPoolData]\r\n  )\r\n\r\n  return (\r\n    <Hotkeys keyName=\"command+/\" onKeyDown={handleDown}>\r\n      {showMenu ? <Blackout /> : null}\r\n      <Container>\r\n        <Wrapper {...rest}>\r\n          <StyledInput\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={(e) => {\r\n              setValue(e.target.value)\r\n            }}\r\n            placeholder=\"Search pools or tokens\"\r\n            ref={ref}\r\n            onFocus={() => {\r\n              setFocused(true)\r\n              setShowMenu(true)\r\n            }}\r\n            onBlur={() => setFocused(false)}\r\n          />\r\n          {!focused && <TYPE.gray pl=\"2px\">⌘/</TYPE.gray>}\r\n        </Wrapper>\r\n        <Menu hide={!showMenu} ref={menuRef}>\r\n          <AutoColumn gap=\"lg\">\r\n            <AutoColumn gap=\"sm\">\r\n              <RowFixed>\r\n                <OptionButton enabled={!showWatchlist} onClick={() => setShowWatchlist(false)}>\r\n                  Search\r\n                </OptionButton>\r\n                <OptionButton enabled={showWatchlist} onClick={() => setShowWatchlist(true)}>\r\n                  Watchlist\r\n                </OptionButton>\r\n              </RowFixed>\r\n            </AutoColumn>\r\n            <ResponsiveGrid>\r\n              <TYPE.main>Tokens</TYPE.main>\r\n              <HideSmall>\r\n                <TYPE.main textAlign=\"end\" fontSize=\"12px\">\r\n                  Volume 24H\r\n                </TYPE.main>\r\n              </HideSmall>\r\n              <HideSmall>\r\n                <TYPE.main textAlign=\"end\" fontSize=\"12px\">\r\n                  TVL\r\n                </TYPE.main>\r\n              </HideSmall>\r\n              <HideSmall>\r\n                <TYPE.main textAlign=\"end\" fontSize=\"12px\">\r\n                  Price\r\n                </TYPE.main>\r\n              </HideSmall>\r\n            </ResponsiveGrid>\r\n            {tokensForList\r\n              .filter((t) => !TOKEN_HIDE.includes(t.address))\r\n              .slice(0, tokensShown)\r\n              .map((t, i) => {\r\n                return (\r\n                  <HoverRowLink onClick={() => handleNav('/tokens/' + t.address)} key={i}>\r\n                    <ResponsiveGrid>\r\n                      <RowFixed>\r\n                        <CurrencyLogo address={t.address} />\r\n                        <TYPE.label ml=\"10px\">\r\n                          <HoverInlineText text={`${t.name} (${t.symbol})`} />{' '}\r\n                        </TYPE.label>\r\n                        <SavedIcon\r\n                          id=\"watchlist-icon\"\r\n                          size={'16px'}\r\n                          style={{ marginLeft: '8px' }}\r\n                          fill={savedTokens.includes(t.address)}\r\n                          onClick={(e) => {\r\n                            e.stopPropagation()\r\n                            addSavedToken(t.address)\r\n                          }}\r\n                        />\r\n                      </RowFixed>\r\n                      <HideSmall>\r\n                        <TYPE.label textAlign=\"end\">{formatDollarAmount(t.volumeUSD)}</TYPE.label>\r\n                      </HideSmall>\r\n                      <HideSmall>\r\n                        <TYPE.label textAlign=\"end\">{formatDollarAmount(t.tvlUSD)}</TYPE.label>\r\n                      </HideSmall>\r\n                      <HideSmall>\r\n                        <TYPE.label textAlign=\"end\">{formatDollarAmount(t.priceUSD)}</TYPE.label>\r\n                      </HideSmall>\r\n                    </ResponsiveGrid>\r\n                  </HoverRowLink>\r\n                )\r\n              })}\r\n            {tokensForList.length === 0 ? (\r\n              <TYPE.main>{showWatchlist ? 'Saved tokens will appear here' : 'No results'}</TYPE.main>\r\n            ) : null}\r\n            <HoverText\r\n              onClick={() => {\r\n                setTokensShown(tokensShown + 5)\r\n              }}\r\n              hide={!(tokensForList.length > 3 && tokensForList.length >= tokensShown)}\r\n              ref={textRef}\r\n            >\r\n              See more...\r\n            </HoverText>\r\n            <Break />\r\n            <ResponsiveGrid>\r\n              <TYPE.main>Pools</TYPE.main>\r\n              <HideSmall>\r\n                <TYPE.main textAlign=\"end\" fontSize=\"12px\">\r\n                  Volume 24H\r\n                </TYPE.main>\r\n              </HideSmall>\r\n              <HideSmall>\r\n                <TYPE.main textAlign=\"end\" fontSize=\"12px\">\r\n                  TVL\r\n                </TYPE.main>\r\n              </HideSmall>\r\n              <HideSmall>\r\n                <TYPE.main textAlign=\"end\" fontSize=\"12px\">\r\n                  Price\r\n                </TYPE.main>\r\n              </HideSmall>\r\n            </ResponsiveGrid>\r\n            {poolForList\r\n              .filter((p) => !POOL_HIDE.includes(p.address))\r\n              .slice(0, poolsShown)\r\n              .map((p, i) => {\r\n                return (\r\n                  <HoverRowLink onClick={() => handleNav('/pools/' + p.address)} key={i}>\r\n                    <ResponsiveGrid key={i}>\r\n                      <RowFixed>\r\n                        <DoubleCurrencyLogo address0={p.token0.address} address1={p.token1.address} />\r\n                        <TYPE.label ml=\"10px\" style={{ whiteSpace: 'nowrap' }}>\r\n                          <HoverInlineText maxCharacters={12} text={`${p.token0.symbol} / ${p.token1.symbol}`} />\r\n                        </TYPE.label>\r\n                        <GreyBadge ml=\"10px\">{feeTierPercent(p.feeTier)}</GreyBadge>\r\n                        <SavedIcon\r\n                          id=\"watchlist-icon\"\r\n                          size={'16px'}\r\n                          style={{ marginLeft: '10px' }}\r\n                          fill={savedPools.includes(p.address)}\r\n                          onClick={(e) => {\r\n                            e.stopPropagation()\r\n                            addSavedPool(p.address)\r\n                          }}\r\n                        />\r\n                      </RowFixed>\r\n                      <HideSmall>\r\n                        <TYPE.label textAlign=\"end\">{formatDollarAmount(p.volumeUSD)}</TYPE.label>\r\n                      </HideSmall>\r\n                      <HideSmall>\r\n                        <TYPE.label textAlign=\"end\">{formatDollarAmount(p.tvlUSD)}</TYPE.label>\r\n                      </HideSmall>\r\n                      <HideSmall>\r\n                        <TYPE.label textAlign=\"end\">{formatDollarAmount(p.token0Price)}</TYPE.label>\r\n                      </HideSmall>\r\n                    </ResponsiveGrid>\r\n                  </HoverRowLink>\r\n                )\r\n              })}\r\n            {poolForList.length === 0 ? (\r\n              <TYPE.main>{showWatchlist ? 'Saved pools will appear here' : 'No results'}</TYPE.main>\r\n            ) : null}\r\n            <HoverText\r\n              onClick={() => {\r\n                setPoolsShown(poolsShown + 5)\r\n              }}\r\n              hide={!(poolForList.length > 3 && poolForList.length >= poolsShown)}\r\n              ref={textRef}\r\n            >\r\n              See more...\r\n            </HoverText>\r\n          </AutoColumn>\r\n        </Menu>\r\n      </Container>\r\n    </Hotkeys>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","/* eslint-disable @typescript-eslint/no-var-requires */\r\n// import { ChainId } from '@uniswap/sdk'\r\nimport React from 'react'\r\n// import { Text } from 'rebass'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { darken } from 'polished'\r\n\r\nimport styled from 'styled-components'\r\n\r\n// import Logo from '../../assets/svg/logo.svg'\r\nimport LogoDark from '../../assets/svg/logo_white.svg'\r\n// import { useActiveWeb3React } from '../../hooks'\r\n// import { useDarkModeManager } from '../../state/user/hooks'\r\n// import { useETHBalances } from '../../state/wallet/hooks'\r\n\r\n// import { YellowCard } from '../Card'\r\n// import { Moon, Sun } from 'react-feather'\r\nimport Menu from '../Menu'\r\n\r\nimport Row, { RowFixed } from '../Row'\r\n// import Web3Status from '../Web3Status'\r\nimport SearchSmall from 'components/Search'\r\nimport { HideMedium } from 'theme'\r\n\r\nconst HeaderFrame = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 120px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  top: 0;\r\n  position: relative;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 1rem;\r\n  z-index: 2;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n\r\n  background-color: ${({ theme }) => theme.bg0};\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    grid-template-columns: 1fr;\r\n    padding: 0 1rem;\r\n    width: calc(100%);\r\n    position: relative;\r\n  `};\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\r\n        padding: 0.5rem 1rem;\r\n  `}\r\n`\r\n\r\nconst HeaderControls = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-self: flex-end;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n      padding-bottom: 1rem;\r\n      width: 100%;\r\n  `};\r\n`\r\n\r\n// const HeaderElement = styled.div`\r\n//   display: flex;\r\n//   align-items: center;\r\n\r\n//   /* addresses safari's lack of support for \"gap\" */\r\n//   & > *:not(:first-child) {\r\n//     margin-left: 8px;\r\n//   }\r\n\r\n//   ${({ theme }) => theme.mediaWidth.upToMedium`\r\n//    flex-direction: row-reverse;\r\n//     align-items: center;\r\n//   `};\r\n// `\r\n\r\nconst HeaderElementWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst HeaderRow = styled(RowFixed)`\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n   width: 100%;\r\n  `};\r\n`\r\n\r\nconst HeaderLinks = styled(Row)`\r\n  justify-content: center;\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    padding: 1rem 0 1rem 1rem;\r\n    justify-content: flex-end;\r\n`};\r\n`\r\n\r\n// const AccountElement = styled.div<{ active: boolean }>`\r\n//   display: flex;\r\n//   flex-direction: row;\r\n//   align-items: center;\r\n//   background-color: ${({ theme, active }) => (!active ? theme.bg0 : theme.bg1)};\r\n//   border-radius: 12px;\r\n//   white-space: nowrap;\r\n//   width: 100%;\r\n//   cursor: pointer;\r\n\r\n//   :focus {\r\n//     border: 1px solid blue;\r\n//   }\r\n// `\r\n\r\n// const HideSmall = styled.span`\r\n//   ${({ theme }) => theme.mediaWidth.upToSmall`\r\n//     display: none;\r\n//   `};\r\n// `\r\n\r\n// const NetworkCard = styled(YellowCard)`\r\n//   border-radius: 12px;\r\n//   padding: 8px 12px;\r\n//   ${({ theme }) => theme.mediaWidth.upToSmall`\r\n//     margin: 0;\r\n//     margin-right: 0.5rem;\r\n//     width: initial;\r\n//     overflow: hidden;\r\n//     text-overflow: ellipsis;\r\n//     flex-shrink: 1;\r\n//   `};\r\n// `\r\n\r\n// const BalanceText = styled(Text)`\r\n//   ${({ theme }) => theme.mediaWidth.upToExtraSmall`\r\n//     display: none;\r\n//   `};\r\n// `\r\n\r\nconst Title = styled(NavLink)`\r\n  display: flex;\r\n  align-items: center;\r\n  pointer-events: auto;\r\n  justify-self: flex-start;\r\n  margin-right: 12px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    justify-self: center;\r\n  `};\r\n`\r\n\r\nconst UniIcon = styled.div`\r\n  transition: transform 0.3s ease;\r\n  :hover {\r\n    transform: rotate(-5deg);\r\n  }\r\n`\r\n\r\nconst activeClassName = 'ACTIVE'\r\n\r\nconst StyledNavLink = styled(NavLink).attrs({\r\n  activeClassName,\r\n})`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  align-items: left;\r\n  border-radius: 3rem;\r\n  outline: none;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  color: ${({ theme }) => theme.text3};\r\n  font-size: 1rem;\r\n  width: fit-content;\r\n  margin: 0 6px;\r\n  padding: 8px 12px;\r\n  font-weight: 500;\r\n\r\n  &.${activeClassName} {\r\n    border-radius: 12px;\r\n    background-color: ${({ theme }) => theme.bg2};\r\n    color: ${({ theme }) => theme.text1};\r\n  }\r\n\r\n  :hover,\r\n  :focus {\r\n    color: ${({ theme }) => darken(0.1, theme.text1)};\r\n  }\r\n`\r\n\r\nexport const StyledMenuButton = styled.button`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  background-color: transparent;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 35px;\r\n  background-color: ${({ theme }) => theme.bg3};\r\n  margin-left: 8px;\r\n  padding: 0.15rem 0.5rem;\r\n  border-radius: 0.5rem;\r\n\r\n  :hover,\r\n  :focus {\r\n    cursor: pointer;\r\n    outline: none;\r\n    background-color: ${({ theme }) => theme.bg4};\r\n  }\r\n\r\n  svg {\r\n    margin-top: 2px;\r\n  }\r\n  > * {\r\n    stroke: ${({ theme }) => theme.text1};\r\n  }\r\n`\r\n\r\n// const NETWORK_LABELS: { [chainId in ChainId]?: string } = {\r\n//   [ChainId.RINKEBY]: 'Rinkeby',\r\n//   [ChainId.ROPSTEN]: 'Ropsten',\r\n//   [ChainId.GÖRLI]: 'Görli',\r\n//   [ChainId.KOVAN]: 'Kovan',\r\n// }\r\n\r\nexport default function Header() {\r\n  // const { account, chainId } = useActiveWeb3React()\r\n\r\n  // const userEthBalance = useETHBalances(account ? [account] : [])?.[account ?? '']\r\n  // const [isDark] = useDarkModeManager()\r\n  // const [darkMode, toggleDarkMode] = useDarkModeManager()\r\n\r\n  return (\r\n    <HeaderFrame>\r\n      <HeaderRow>\r\n        <Title to=\"/\">\r\n          <UniIcon>\r\n            <img width={'24px'} src={LogoDark} alt=\"logo\" />\r\n          </UniIcon>\r\n        </Title>\r\n        <HeaderLinks>\r\n          <StyledNavLink id={`pool-nav-link`} to={'/'} isActive={(match, { pathname }) => pathname === '/'}>\r\n            Overview\r\n          </StyledNavLink>\r\n          {/* <StyledNavLink id={`swap-nav-link`} to={'/protocol'}>\r\n            Protocol\r\n          </StyledNavLink> */}\r\n          <StyledNavLink id={`stake-nav-link`} to={'/pools'}>\r\n            Pools\r\n          </StyledNavLink>\r\n          <StyledNavLink id={`stake-nav-link`} to={'/tokens'}>\r\n            Tokens\r\n          </StyledNavLink>\r\n          {/* <StyledNavLink id={`stake-nav-link`} to={'/wallet'}>\r\n            Wallet\r\n          </StyledNavLink> */}\r\n        </HeaderLinks>\r\n      </HeaderRow>\r\n      <HeaderControls>\r\n        <SearchSmall />\r\n        {/* <HeaderElement>\r\n          <HideSmall>\r\n            {chainId && NETWORK_LABELS[chainId] && (\r\n              <NetworkCard title={NETWORK_LABELS[chainId]}>{NETWORK_LABELS[chainId]}</NetworkCard>\r\n            )}\r\n          </HideSmall>\r\n          <AccountElement active={!!account} style={{ pointerEvents: 'auto' }}>\r\n            {account && userEthBalance ? (\r\n              <BalanceText style={{ flexShrink: 0 }} pl=\"0.75rem\" pr=\"0.5rem\" fontWeight={500}>\r\n                {userEthBalance?.toSignificant(4)} ETH\r\n              </BalanceText>\r\n            ) : null}\r\n            <Web3Status />\r\n          </AccountElement>\r\n        </HeaderElement> */}\r\n        <HideMedium>\r\n          <HeaderElementWrap>\r\n            {/* <StyledMenuButton onClick={() => toggleDarkMode()}>\r\n            {darkMode ? <Moon size={20} /> : <Sun size={20} />}\r\n          </StyledMenuButton> */}\r\n            <Menu />\r\n          </HeaderElementWrap>\r\n        </HideMedium>\r\n      </HeaderControls>\r\n    </HeaderFrame>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { AlertTriangle, X } from 'react-feather'\r\nimport { useURLWarningToggle, useURLWarningVisible } from '../../state/user/hooks'\r\nimport { isMobile } from 'react-device-detect'\r\n\r\nconst PhishAlert = styled.div<{ isActive: any }>`\r\n  width: 100%;\r\n  padding: 6px 6px;\r\n  background-color: ${({ theme }) => theme.blue1};\r\n  color: white;\r\n  font-size: 11px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  display: ${({ isActive }) => (isActive ? 'flex' : 'none')};\r\n`\r\n\r\nexport const StyledClose = styled(X)`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport default function URLWarning() {\r\n  const toggleURLWarning = useURLWarningToggle()\r\n  const showURLWarning = useURLWarningVisible()\r\n\r\n  return isMobile ? (\r\n    <PhishAlert isActive={showURLWarning}>\r\n      <div style={{ display: 'flex' }}>\r\n        <AlertTriangle style={{ marginRight: 6 }} size={12} /> Make sure the URL is\r\n        <code style={{ padding: '0 4px', display: 'inline', fontWeight: 'bold' }}>app.uniswap.org</code>\r\n      </div>\r\n      <StyledClose size={12} onClick={toggleURLWarning} />\r\n    </PhishAlert>\r\n  ) : window.location.hostname === 'app.uniswap.org' ? (\r\n    <PhishAlert isActive={showURLWarning}>\r\n      <div style={{ display: 'flex' }}>\r\n        <AlertTriangle style={{ marginRight: 6 }} size={12} /> Always make sure the URL is\r\n        <code style={{ padding: '0 4px', display: 'inline', fontWeight: 'bold' }}>app.uniswap.org</code> - bookmark it\r\n        to be safe.\r\n      </div>\r\n      <StyledClose size={12} onClick={toggleURLWarning} />\r\n    </PhishAlert>\r\n  ) : null\r\n}\r\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\r\nimport { TokenList, Version } from '@uniswap/token-lists'\r\n\r\nexport const fetchTokenList: Readonly<{\r\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\r\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\r\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\r\n}> = {\r\n  pending: createAction('lists/fetchTokenList/pending'),\r\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\r\n  rejected: createAction('lists/fetchTokenList/rejected'),\r\n}\r\n// add and remove from list options\r\nexport const addList = createAction<string>('lists/addList')\r\nexport const removeList = createAction<string>('lists/removeList')\r\n\r\n// select which lists to search across from loaded lists\r\nexport const enableList = createAction<string>('lists/enableList')\r\nexport const disableList = createAction<string>('lists/disableList')\r\n\r\n// versioning\r\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\r\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\r\n","import { Version } from '@uniswap/token-lists'\r\n\r\nexport default function listVersionLabel(version: Version): string {\r\n  return `v${version.major}.${version.minor}.${version.patch}`\r\n}\r\n","import { diffTokenLists, TokenList } from '@uniswap/token-lists'\r\nimport React, { useCallback, useMemo } from 'react'\r\nimport ReactGA from 'react-ga'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Text } from 'rebass'\r\nimport styled from 'styled-components'\r\nimport { AppDispatch } from '../../state'\r\nimport { useRemovePopup } from '../../state/application/hooks'\r\nimport { acceptListUpdate } from '../../state/lists/actions'\r\nimport { TYPE } from '../../theme'\r\nimport listVersionLabel from '../../utils/listVersionLabel'\r\nimport { ButtonSecondary } from '../Button'\r\nimport { AutoColumn } from '../Column'\r\nimport { AutoRow } from '../Row'\r\n\r\nexport const ChangesList = styled.ul`\r\n  max-height: 400px;\r\n  overflow: auto;\r\n`\r\n\r\nexport default function ListUpdatePopup({\r\n  popKey,\r\n  listUrl,\r\n  oldList,\r\n  newList,\r\n  auto,\r\n}: {\r\n  popKey: string\r\n  listUrl: string\r\n  oldList: TokenList\r\n  newList: TokenList\r\n  auto: boolean\r\n}) {\r\n  const removePopup = useRemovePopup()\r\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const handleAcceptUpdate = useCallback(() => {\r\n    if (auto) return\r\n    ReactGA.event({\r\n      category: 'Lists',\r\n      action: 'Update List from Popup',\r\n      label: listUrl,\r\n    })\r\n    dispatch(acceptListUpdate(listUrl))\r\n    removeThisPopup()\r\n  }, [auto, dispatch, listUrl, removeThisPopup])\r\n\r\n  const { added: tokensAdded, changed: tokensChanged, removed: tokensRemoved } = useMemo(() => {\r\n    return diffTokenLists(oldList.tokens, newList.tokens)\r\n  }, [newList.tokens, oldList.tokens])\r\n  const numTokensChanged = useMemo(\r\n    () =>\r\n      Object.keys(tokensChanged).reduce((memo, chainId: any) => memo + Object.keys(tokensChanged[chainId]).length, 0),\r\n    [tokensChanged]\r\n  )\r\n\r\n  return (\r\n    <AutoRow>\r\n      <AutoColumn style={{ flex: '1' }} gap=\"8px\">\r\n        {auto ? (\r\n          <TYPE.body fontWeight={500}>\r\n            The token list &quot;{oldList.name}&quot; has been updated to{' '}\r\n            <strong>{listVersionLabel(newList.version)}</strong>.\r\n          </TYPE.body>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <Text>\r\n                An update is available for the token list &quot;{oldList.name}&quot; (\r\n                {listVersionLabel(oldList.version)} to {listVersionLabel(newList.version)}).\r\n              </Text>\r\n              <ChangesList>\r\n                {tokensAdded.length > 0 ? (\r\n                  <li>\r\n                    {tokensAdded.map((token, i) => (\r\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\r\n                        <strong title={token.address}>{token.symbol}</strong>\r\n                        {i === tokensAdded.length - 1 ? null : ', '}\r\n                      </React.Fragment>\r\n                    ))}{' '}\r\n                    added\r\n                  </li>\r\n                ) : null}\r\n                {tokensRemoved.length > 0 ? (\r\n                  <li>\r\n                    {tokensRemoved.map((token, i) => (\r\n                      <React.Fragment key={`${token.chainId}-${token.address}`}>\r\n                        <strong title={token.address}>{token.symbol}</strong>\r\n                        {i === tokensRemoved.length - 1 ? null : ', '}\r\n                      </React.Fragment>\r\n                    ))}{' '}\r\n                    removed\r\n                  </li>\r\n                ) : null}\r\n                {numTokensChanged > 0 ? <li>{numTokensChanged} tokens updated</li> : null}\r\n              </ChangesList>\r\n            </div>\r\n            <AutoRow>\r\n              <div style={{ flexGrow: 1, marginRight: 12 }}>\r\n                <ButtonSecondary onClick={handleAcceptUpdate}>Accept update</ButtonSecondary>\r\n              </div>\r\n              <div style={{ flexGrow: 1 }}>\r\n                <ButtonSecondary onClick={removeThisPopup}>Dismiss</ButtonSecondary>\r\n              </div>\r\n            </AutoRow>\r\n          </>\r\n        )}\r\n      </AutoColumn>\r\n    </AutoRow>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AlertCircle, CheckCircle } from 'react-feather'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { useActiveWeb3React } from '../../hooks'\r\nimport { TYPE } from '../../theme'\r\nimport { ExternalLink } from '../../theme/components'\r\nimport { getEtherscanLink } from '../../utils'\r\nimport { AutoColumn } from '../Column'\r\nimport { AutoRow } from '../Row'\r\n\r\nconst RowNoFlex = styled(AutoRow)`\r\n  flex-wrap: nowrap;\r\n`\r\n\r\nexport default function TransactionPopup({\r\n  hash,\r\n  success,\r\n  summary,\r\n}: {\r\n  hash: string\r\n  success?: boolean\r\n  summary?: string\r\n}) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const theme = useContext(ThemeContext)\r\n\r\n  return (\r\n    <RowNoFlex>\r\n      <div style={{ paddingRight: 16 }}>\r\n        {success ? <CheckCircle color={theme.green1} size={24} /> : <AlertCircle color={theme.red1} size={24} />}\r\n      </div>\r\n      <AutoColumn gap=\"8px\">\r\n        <TYPE.body fontWeight={500}>{summary ?? 'Hash: ' + hash.slice(0, 8) + '...' + hash.slice(58, 65)}</TYPE.body>\r\n        {chainId && (\r\n          <ExternalLink href={getEtherscanLink(chainId, hash, 'transaction')}>View on Etherscan</ExternalLink>\r\n        )}\r\n      </AutoColumn>\r\n    </RowNoFlex>\r\n  )\r\n}\r\n","import React, { useCallback, useContext, useEffect } from 'react'\r\nimport { X } from 'react-feather'\r\nimport { useSpring } from 'react-spring/web'\r\nimport styled, { ThemeContext } from 'styled-components'\r\nimport { animated } from 'react-spring'\r\nimport { PopupContent } from '../../state/application/actions'\r\nimport { useRemovePopup } from '../../state/application/hooks'\r\nimport ListUpdatePopup from './ListUpdatePopup'\r\nimport TransactionPopup from './TransactionPopup'\r\n\r\nexport const StyledClose = styled(X)`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\nexport const Popup = styled.div`\r\n  display: inline-block;\r\n  width: 100%;\r\n  padding: 1em;\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  position: relative;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  padding-right: 35px;\r\n  overflow: hidden;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    min-width: 290px;\r\n    &:not(:last-of-type) {\r\n      margin-right: 20px;\r\n    }\r\n  `}\r\n`\r\nconst Fader = styled.div`\r\n  position: absolute;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 2px;\r\n  background-color: ${({ theme }) => theme.bg3};\r\n`\r\n\r\nconst AnimatedFader = animated(Fader)\r\n\r\nexport default function PopupItem({\r\n  removeAfterMs,\r\n  content,\r\n  popKey,\r\n}: {\r\n  removeAfterMs: number | null\r\n  content: PopupContent\r\n  popKey: string\r\n}) {\r\n  const removePopup = useRemovePopup()\r\n  const removeThisPopup = useCallback(() => removePopup(popKey), [popKey, removePopup])\r\n  useEffect(() => {\r\n    if (removeAfterMs === null) return undefined\r\n\r\n    const timeout = setTimeout(() => {\r\n      removeThisPopup()\r\n    }, removeAfterMs)\r\n\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    }\r\n  }, [removeAfterMs, removeThisPopup])\r\n\r\n  const theme = useContext(ThemeContext)\r\n\r\n  let popupContent\r\n  if ('txn' in content) {\r\n    const {\r\n      txn: { hash, success, summary },\r\n    } = content\r\n    popupContent = <TransactionPopup hash={hash} success={success} summary={summary} />\r\n  } else if ('listUpdate' in content) {\r\n    const {\r\n      listUpdate: { listUrl, oldList, newList, auto },\r\n    } = content\r\n    popupContent = <ListUpdatePopup popKey={popKey} listUrl={listUrl} oldList={oldList} newList={newList} auto={auto} />\r\n  }\r\n\r\n  const faderStyle = useSpring({\r\n    from: { width: '100%' },\r\n    to: { width: '0%' },\r\n    config: { duration: removeAfterMs ?? undefined },\r\n  })\r\n\r\n  return (\r\n    <Popup>\r\n      <StyledClose color={theme.text2} onClick={removeThisPopup} />\r\n      {popupContent}\r\n      {removeAfterMs !== null ? <AnimatedFader style={faderStyle} /> : null}\r\n    </Popup>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useActivePopups } from '../../state/application/hooks'\r\nimport { AutoColumn } from '../Column'\r\nimport PopupItem from './PopupItem'\r\nimport { useURLWarningVisible } from '../../state/user/hooks'\r\n\r\nconst MobilePopupWrapper = styled.div<{ height: string | number }>`\r\n  position: relative;\r\n  max-width: 100%;\r\n  height: ${({ height }) => height};\r\n  margin: ${({ height }) => (height ? '0 auto;' : 0)};\r\n  margin-bottom: ${({ height }) => (height ? '20px' : 0)}};\r\n\r\n  display: none;\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    display: block;\r\n  `};\r\n`\r\n\r\nconst MobilePopupInner = styled.div`\r\n  height: 99%;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n  display: flex;\r\n  flex-direction: row;\r\n  -webkit-overflow-scrolling: touch;\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst FixedPopupColumn = styled(AutoColumn)<{ extraPadding: boolean }>`\r\n  position: fixed;\r\n  top: ${({ extraPadding }) => (extraPadding ? '108px' : '88px')};\r\n  right: 1rem;\r\n  max-width: 355px !important;\r\n  width: 100%;\r\n  z-index: 3;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    display: none;\r\n  `};\r\n`\r\n\r\nexport default function Popups() {\r\n  // get all popups\r\n  const activePopups = useActivePopups()\r\n\r\n  const urlWarningActive = useURLWarningVisible()\r\n\r\n  return (\r\n    <>\r\n      <FixedPopupColumn gap=\"20px\" extraPadding={urlWarningActive}>\r\n        {activePopups.map((item) => (\r\n          <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\r\n        ))}\r\n      </FixedPopupColumn>\r\n      <MobilePopupWrapper height={activePopups?.length > 0 ? 'fit-content' : 0}>\r\n        <MobilePopupInner>\r\n          {activePopups // reverse so new items up front\r\n            .slice(0)\r\n            .reverse()\r\n            .map((item) => (\r\n              <PopupItem key={item.key} content={item.content} popKey={item.key} removeAfterMs={item.removeAfterMs} />\r\n            ))}\r\n        </MobilePopupInner>\r\n      </MobilePopupWrapper>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { parse } from 'qs'\r\nimport { AppDispatch } from '../state'\r\nimport { updateUserDarkMode } from '../state/user/actions'\r\n\r\nexport default function DarkModeQueryParamReader({ location: { search } }: RouteComponentProps): null {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  useEffect(() => {\r\n    if (!search) return\r\n    if (search.length < 2) return\r\n\r\n    const parsed = parse(search, {\r\n      parseArrays: false,\r\n      ignoreQueryPrefix: true,\r\n    })\r\n\r\n    const theme = parsed.theme\r\n\r\n    if (typeof theme !== 'string') return\r\n\r\n    if (theme.toLowerCase() === 'light') {\r\n      dispatch(updateUserDarkMode({ userDarkMode: false }))\r\n    } else if (theme.toLowerCase() === 'dark') {\r\n      dispatch(updateUserDarkMode({ userDarkMode: true }))\r\n    }\r\n  }, [dispatch, search])\r\n\r\n  return null\r\n}\r\n","import React, { Dispatch, SetStateAction, ReactNode } from 'react'\r\nimport { ResponsiveContainer, XAxis, Tooltip, AreaChart, Area } from 'recharts'\r\nimport styled from 'styled-components'\r\nimport Card from 'components/Card'\r\nimport { RowBetween } from 'components/Row'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { darken } from 'polished'\r\ndayjs.extend(utc)\r\n\r\nconst DEFAULT_HEIGHT = 300\r\n\r\nconst Wrapper = styled(Card)`\r\n  width: 100%;\r\n  height: ${DEFAULT_HEIGHT}px;\r\n  padding: 1rem;\r\n  padding-right: 2rem;\r\n  display: flex;\r\n  background-color: ${({ theme }) => theme.bg0}\r\n  flex-direction: column;\r\n  > * {\r\n    font-size: 1rem;\r\n  }\r\n`\r\n\r\nexport type LineChartProps = {\r\n  data: any[]\r\n  color?: string | undefined\r\n  height?: number | undefined\r\n  minHeight?: number\r\n  setValue?: Dispatch<SetStateAction<number | undefined>> // used for value on hover\r\n  setLabel?: Dispatch<SetStateAction<string | undefined>> // used for label of valye\r\n  value?: number\r\n  label?: string\r\n  topLeft?: ReactNode | undefined\r\n  topRight?: ReactNode | undefined\r\n  bottomLeft?: ReactNode | undefined\r\n  bottomRight?: ReactNode | undefined\r\n} & React.HTMLAttributes<HTMLDivElement>\r\n\r\nconst Chart = ({\r\n  data,\r\n  color = '#56B2A4',\r\n  value,\r\n  label,\r\n  setValue,\r\n  setLabel,\r\n  topLeft,\r\n  topRight,\r\n  bottomLeft,\r\n  bottomRight,\r\n  minHeight = DEFAULT_HEIGHT,\r\n  ...rest\r\n}: LineChartProps) => {\r\n  const theme = useTheme()\r\n  const parsedValue = value\r\n\r\n  return (\r\n    <Wrapper minHeight={minHeight} {...rest}>\r\n      <RowBetween>\r\n        {topLeft ?? null}\r\n        {topRight ?? null}\r\n      </RowBetween>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <AreaChart\r\n          width={500}\r\n          height={300}\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n          onMouseLeave={() => {\r\n            setLabel && setLabel(undefined)\r\n            setValue && setValue(undefined)\r\n          }}\r\n        >\r\n          <defs>\r\n            <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n              <stop offset=\"5%\" stopColor={darken(0.36, color)} stopOpacity={0.5} />\r\n              <stop offset=\"100%\" stopColor={color} stopOpacity={0} />\r\n            </linearGradient>\r\n          </defs>\r\n          <XAxis\r\n            dataKey=\"time\"\r\n            axisLine={false}\r\n            tickLine={false}\r\n            tickFormatter={(time) => dayjs(time).format('DD')}\r\n            minTickGap={10}\r\n          />\r\n          <Tooltip\r\n            cursor={{ stroke: theme.bg2 }}\r\n            contentStyle={{ display: 'none' }}\r\n            formatter={(value: number, name: string, props: { payload: { time: string; value: number } }) => {\r\n              if (setValue && parsedValue !== props.payload.value) {\r\n                setValue(props.payload.value)\r\n              }\r\n              const formattedTime = dayjs(props.payload.time).format('MMM D, YYYY')\r\n              if (setLabel && label !== formattedTime) setLabel(formattedTime)\r\n            }}\r\n          />\r\n          <Area dataKey=\"value\" type=\"monotone\" stroke={color} fill=\"url(#gradient)\" strokeWidth={2} />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n      <RowBetween>\r\n        {bottomLeft ?? null}\r\n        {bottomRight ?? null}\r\n      </RowBetween>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Chart\r\n","import { ProtocolData } from './reducer'\r\nimport { createAction } from '@reduxjs/toolkit'\r\nimport { ChartDayData, Transaction } from 'types'\r\n\r\n// protocol wide info\r\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('protocol/updateProtocolData')\r\nexport const updateChartData = createAction<{ chartData: ChartDayData[] }>('protocol/updateChartData')\r\nexport const updateTransactions = createAction<{ transactions: Transaction[] }>('protocol/updateTransactions')\r\n","import { updateProtocolData, updateChartData, updateTransactions } from './actions'\r\nimport { AppState, AppDispatch } from './../index'\r\nimport { ProtocolData } from './reducer'\r\nimport { useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { ChartDayData, Transaction } from 'types'\r\n\r\nexport function useProtocolData(): [ProtocolData | undefined, (protocolData: ProtocolData) => void] {\r\n  const protocolData: ProtocolData | undefined = useSelector((state: AppState) => state.protocol.data)\r\n\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const setProtocolData: (protocolData: ProtocolData) => void = useCallback(\r\n    (protocolData: ProtocolData) => dispatch(updateProtocolData({ protocolData })),\r\n    [dispatch]\r\n  )\r\n\r\n  return [protocolData, setProtocolData]\r\n}\r\n\r\nexport function useProtocolChartData(): [ChartDayData[] | undefined, (chartData: ChartDayData[]) => void] {\r\n  const chartData: ChartDayData[] | undefined = useSelector((state: AppState) => state.protocol.chartData)\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const setChartData: (chartData: ChartDayData[]) => void = useCallback(\r\n    (chartData: ChartDayData[]) => dispatch(updateChartData({ chartData })),\r\n    [dispatch]\r\n  )\r\n  return [chartData, setChartData]\r\n}\r\n\r\nexport function useProtocolTransactions(): [Transaction[] | undefined, (transactions: Transaction[]) => void] {\r\n  const transactions: Transaction[] | undefined = useSelector((state: AppState) => state.protocol.transactions)\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const setTransactions: (transactions: Transaction[]) => void = useCallback(\r\n    (transactions: Transaction[]) => dispatch(updateTransactions({ transactions })),\r\n    [dispatch]\r\n  )\r\n  return [transactions, setTransactions]\r\n}\r\n","import React from 'react'\r\nimport { TYPE } from 'theme'\r\nimport styled from 'styled-components'\r\n\r\nconst Wrapper = styled(TYPE.main)<{ fontWeight: number; fontSize: string; negative: boolean; neutral: boolean }>`\r\n  font-size: ${({ fontSize }) => fontSize};\r\n  font-weight: ${({ fontWeight }) => fontWeight};\r\n  color: ${({ theme, negative }) => (negative ? theme.red1 : theme.green1)};\r\n`\r\n\r\nexport interface LogoProps {\r\n  value: number | undefined\r\n  decimals?: number\r\n  fontSize?: string\r\n  fontWeight?: number\r\n  wrap?: boolean\r\n  simple?: boolean\r\n}\r\n\r\nexport default function Percent({\r\n  value,\r\n  decimals = 2,\r\n  fontSize = '16px',\r\n  fontWeight = 500,\r\n  wrap = false,\r\n  simple = false,\r\n  ...rest\r\n}: LogoProps) {\r\n  if (value === undefined || value === null) {\r\n    return (\r\n      <TYPE.main fontWeight={fontWeight} fontSize={fontSize}>\r\n        -\r\n      </TYPE.main>\r\n    )\r\n  }\r\n\r\n  const truncated = parseFloat(value.toFixed(decimals))\r\n\r\n  if (simple) {\r\n    return (\r\n      <Wrapper {...rest} fontWeight={fontWeight} fontSize={fontSize} negative={false} neutral={true}>\r\n        {Math.abs(value).toFixed(decimals)}%\r\n      </Wrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper {...rest} fontWeight={fontWeight} fontSize={fontSize} negative={truncated < 0} neutral={truncated === 0}>\r\n      {wrap && '('}\r\n      {truncated < 0 && '↓'}\r\n      {truncated > 0 && '↑'}\r\n      {Math.abs(value).toFixed(decimals)}%{wrap && ')'}\r\n    </Wrapper>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/whitev3.280959f9.svg\";","import React from 'react'\r\nimport v3 from '../../assets/images/whitev3.svg'\r\nimport styled, { keyframes, css } from 'styled-components'\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\r\n  animation: 2s ${rotate} linear infinite;\r\n  height: ${({ size }) => size};\r\n  width: ${({ size }) => size};\r\n  path {\r\n    stroke: ${({ stroke, theme }) => stroke ?? theme.primary1};\r\n  }\r\n`\r\n\r\n/**\r\n * Takes in custom size and stroke for circle color, default to primary color as fill,\r\n * need ...rest for layered styles on top\r\n */\r\nexport default function Loader({\r\n  size = '16px',\r\n  stroke,\r\n  ...rest\r\n}: {\r\n  size?: string\r\n  stroke?: string\r\n  [k: string]: any\r\n}) {\r\n  return (\r\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\r\n      <path\r\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\r\n        strokeWidth=\"2.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </StyledSVG>\r\n  )\r\n}\r\n\r\nconst pulse = keyframes`\r\n  0% { transform: scale(1); }\r\n  60% { transform: scale(1.1); }\r\n  100% { transform: scale(1); }\r\n`\r\n\r\nconst Wrapper = styled.div<{ fill: number; height?: string }>`\r\n  pointer-events: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${({ theme, fill }) => (fill ? 'black' : theme.bg0)};\r\n  height: 100%;\r\n  width: 100%;\r\n  ${(props) =>\r\n    props.fill && !props.height\r\n      ? css`\r\n          height: 100vh;\r\n        `\r\n      : css`\r\n          height: 180px;\r\n        `}\r\n`\r\n\r\nconst AnimatedImg = styled.div`\r\n  animation: ${pulse} 800ms linear infinite;\r\n  & > * {\r\n    width: 72px;\r\n  }\r\n`\r\n\r\nexport const LocalLoader = ({ fill }: { fill: boolean }) => {\r\n  return (\r\n    <Wrapper fill={fill ? 1 : 0}>\r\n      <AnimatedImg>\r\n        <img src={v3} alt=\"loading-icon\" />\r\n      </AnimatedImg>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst loadingAnimation = keyframes`\r\n  0% {\r\n    background-position: 100% 50%;\r\n  }\r\n  100% {\r\n    background-position: 0% 50%;\r\n  }\r\n`\r\n\r\nexport const LoadingRows = styled.div`\r\n  display: grid;\r\n  min-width: 75%;\r\n  max-width: 100%;\r\n  grid-column-gap: 0.5em;\r\n  grid-row-gap: 0.8em;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  & > div {\r\n    animation: ${loadingAnimation} 1.5s infinite;\r\n    animation-fill-mode: both;\r\n    background: linear-gradient(\r\n      to left,\r\n      ${({ theme }) => theme.bg1} 25%,\r\n      ${({ theme }) => theme.bg2} 50%,\r\n      ${({ theme }) => theme.bg1} 75%\r\n    );\r\n    background-size: 400%;\r\n    border-radius: 12px;\r\n    height: 2.4em;\r\n    will-change: background-position;\r\n  }\r\n  & > div:nth-child(4n + 1) {\r\n    grid-column: 1 / 3;\r\n  }\r\n  & > div:nth-child(4n) {\r\n    grid-column: 3 / 4;\r\n    margin-bottom: 2em;\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\nimport { TYPE } from 'theme'\r\n\r\n// responsive text\r\nexport const Label = styled(TYPE.label)<{ end?: number }>`\r\n  display: flex;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  justify-content: ${({ end }) => (end ? 'flex-end' : 'flex-start')};\r\n  align-items: center;\r\n  font-variant-numeric: tabular-nums;\r\n  @media screen and (max-width: 640px) {\r\n    font-size: 14px;\r\n  }\r\n`\r\n\r\nexport const ClickableText = styled(Label)`\r\n  text-align: end;\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n  user-select: none;\r\n  @media screen and (max-width: 640px) {\r\n    font-size: 12px;\r\n  }\r\n`\r\n","import Row from 'components/Row'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport const PageButtons = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 0.2em;\r\n  margin-bottom: 0.5em;\r\n`\r\n\r\nexport const Arrow = styled.div<{ faded: boolean }>`\r\n  color: ${({ theme }) => theme.primary1};\r\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\r\n  padding: 0 20px;\r\n  user-select: none;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport const Break = styled.div`\r\n  height: 1px;\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  width: 100%;\r\n`\r\n\r\nexport const FixedSpan = styled.span<{ width?: string | null }>`\r\n  width: ${({ width }) => width ?? ''};\r\n`\r\n\r\nexport const MonoSpace = styled.span`\r\n  font-variant-numeric: tabular-nums;\r\n`\r\n","import React, { useState, useMemo, useCallback, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ExtraSmallOnly, HideExtraSmall, TYPE } from 'theme'\r\nimport { DarkGreyCard } from 'components/Card'\r\nimport { TokenData } from '../../state/tokens/reducer'\r\nimport Loader, { LoadingRows } from 'components/Loader'\r\nimport { Link } from 'react-router-dom'\r\nimport { AutoColumn } from 'components/Column'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport { RowFixed } from 'components/Row'\r\nimport { formatDollarAmount } from 'utils/numbers'\r\nimport Percent from 'components/Percent'\r\nimport { Label, ClickableText } from '../Text'\r\nimport { PageButtons, Arrow, Break } from 'components/shared'\r\nimport HoverInlineText from '../HoverInlineText'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { TOKEN_HIDE } from '../../constants/index'\r\n\r\nconst Wrapper = styled(DarkGreyCard)`\r\n  width: 100%;\r\n`\r\n\r\nconst ResponsiveGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  align-items: center;\r\n\r\n  grid-template-columns: 20px 3fr repeat(4, 1fr);\r\n\r\n  @media screen and (max-width: 900px) {\r\n    grid-template-columns: 20px 1.5fr repeat(3, 1fr);\r\n    & :nth-child(4) {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    grid-template-columns: 20px 1.5fr repeat(2, 1fr);\r\n    & :nth-child(6) {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 670px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    > *:first-child {\r\n      display: none;\r\n    }\r\n    > *:nth-child(3) {\r\n      display: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst LinkWrapper = styled(Link)`\r\n  text-decoration: none;\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst ResponsiveLogo = styled(CurrencyLogo)`\r\n  @media screen and (max-width: 670px) {\r\n    width: 16px;\r\n    height: 16px;\r\n  }\r\n`\r\n\r\nconst DataRow = ({ tokenData, index }: { tokenData: TokenData; index: number }) => {\r\n  const theme = useTheme()\r\n  return (\r\n    <LinkWrapper to={'tokens/' + tokenData.address}>\r\n      <ResponsiveGrid>\r\n        <Label>{index + 1}</Label>\r\n        <Label>\r\n          <RowFixed>\r\n            <ResponsiveLogo address={tokenData.address} />\r\n          </RowFixed>\r\n          <ExtraSmallOnly style={{ marginLeft: '6px' }}>\r\n            <Label ml=\"8px\">{tokenData.symbol}</Label>\r\n          </ExtraSmallOnly>\r\n          <HideExtraSmall style={{ marginLeft: '10px' }}>\r\n            <RowFixed>\r\n              <HoverInlineText text={tokenData.name} />\r\n              <Label ml=\"8px\" color={theme.text3}>\r\n                ({tokenData.symbol})\r\n              </Label>\r\n            </RowFixed>\r\n          </HideExtraSmall>\r\n        </Label>\r\n        <Label end={1} fontWeight={400}>\r\n          {formatDollarAmount(tokenData.priceUSD)}\r\n        </Label>\r\n        <Label end={1} fontWeight={400}>\r\n          <Percent value={tokenData.priceUSDChange} fontWeight={400} />\r\n        </Label>\r\n        {/* <Label end={1} fontWeight={400}>\r\n          <Percent value={tokenData.priceUSDChangeWeek} fontWeight={400} />\r\n        </Label> */}\r\n        <Label end={1} fontWeight={400}>\r\n          {formatDollarAmount(tokenData.volumeUSD)}\r\n        </Label>\r\n        <Label end={1} fontWeight={400}>\r\n          {formatDollarAmount(tokenData.tvlUSD)}\r\n        </Label>\r\n      </ResponsiveGrid>\r\n    </LinkWrapper>\r\n  )\r\n}\r\n\r\nconst SORT_FIELD = {\r\n  name: 'name',\r\n  volumeUSD: 'volumeUSD',\r\n  tvlUSD: 'tvlUSD',\r\n  priceUSD: 'priceUSD',\r\n  priceUSDChange: 'priceUSDChange',\r\n  priceUSDChangeWeek: 'priceUSDChangeWeek',\r\n}\r\n\r\nconst MAX_ITEMS = 10\r\n\r\nexport default function TokenTable({\r\n  tokenDatas,\r\n  maxItems = MAX_ITEMS,\r\n}: {\r\n  tokenDatas: TokenData[] | undefined\r\n  maxItems?: number\r\n}) {\r\n  // theming\r\n  const theme = useTheme()\r\n\r\n  // for sorting\r\n  const [sortField, setSortField] = useState(SORT_FIELD.tvlUSD)\r\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\r\n\r\n  // pagination\r\n  const [page, setPage] = useState(1)\r\n  const [maxPage, setMaxPage] = useState(1)\r\n  useEffect(() => {\r\n    let extraPages = 1\r\n    if (tokenDatas) {\r\n      if (tokenDatas.length % maxItems === 0) {\r\n        extraPages = 0\r\n      }\r\n      setMaxPage(Math.floor(tokenDatas.length / maxItems) + extraPages)\r\n    }\r\n  }, [maxItems, tokenDatas])\r\n\r\n  const sortedTokens = useMemo(() => {\r\n    return tokenDatas\r\n      ? tokenDatas\r\n          .filter((x) => !!x && !TOKEN_HIDE.includes(x.address))\r\n          .sort((a, b) => {\r\n            if (a && b) {\r\n              return a[sortField as keyof TokenData] > b[sortField as keyof TokenData]\r\n                ? (sortDirection ? -1 : 1) * 1\r\n                : (sortDirection ? -1 : 1) * -1\r\n            } else {\r\n              return -1\r\n            }\r\n          })\r\n          .slice(maxItems * (page - 1), page * maxItems)\r\n      : []\r\n  }, [tokenDatas, maxItems, page, sortDirection, sortField])\r\n\r\n  const handleSort = useCallback(\r\n    (newField: string) => {\r\n      setSortField(newField)\r\n      setSortDirection(sortField !== newField ? true : !sortDirection)\r\n    },\r\n    [sortDirection, sortField]\r\n  )\r\n\r\n  const arrow = useCallback(\r\n    (field: string) => {\r\n      return sortField === field ? (!sortDirection ? '↑' : '↓') : ''\r\n    },\r\n    [sortDirection, sortField]\r\n  )\r\n\r\n  if (!tokenDatas) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      {sortedTokens.length > 0 ? (\r\n        <AutoColumn gap=\"16px\">\r\n          <ResponsiveGrid>\r\n            <Label color={theme.text2}>#</Label>\r\n            <ClickableText color={theme.text2} onClick={() => handleSort(SORT_FIELD.name)}>\r\n              Name {arrow(SORT_FIELD.name)}\r\n            </ClickableText>\r\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.priceUSD)}>\r\n              Price {arrow(SORT_FIELD.priceUSD)}\r\n            </ClickableText>\r\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.priceUSDChange)}>\r\n              Price Change {arrow(SORT_FIELD.priceUSDChange)}\r\n            </ClickableText>\r\n            {/* <ClickableText end={1} onClick={() => handleSort(SORT_FIELD.priceUSDChangeWeek)}>\r\n            7d {arrow(SORT_FIELD.priceUSDChangeWeek)}\r\n          </ClickableText> */}\r\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.volumeUSD)}>\r\n              Volume 24H {arrow(SORT_FIELD.volumeUSD)}\r\n            </ClickableText>\r\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.tvlUSD)}>\r\n              TVL {arrow(SORT_FIELD.tvlUSD)}\r\n            </ClickableText>\r\n          </ResponsiveGrid>\r\n\r\n          <Break />\r\n          {sortedTokens.map((data, i) => {\r\n            if (data) {\r\n              return (\r\n                <React.Fragment key={i}>\r\n                  <DataRow index={(page - 1) * MAX_ITEMS + i} tokenData={data} />\r\n                  <Break />\r\n                </React.Fragment>\r\n              )\r\n            }\r\n            return null\r\n          })}\r\n          <PageButtons>\r\n            <div\r\n              onClick={() => {\r\n                setPage(page === 1 ? page : page - 1)\r\n              }}\r\n            >\r\n              <Arrow faded={page === 1 ? true : false}>←</Arrow>\r\n            </div>\r\n            <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\r\n            <div\r\n              onClick={() => {\r\n                setPage(page === maxPage ? page : page + 1)\r\n              }}\r\n            >\r\n              <Arrow faded={page === maxPage ? true : false}>→</Arrow>\r\n            </div>\r\n          </PageButtons>\r\n        </AutoColumn>\r\n      ) : (\r\n        <LoadingRows>\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n        </LoadingRows>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React, { useCallback, useState, useMemo, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { TYPE } from 'theme'\r\nimport { DarkGreyCard, GreyBadge } from 'components/Card'\r\nimport Loader, { LoadingRows } from 'components/Loader'\r\nimport { AutoColumn } from 'components/Column'\r\nimport { RowFixed } from 'components/Row'\r\nimport { formatDollarAmount } from 'utils/numbers'\r\nimport { PoolData } from 'state/pools/reducer'\r\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\r\nimport { feeTierPercent } from 'utils'\r\nimport { Label, ClickableText } from 'components/Text'\r\nimport { PageButtons, Arrow, Break } from 'components/shared'\r\nimport { POOL_HIDE } from '../../constants/index'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nconst Wrapper = styled(DarkGreyCard)`\r\n  width: 100%;\r\n`\r\n\r\nconst ResponsiveGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  align-items: center;\r\n\r\n  grid-template-columns: 20px 3.5fr repeat(3, 1fr);\r\n\r\n  @media screen and (max-width: 900px) {\r\n    grid-template-columns: 20px 1.5fr repeat(2, 1fr);\r\n    & :nth-child(3) {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    grid-template-columns: 20px 1.5fr repeat(1, 1fr);\r\n    & :nth-child(5) {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    grid-template-columns: 2.5fr repeat(1, 1fr);\r\n    > *:nth-child(1) {\r\n      display: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst LinkWrapper = styled(Link)`\r\n  text-decoration: none;\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst SORT_FIELD = {\r\n  feeTier: 'feeTier',\r\n  volumeUSD: 'volumeUSD',\r\n  tvlUSD: 'tvlUSD',\r\n  volumeUSDWeek: 'volumeUSDWeek',\r\n}\r\n\r\nconst DataRow = ({ poolData, index }: { poolData: PoolData; index: number }) => {\r\n  return (\r\n    <LinkWrapper to={'/pools/' + poolData.address}>\r\n      <ResponsiveGrid>\r\n        <Label fontWeight={400}>{index + 1}</Label>\r\n        <Label fontWeight={400}>\r\n          <RowFixed>\r\n            <DoubleCurrencyLogo address0={poolData.token0.address} address1={poolData.token1.address} />\r\n            <TYPE.label ml=\"8px\">\r\n              {poolData.token0.symbol}/{poolData.token1.symbol}\r\n            </TYPE.label>\r\n            <GreyBadge ml=\"10px\" fontSize=\"14px\">\r\n              {feeTierPercent(poolData.feeTier)}\r\n            </GreyBadge>\r\n          </RowFixed>\r\n        </Label>\r\n        <Label end={1} fontWeight={400}>\r\n          {formatDollarAmount(poolData.tvlUSD)}\r\n        </Label>\r\n        <Label end={1} fontWeight={400}>\r\n          {formatDollarAmount(poolData.volumeUSD)}\r\n        </Label>\r\n        <Label end={1} fontWeight={400}>\r\n          {formatDollarAmount(poolData.volumeUSDWeek)}\r\n        </Label>\r\n      </ResponsiveGrid>\r\n    </LinkWrapper>\r\n  )\r\n}\r\n\r\nconst MAX_ITEMS = 10\r\n\r\nexport default function PoolTable({ poolDatas, maxItems = MAX_ITEMS }: { poolDatas: PoolData[]; maxItems?: number }) {\r\n  // theming\r\n  const theme = useTheme()\r\n\r\n  // for sorting\r\n  const [sortField, setSortField] = useState(SORT_FIELD.tvlUSD)\r\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\r\n\r\n  // pagination\r\n  const [page, setPage] = useState(1)\r\n  const [maxPage, setMaxPage] = useState(1)\r\n  useEffect(() => {\r\n    let extraPages = 1\r\n    if (poolDatas.length % maxItems === 0) {\r\n      extraPages = 0\r\n    }\r\n    setMaxPage(Math.floor(poolDatas.length / maxItems) + extraPages)\r\n  }, [maxItems, poolDatas])\r\n\r\n  const sortedPools = useMemo(() => {\r\n    return poolDatas\r\n      ? poolDatas\r\n          .filter((x) => !!x && !POOL_HIDE.includes(x.address))\r\n          .sort((a, b) => {\r\n            if (a && b) {\r\n              return a[sortField as keyof PoolData] > b[sortField as keyof PoolData]\r\n                ? (sortDirection ? -1 : 1) * 1\r\n                : (sortDirection ? -1 : 1) * -1\r\n            } else {\r\n              return -1\r\n            }\r\n          })\r\n          .slice(maxItems * (page - 1), page * maxItems)\r\n      : []\r\n  }, [maxItems, page, poolDatas, sortDirection, sortField])\r\n\r\n  const handleSort = useCallback(\r\n    (newField: string) => {\r\n      setSortField(newField)\r\n      setSortDirection(sortField !== newField ? true : !sortDirection)\r\n    },\r\n    [sortDirection, sortField]\r\n  )\r\n\r\n  const arrow = useCallback(\r\n    (field: string) => {\r\n      return sortField === field ? (!sortDirection ? '↑' : '↓') : ''\r\n    },\r\n    [sortDirection, sortField]\r\n  )\r\n\r\n  if (!poolDatas) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      {sortedPools.length > 0 ? (\r\n        <AutoColumn gap=\"16px\">\r\n          <ResponsiveGrid>\r\n            <Label color={theme.text2}>#</Label>\r\n            <ClickableText color={theme.text2} onClick={() => handleSort(SORT_FIELD.feeTier)}>\r\n              Pool {arrow(SORT_FIELD.feeTier)}\r\n            </ClickableText>\r\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.tvlUSD)}>\r\n              TVL {arrow(SORT_FIELD.tvlUSD)}\r\n            </ClickableText>\r\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.volumeUSD)}>\r\n              Volume 24H {arrow(SORT_FIELD.volumeUSD)}\r\n            </ClickableText>\r\n            <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.volumeUSDWeek)}>\r\n              Volume 7D {arrow(SORT_FIELD.volumeUSDWeek)}\r\n            </ClickableText>\r\n          </ResponsiveGrid>\r\n          <Break />\r\n          {sortedPools.map((poolData, i) => {\r\n            if (poolData) {\r\n              return (\r\n                <React.Fragment key={i}>\r\n                  <DataRow index={(page - 1) * MAX_ITEMS + i} poolData={poolData} />\r\n                  <Break />\r\n                </React.Fragment>\r\n              )\r\n            }\r\n            return null\r\n          })}\r\n          <PageButtons>\r\n            <div\r\n              onClick={() => {\r\n                setPage(page === 1 ? page : page - 1)\r\n              }}\r\n            >\r\n              <Arrow faded={page === 1 ? true : false}>←</Arrow>\r\n            </div>\r\n            <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\r\n            <div\r\n              onClick={() => {\r\n                setPage(page === maxPage ? page : page + 1)\r\n              }}\r\n            >\r\n              <Arrow faded={page === maxPage ? true : false}>→</Arrow>\r\n            </div>\r\n          </PageButtons>\r\n        </AutoColumn>\r\n      ) : (\r\n        <LoadingRows>\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n          <div />\r\n        </LoadingRows>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const PageWrapper = styled.div`\r\n  width: 90%;\r\n`\r\n\r\nexport const ThemedBackground = styled.div<{ backgroundColor: string }>`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  pointer-events: none;\r\n  max-width: 100vw !important;\r\n  height: 200vh;\r\n  mix-blend-mode: color;\r\n  background: ${({ backgroundColor }) =>\r\n    `radial-gradient(50% 50% at 50% 50%, ${backgroundColor} 0%, rgba(255, 255, 255, 0) 100%)`};\r\n  transform: translateY(-176vh);\r\n`\r\n\r\nexport const ThemedBackgroundGlobal = styled.div<{ backgroundColor: string }>`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  pointer-events: none;\r\n  max-width: 100vw !important;\r\n  height: 200vh;\r\n  mix-blend-mode: color;\r\n  background: ${({ backgroundColor }) =>\r\n    `radial-gradient(50% 50% at 50% 50%, ${backgroundColor} 0%, rgba(255, 255, 255, 0) 100%)`};\r\n  transform: translateY(-150vh);\r\n`\r\n","import dayjs from 'dayjs'\r\n\r\nexport function unixToDate(unix: number, format = 'YYYY-MM-DD'): string {\r\n  return dayjs.unix(unix).format(format)\r\n}\r\n\r\nexport const formatTime = (unix: string) => {\r\n  const now = dayjs()\r\n  const timestamp = dayjs.unix(parseInt(unix))\r\n\r\n  const inSeconds = now.diff(timestamp, 'second')\r\n  const inMinutes = now.diff(timestamp, 'minute')\r\n  const inHours = now.diff(timestamp, 'hour')\r\n  const inDays = now.diff(timestamp, 'day')\r\n\r\n  if (inHours >= 24) {\r\n    return `${inDays} ${inDays === 1 ? 'day' : 'days'} ago`\r\n  } else if (inMinutes >= 60) {\r\n    return `${inHours} ${inHours === 1 ? 'hour' : 'hours'} ago`\r\n  } else if (inSeconds >= 60) {\r\n    return `${inMinutes} ${inMinutes === 1 ? 'minute' : 'minutes'} ago`\r\n  } else {\r\n    return `${inSeconds} ${inSeconds === 1 ? 'second' : 'seconds'} ago`\r\n  }\r\n}\r\n","import React, { Dispatch, SetStateAction, ReactNode } from 'react'\r\nimport { BarChart, ResponsiveContainer, XAxis, Tooltip, Bar } from 'recharts'\r\nimport styled from 'styled-components'\r\nimport Card from 'components/Card'\r\nimport { RowBetween } from 'components/Row'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport useTheme from 'hooks/useTheme'\r\ndayjs.extend(utc)\r\n\r\nconst DEFAULT_HEIGHT = 300\r\n\r\nconst Wrapper = styled(Card)`\r\n  width: 100%;\r\n  height: ${DEFAULT_HEIGHT}px;\r\n  padding: 1rem;\r\n  padding-right: 2rem;\r\n  display: flex;\r\n  background-color: ${({ theme }) => theme.bg0}\r\n  flex-direction: column;\r\n  > * {\r\n    font-size: 1rem;\r\n  }\r\n`\r\n\r\nexport type LineChartProps = {\r\n  data: any[]\r\n  color?: string | undefined\r\n  height?: number | undefined\r\n  minHeight?: number\r\n  setValue?: Dispatch<SetStateAction<number | undefined>> // used for value on hover\r\n  setLabel?: Dispatch<SetStateAction<string | undefined>> // used for label of valye\r\n  value?: number\r\n  label?: string\r\n  topLeft?: ReactNode | undefined\r\n  topRight?: ReactNode | undefined\r\n  bottomLeft?: ReactNode | undefined\r\n  bottomRight?: ReactNode | undefined\r\n} & React.HTMLAttributes<HTMLDivElement>\r\n\r\nconst CustomBar = ({\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  fill,\r\n}: {\r\n  x: number\r\n  y: number\r\n  width: number\r\n  height: number\r\n  fill: string\r\n}) => {\r\n  return (\r\n    <g>\r\n      <rect x={x} y={y} fill={fill} width={width} height={height} rx=\"2\" />\r\n    </g>\r\n  )\r\n}\r\n\r\nconst Chart = ({\r\n  data,\r\n  color = '#56B2A4',\r\n  setValue,\r\n  setLabel,\r\n  value,\r\n  label,\r\n  topLeft,\r\n  topRight,\r\n  bottomLeft,\r\n  bottomRight,\r\n  minHeight = DEFAULT_HEIGHT,\r\n  ...rest\r\n}: LineChartProps) => {\r\n  const theme = useTheme()\r\n  const parsedValue = value\r\n\r\n  return (\r\n    <Wrapper minHeight={minHeight} {...rest}>\r\n      <RowBetween>\r\n        {topLeft ?? null}\r\n        {topRight ?? null}\r\n      </RowBetween>\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <BarChart\r\n          width={500}\r\n          height={300}\r\n          data={data}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n          }}\r\n          onMouseLeave={() => {\r\n            setLabel && setLabel(undefined)\r\n            setValue && setValue(undefined)\r\n          }}\r\n        >\r\n          <XAxis\r\n            dataKey=\"time\"\r\n            axisLine={false}\r\n            tickLine={false}\r\n            tickFormatter={(time) => dayjs(time).format('DD')}\r\n            minTickGap={10}\r\n          />\r\n          <Tooltip\r\n            cursor={{ fill: theme.bg2 }}\r\n            contentStyle={{ display: 'none' }}\r\n            formatter={(value: number, name: string, props: { payload: { time: string; value: number } }) => {\r\n              if (setValue && parsedValue !== props.payload.value) {\r\n                setValue(props.payload.value)\r\n              }\r\n              const formattedTime = dayjs(props.payload.time).format('MMM D, YYYY')\r\n              if (setLabel && label !== formattedTime) setLabel(formattedTime)\r\n            }}\r\n          />\r\n          <Bar\r\n            dataKey=\"value\"\r\n            fill={color}\r\n            shape={(props) => {\r\n              return <CustomBar height={props.height} width={props.width} x={props.x} y={props.y} fill={color} />\r\n            }}\r\n          />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n      <RowBetween>\r\n        {bottomLeft ?? null}\r\n        {bottomRight ?? null}\r\n      </RowBetween>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Chart\r\n","import React, { useCallback, useState, useMemo, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { DarkGreyCard } from 'components/Card'\r\nimport Loader from 'components/Loader'\r\nimport { AutoColumn } from 'components/Column'\r\nimport { formatDollarAmount, formatAmount } from 'utils/numbers'\r\nimport { shortenAddress, getEtherscanLink } from 'utils'\r\nimport { Label, ClickableText } from 'components/Text'\r\nimport { Transaction, TransactionType } from 'types'\r\nimport { formatTime } from 'utils/date'\r\nimport { RowFixed } from 'components/Row'\r\nimport { ExternalLink, TYPE } from 'theme'\r\nimport { PageButtons, Arrow, Break } from 'components/shared'\r\nimport useTheme from 'hooks/useTheme'\r\nimport HoverInlineText from 'components/HoverInlineText'\r\n\r\nconst Wrapper = styled(DarkGreyCard)`\r\n  width: 100%;\r\n`\r\n\r\nconst ResponsiveGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  align-items: center;\r\n\r\n  grid-template-columns: 1.5fr repeat(5, 1fr);\r\n\r\n  @media screen and (max-width: 940px) {\r\n    grid-template-columns: 1.5fr repeat(4, 1fr);\r\n    & > *:nth-child(5) {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    grid-template-columns: 1.5fr repeat(2, 1fr);\r\n    & > *:nth-child(5) {\r\n      display: none;\r\n    }\r\n    & > *:nth-child(3) {\r\n      display: none;\r\n    }\r\n    & > *:nth-child(4) {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    grid-template-columns: 1.5fr repeat(1, 1fr);\r\n    & > *:nth-child(5) {\r\n      display: none;\r\n    }\r\n    & > *:nth-child(3) {\r\n      display: none;\r\n    }\r\n    & > *:nth-child(4) {\r\n      display: none;\r\n    }\r\n    & > *:nth-child(2) {\r\n      display: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst SortText = styled.button<{ active: boolean }>`\r\n  cursor: pointer;\r\n  font-weight: ${({ active }) => (active ? 500 : 400)};\r\n  margin-right: 0.75rem !important;\r\n  border: none;\r\n  background-color: transparent;\r\n  font-size: 1rem;\r\n  padding: 0px;\r\n  color: ${({ active, theme }) => (active ? theme.text1 : theme.text3)};\r\n  outline: none;\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 14px;\r\n  }\r\n`\r\n\r\nconst SORT_FIELD = {\r\n  amountUSD: 'amountUSD',\r\n  timestamp: 'timestamp',\r\n  sender: 'sender',\r\n  amountToken0: 'amountToken0',\r\n  amountToken1: 'amountToken1',\r\n}\r\n\r\nconst DataRow = ({ transaction, color }: { transaction: Transaction; color?: string }) => {\r\n  const abs0 = Math.abs(transaction.amountToken0)\r\n  const abs1 = Math.abs(transaction.amountToken1)\r\n  const outputTokenSymbol = transaction.amountToken0 < 0 ? transaction.token0Symbol : transaction.token1Symbol\r\n  const inputTokenSymbol = transaction.amountToken1 < 0 ? transaction.token0Symbol : transaction.token1Symbol\r\n\r\n  const theme = useTheme()\r\n\r\n  return (\r\n    <ResponsiveGrid>\r\n      <ExternalLink href={getEtherscanLink(1, transaction.hash, 'transaction')}>\r\n        <Label color={color ?? theme.blue1} fontWeight={400}>\r\n          {transaction.type === TransactionType.MINT\r\n            ? `Add ${transaction.token0Symbol} and ${transaction.token1Symbol}`\r\n            : transaction.type === TransactionType.SWAP\r\n            ? `Swap ${inputTokenSymbol} for ${outputTokenSymbol}`\r\n            : `Remove ${transaction.token0Symbol} and ${transaction.token1Symbol}`}\r\n        </Label>\r\n      </ExternalLink>\r\n      <Label end={1} fontWeight={400}>\r\n        {formatDollarAmount(transaction.amountUSD)}\r\n      </Label>\r\n      <Label end={1} fontWeight={400}>\r\n        <HoverInlineText text={`${formatAmount(abs0)}  ${transaction.token0Symbol}`} maxCharacters={16} />\r\n      </Label>\r\n      <Label end={1} fontWeight={400}>\r\n        <HoverInlineText text={`${formatAmount(abs1)}  ${transaction.token1Symbol}`} maxCharacters={16} />\r\n      </Label>\r\n      <Label end={1} fontWeight={400}>\r\n        <ExternalLink href={getEtherscanLink(1, transaction.sender, 'address')} style={{ color: color ?? theme.blue1 }}>\r\n          {shortenAddress(transaction.sender)}\r\n        </ExternalLink>\r\n      </Label>\r\n      <Label end={1} fontWeight={400}>\r\n        {formatTime(transaction.timestamp)}\r\n      </Label>\r\n    </ResponsiveGrid>\r\n  )\r\n}\r\n\r\nexport default function TransactionTable({\r\n  transactions,\r\n  maxItems = 10,\r\n  color,\r\n}: {\r\n  transactions: Transaction[]\r\n  maxItems?: number\r\n  color?: string\r\n}) {\r\n  // theming\r\n  const theme = useTheme()\r\n\r\n  // for sorting\r\n  const [sortField, setSortField] = useState(SORT_FIELD.timestamp)\r\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\r\n\r\n  // pagination\r\n  const [page, setPage] = useState(1)\r\n  const [maxPage, setMaxPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    let extraPages = 1\r\n    if (transactions.length % maxItems === 0) {\r\n      extraPages = 0\r\n    }\r\n    setMaxPage(Math.floor(transactions.length / maxItems) + extraPages)\r\n  }, [maxItems, transactions])\r\n\r\n  // filter on txn type\r\n  const [txFilter, setTxFilter] = useState<TransactionType | undefined>(undefined)\r\n\r\n  const sortedTransactions = useMemo(() => {\r\n    return transactions\r\n      ? transactions\r\n          .slice()\r\n          .sort((a, b) => {\r\n            if (a && b) {\r\n              return a[sortField as keyof Transaction] > b[sortField as keyof Transaction]\r\n                ? (sortDirection ? -1 : 1) * 1\r\n                : (sortDirection ? -1 : 1) * -1\r\n            } else {\r\n              return -1\r\n            }\r\n          })\r\n          .filter((x) => {\r\n            return txFilter === undefined || x.type === txFilter\r\n          })\r\n          .slice(maxItems * (page - 1), page * maxItems)\r\n      : []\r\n  }, [transactions, maxItems, page, sortField, sortDirection, txFilter])\r\n\r\n  const handleSort = useCallback(\r\n    (newField: string) => {\r\n      setSortField(newField)\r\n      setSortDirection(sortField !== newField ? true : !sortDirection)\r\n    },\r\n    [sortDirection, sortField]\r\n  )\r\n\r\n  const arrow = useCallback(\r\n    (field: string) => {\r\n      return sortField === field ? (!sortDirection ? '↑' : '↓') : ''\r\n    },\r\n    [sortDirection, sortField]\r\n  )\r\n\r\n  if (!transactions) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn gap=\"16px\">\r\n        <ResponsiveGrid>\r\n          <RowFixed>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(undefined)\r\n              }}\r\n              active={txFilter === undefined}\r\n            >\r\n              All\r\n            </SortText>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(TransactionType.SWAP)\r\n              }}\r\n              active={txFilter === TransactionType.SWAP}\r\n            >\r\n              Swaps\r\n            </SortText>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(TransactionType.MINT)\r\n              }}\r\n              active={txFilter === TransactionType.MINT}\r\n            >\r\n              Adds\r\n            </SortText>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(TransactionType.BURN)\r\n              }}\r\n              active={txFilter === TransactionType.BURN}\r\n            >\r\n              Removes\r\n            </SortText>\r\n          </RowFixed>\r\n          <ClickableText color={theme.text2} onClick={() => handleSort(SORT_FIELD.amountUSD)} end={1}>\r\n            Total Value {arrow(SORT_FIELD.amountUSD)}\r\n          </ClickableText>\r\n          <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.amountToken0)}>\r\n            Token Amount {arrow(SORT_FIELD.amountToken0)}\r\n          </ClickableText>\r\n          <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.amountToken1)}>\r\n            Token Amount {arrow(SORT_FIELD.amountToken1)}\r\n          </ClickableText>\r\n          <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.sender)}>\r\n            Account {arrow(SORT_FIELD.sender)}\r\n          </ClickableText>\r\n          <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.timestamp)}>\r\n            Time {arrow(SORT_FIELD.timestamp)}\r\n          </ClickableText>\r\n        </ResponsiveGrid>\r\n        <Break />\r\n\r\n        {sortedTransactions.map((t, i) => {\r\n          if (t) {\r\n            return (\r\n              <React.Fragment key={i}>\r\n                <DataRow transaction={t} color={color} />\r\n                <Break />\r\n              </React.Fragment>\r\n            )\r\n          }\r\n          return null\r\n        })}\r\n        {sortedTransactions.length === 0 ? <TYPE.main>No Transactions</TYPE.main> : undefined}\r\n        <PageButtons>\r\n          <div\r\n            onClick={() => {\r\n              setPage(page === 1 ? page : page - 1)\r\n            }}\r\n          >\r\n            <Arrow faded={page === 1 ? true : false}>←</Arrow>\r\n          </div>\r\n          <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\r\n          <div\r\n            onClick={() => {\r\n              setPage(page === maxPage ? page : page + 1)\r\n            }}\r\n          >\r\n            <Arrow faded={page === maxPage ? true : false}>→</Arrow>\r\n          </div>\r\n        </PageButtons>\r\n      </AutoColumn>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React, { useState, useEffect, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoColumn } from 'components/Column'\r\nimport { TYPE } from 'theme'\r\nimport { ResponsiveRow, RowBetween, RowFixed } from 'components/Row'\r\nimport LineChart from 'components/LineChart/alt'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useProtocolData, useProtocolChartData, useProtocolTransactions } from 'state/protocol/hooks'\r\nimport { DarkGreyCard } from 'components/Card'\r\nimport { formatDollarAmount } from 'utils/numbers'\r\nimport Percent from 'components/Percent'\r\nimport { HideMedium, HideSmall, StyledInternalLink } from '../../theme/components'\r\nimport TokenTable from 'components/tokens/TokenTable'\r\nimport PoolTable from 'components/pools/PoolTable'\r\nimport { PageWrapper, ThemedBackgroundGlobal } from 'pages/styled'\r\nimport { unixToDate } from 'utils/date'\r\nimport BarChart from 'components/BarChart/alt'\r\nimport { useAllPoolData } from 'state/pools/hooks'\r\nimport { notEmpty } from 'utils'\r\nimport TransactionsTable from '../../components/TransactionsTable'\r\nimport { useAllTokenData } from 'state/tokens/hooks'\r\nimport { MonoSpace } from 'components/shared'\r\nimport dayjs from 'dayjs'\r\n\r\nconst ChartWrapper = styled.div`\r\n  width: 49%;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    width: 100%;\r\n  `};\r\n`\r\n\r\nexport default function Home() {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  const theme = useTheme()\r\n\r\n  const [protocolData] = useProtocolData()\r\n  const [chartData] = useProtocolChartData()\r\n  const [transactions] = useProtocolTransactions()\r\n\r\n  const [volumeHover, setVolumeHover] = useState<number | undefined>()\r\n  const [liquidityHover, setLiquidityHover] = useState<number | undefined>()\r\n  const [leftLabel, setLeftLabel] = useState<string | undefined>()\r\n  const [rightLabel, setRightLabel] = useState<string | undefined>()\r\n\r\n  // get all the pool datas that exist\r\n  const allPoolData = useAllPoolData()\r\n  const poolDatas = useMemo(() => {\r\n    return Object.values(allPoolData)\r\n      .map((p) => p.data)\r\n      .filter(notEmpty)\r\n  }, [allPoolData])\r\n\r\n  // if hover value undefined, reset to current day value\r\n  useEffect(() => {\r\n    if (!volumeHover && protocolData) {\r\n      setVolumeHover(protocolData.volumeUSD)\r\n    }\r\n  }, [protocolData, volumeHover])\r\n  useEffect(() => {\r\n    if (!liquidityHover && protocolData) {\r\n      setLiquidityHover(protocolData.tvlUSD)\r\n    }\r\n  }, [liquidityHover, protocolData])\r\n\r\n  const formattedTvlData = useMemo(() => {\r\n    if (chartData) {\r\n      return chartData.map((day) => {\r\n        return {\r\n          time: unixToDate(day.date),\r\n          value: day.tvlUSD,\r\n        }\r\n      })\r\n    } else {\r\n      return []\r\n    }\r\n  }, [chartData])\r\n\r\n  const formattedVolumeData = useMemo(() => {\r\n    if (chartData) {\r\n      return chartData.map((day) => {\r\n        return {\r\n          time: unixToDate(day.date),\r\n          value: day.volumeUSD,\r\n        }\r\n      })\r\n    } else {\r\n      return []\r\n    }\r\n  }, [chartData])\r\n\r\n  const allTokens = useAllTokenData()\r\n\r\n  const formattedTokens = useMemo(() => {\r\n    return Object.values(allTokens)\r\n      .map((t) => t.data)\r\n      .filter(notEmpty)\r\n  }, [allTokens])\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <ThemedBackgroundGlobal backgroundColor={'#fc077d'} />\r\n      <AutoColumn gap=\"16px\">\r\n        <TYPE.main>Uniswap Overview</TYPE.main>\r\n        <ResponsiveRow>\r\n          <ChartWrapper>\r\n            <LineChart\r\n              data={formattedTvlData}\r\n              height={220}\r\n              minHeight={332}\r\n              color={theme.pink1}\r\n              value={liquidityHover}\r\n              label={leftLabel}\r\n              setValue={setLiquidityHover}\r\n              setLabel={setLeftLabel}\r\n              topLeft={\r\n                <AutoColumn gap=\"4px\">\r\n                  <TYPE.mediumHeader fontSize=\"16px\">TVL</TYPE.mediumHeader>\r\n                  <TYPE.largeHeader fontSize=\"32px\">\r\n                    <MonoSpace>{formatDollarAmount(liquidityHover, 2, true)} </MonoSpace>\r\n                  </TYPE.largeHeader>\r\n                  <TYPE.main fontSize=\"12px\" height=\"14px\">\r\n                    {leftLabel ? (\r\n                      <MonoSpace>{leftLabel}</MonoSpace>\r\n                    ) : (\r\n                      <MonoSpace>{dayjs.utc().format('MMM D, YYYY')}</MonoSpace>\r\n                    )}\r\n                  </TYPE.main>\r\n                </AutoColumn>\r\n              }\r\n            />\r\n          </ChartWrapper>\r\n          <ChartWrapper>\r\n            <BarChart\r\n              height={220}\r\n              minHeight={332}\r\n              data={formattedVolumeData}\r\n              color={theme.blue1}\r\n              setValue={setVolumeHover}\r\n              setLabel={setRightLabel}\r\n              value={volumeHover}\r\n              label={rightLabel}\r\n              topLeft={\r\n                <AutoColumn gap=\"4px\">\r\n                  <TYPE.mediumHeader fontSize=\"16px\">Volume 24H</TYPE.mediumHeader>\r\n                  <TYPE.largeHeader fontSize=\"32px\">\r\n                    <MonoSpace> {formatDollarAmount(volumeHover, 2)}</MonoSpace>\r\n                  </TYPE.largeHeader>\r\n                  <TYPE.main fontSize=\"12px\" height=\"14px\">\r\n                    {rightLabel ? (\r\n                      <MonoSpace>{rightLabel}</MonoSpace>\r\n                    ) : (\r\n                      <MonoSpace>{dayjs.utc().format('MMM D, YYYY')}</MonoSpace>\r\n                    )}\r\n                  </TYPE.main>\r\n                </AutoColumn>\r\n              }\r\n            />\r\n          </ChartWrapper>\r\n        </ResponsiveRow>\r\n        <HideSmall>\r\n          <DarkGreyCard>\r\n            <RowBetween>\r\n              <RowFixed>\r\n                <RowFixed mr=\"20px\">\r\n                  <TYPE.main mr=\"4px\">Volume 24H: </TYPE.main>\r\n                  <TYPE.label mr=\"4px\">{formatDollarAmount(protocolData?.volumeUSD)}</TYPE.label>\r\n                  <Percent value={protocolData?.volumeUSDChange} wrap={true} />\r\n                </RowFixed>\r\n                <RowFixed mr=\"20px\">\r\n                  <TYPE.main mr=\"4px\">Fees 24H: </TYPE.main>\r\n                  <TYPE.label mr=\"4px\">{formatDollarAmount(protocolData?.feesUSD)}</TYPE.label>\r\n                  <Percent value={protocolData?.feeChange} wrap={true} />\r\n                </RowFixed>\r\n                <HideMedium>\r\n                  <RowFixed mr=\"20px\">\r\n                    <TYPE.main mr=\"4px\">TVL: </TYPE.main>\r\n                    <TYPE.label mr=\"4px\">{formatDollarAmount(protocolData?.tvlUSD)}</TYPE.label>\r\n                    <TYPE.main></TYPE.main>\r\n                    <Percent value={protocolData?.tvlUSDChange} wrap={true} />\r\n                  </RowFixed>\r\n                </HideMedium>\r\n              </RowFixed>\r\n            </RowBetween>\r\n          </DarkGreyCard>\r\n        </HideSmall>\r\n        <RowBetween>\r\n          <TYPE.main>Top Tokens</TYPE.main>\r\n          <StyledInternalLink to=\"/tokens\">Explore</StyledInternalLink>\r\n        </RowBetween>\r\n        <TokenTable tokenDatas={formattedTokens} />\r\n        <RowBetween>\r\n          <TYPE.main>Top Pools</TYPE.main>\r\n          <StyledInternalLink to=\"/pools\">Explore</StyledInternalLink>\r\n        </RowBetween>\r\n        <PoolTable poolDatas={poolDatas} />\r\n        <RowBetween>\r\n          <TYPE.main>Transactions</TYPE.main>\r\n        </RowBetween>\r\n        {transactions ? <TransactionsTable transactions={transactions} /> : null}\r\n      </AutoColumn>\r\n    </PageWrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Protocol() {\r\n  return <div></div>\r\n}\r\n","import React, { useEffect, useMemo } from 'react'\r\nimport { PageWrapper } from 'pages/styled'\r\nimport { AutoColumn } from 'components/Column'\r\nimport { TYPE } from 'theme'\r\nimport PoolTable from 'components/pools/PoolTable'\r\nimport { useAllPoolData, usePoolDatas } from 'state/pools/hooks'\r\nimport { notEmpty } from 'utils'\r\nimport { useSavedPools } from 'state/user/hooks'\r\nimport { DarkGreyCard } from 'components/Card'\r\n// import TopPoolMovers from 'components/pools/TopPoolMovers'\r\n\r\nexport default function PoolPage() {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  // get all the pool datas that exist\r\n  const allPoolData = useAllPoolData()\r\n  const poolDatas = useMemo(() => {\r\n    return Object.values(allPoolData)\r\n      .map((p) => p.data)\r\n      .filter(notEmpty)\r\n  }, [allPoolData])\r\n\r\n  const [savedPools] = useSavedPools()\r\n  const watchlistPools = usePoolDatas(savedPools)\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <AutoColumn gap=\"lg\">\r\n        <TYPE.main>Your Watchlist</TYPE.main>\r\n        {watchlistPools.length > 0 ? (\r\n          <PoolTable poolDatas={watchlistPools} />\r\n        ) : (\r\n          <DarkGreyCard>\r\n            <TYPE.main>Saved pools will appear here</TYPE.main>\r\n          </DarkGreyCard>\r\n        )}\r\n        {/* <HideSmall>\r\n          <DarkGreyCard style={{ paddingTop: '12px' }}>\r\n            <AutoColumn gap=\"md\">\r\n              <TYPE.mediumHeader fontSize=\"16px\">Trending by 24H Volume</TYPE.mediumHeader>\r\n              <TopPoolMovers />\r\n            </AutoColumn>\r\n          </DarkGreyCard>\r\n        </HideSmall> */}\r\n        <TYPE.main>All Pools</TYPE.main>\r\n        <PoolTable poolDatas={poolDatas} />\r\n      </AutoColumn>\r\n    </PageWrapper>\r\n  )\r\n}\r\n","import React, { useMemo, useRef, useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useAllTokenData } from 'state/tokens/hooks'\r\nimport { GreyCard } from 'components/Card'\r\nimport { TokenData } from 'state/tokens/reducer'\r\nimport { AutoColumn } from 'components/Column'\r\nimport { RowFixed, RowFlat } from 'components/Row'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport { TYPE, StyledInternalLink } from 'theme'\r\nimport { formatDollarAmount } from 'utils/numbers'\r\nimport Percent from 'components/Percent'\r\nimport HoverInlineText from 'components/HoverInlineText'\r\n\r\nconst CardWrapper = styled(StyledInternalLink)`\r\n  min-width: 190px;\r\n  margin-right: 16px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n`\r\n\r\nconst FixedContainer = styled(AutoColumn)``\r\n\r\nexport const ScrollableRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  overflow-x: auto;\r\n  white-space: nowrap;\r\n\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst DataCard = ({ tokenData }: { tokenData: TokenData }) => {\r\n  return (\r\n    <CardWrapper to={'tokens/' + tokenData.address}>\r\n      <GreyCard padding=\"16px\">\r\n        <RowFixed>\r\n          <CurrencyLogo address={tokenData.address} size=\"32px\" />\r\n          <AutoColumn gap=\"3px\" style={{ marginLeft: '12px' }}>\r\n            <TYPE.label fontSize=\"14px\">\r\n              <HoverInlineText text={tokenData.symbol} />\r\n            </TYPE.label>\r\n            <RowFlat>\r\n              <TYPE.label fontSize=\"14px\" mr=\"6px\" lineHeight=\"16px\">\r\n                {formatDollarAmount(tokenData.priceUSD)}\r\n              </TYPE.label>\r\n              <Percent fontSize=\"14px\" value={tokenData.priceUSDChange} />\r\n            </RowFlat>\r\n          </AutoColumn>\r\n        </RowFixed>\r\n      </GreyCard>\r\n    </CardWrapper>\r\n  )\r\n}\r\n\r\nexport default function TopTokenMovers() {\r\n  const allTokens = useAllTokenData()\r\n\r\n  const topPriceIncrease = useMemo(() => {\r\n    return Object.values(allTokens)\r\n      .sort(({ data: a }, { data: b }) => {\r\n        return a && b ? (Math.abs(a?.priceUSDChange) > Math.abs(b?.priceUSDChange) ? -1 : 1) : -1\r\n      })\r\n      .slice(0, Math.min(20, Object.values(allTokens).length))\r\n  }, [allTokens])\r\n\r\n  const increaseRef = useRef<HTMLDivElement>(null)\r\n  const [increaseSet, setIncreaseSet] = useState(false)\r\n  // const [pauseAnimation, setPauseAnimation] = useState(false)\r\n  // const [resetInterval, setClearInterval] = useState<() => void | undefined>()\r\n\r\n  useEffect(() => {\r\n    if (!increaseSet && increaseRef && increaseRef.current) {\r\n      setInterval(() => {\r\n        if (increaseRef.current && increaseRef.current.scrollLeft !== increaseRef.current.scrollWidth) {\r\n          increaseRef.current.scrollTo(increaseRef.current.scrollLeft + 1, 0)\r\n        }\r\n      }, 30)\r\n      setIncreaseSet(true)\r\n    }\r\n  }, [increaseRef, increaseSet])\r\n\r\n  // function handleHover() {\r\n  //   if (resetInterval) {\r\n  //     resetInterval()\r\n  //   }\r\n  //   setPauseAnimation(true)\r\n  // }\r\n\r\n  return (\r\n    <FixedContainer gap=\"md\">\r\n      <ScrollableRow ref={increaseRef}>\r\n        {topPriceIncrease.map((entry) =>\r\n          entry.data ? <DataCard key={'top-card-token-' + entry.data?.address} tokenData={entry.data} /> : null\r\n        )}\r\n      </ScrollableRow>\r\n    </FixedContainer>\r\n  )\r\n}\r\n","import React, { useMemo, useEffect } from 'react'\r\nimport { PageWrapper } from 'pages/styled'\r\nimport { AutoColumn } from 'components/Column'\r\nimport { TYPE, HideSmall } from 'theme'\r\nimport TokenTable from 'components/tokens/TokenTable'\r\nimport { useAllTokenData, useTokenDatas } from 'state/tokens/hooks'\r\nimport { notEmpty } from 'utils'\r\nimport { useSavedTokens } from 'state/user/hooks'\r\nimport { DarkGreyCard } from 'components/Card'\r\nimport TopTokenMovers from 'components/tokens/TopTokenMovers'\r\n\r\nexport default function TokensOverview() {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  const allTokens = useAllTokenData()\r\n\r\n  const formattedTokens = useMemo(() => {\r\n    return Object.values(allTokens)\r\n      .map((t) => t.data)\r\n      .filter(notEmpty)\r\n  }, [allTokens])\r\n\r\n  const [savedTokens] = useSavedTokens()\r\n  const watchListTokens = useTokenDatas(savedTokens)\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <AutoColumn gap=\"lg\">\r\n        <TYPE.main>Your Watchlist</TYPE.main>\r\n        {savedTokens.length > 0 ? (\r\n          <TokenTable tokenDatas={watchListTokens} />\r\n        ) : (\r\n          <DarkGreyCard>\r\n            <TYPE.main>Saved tokens will appear here</TYPE.main>\r\n          </DarkGreyCard>\r\n        )}\r\n        <HideSmall>\r\n          <DarkGreyCard style={{ paddingTop: '12px' }}>\r\n            <AutoColumn gap=\"md\">\r\n              <TYPE.mediumHeader fontSize=\"16px\">Top Movers</TYPE.mediumHeader>\r\n              <TopTokenMovers />\r\n            </AutoColumn>\r\n          </DarkGreyCard>\r\n        </HideSmall>\r\n        <TYPE.main>All Tokens</TYPE.main>\r\n        <TokenTable tokenDatas={formattedTokens} />\r\n      </AutoColumn>\r\n    </PageWrapper>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { TYPE, ExternalLink } from '../../theme'\r\n\r\nimport { useSubgraphStatus } from '../../state/application/hooks'\r\nimport { getEtherscanLink } from '../../utils'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\nconst StyledPolling = styled.div`\r\n  display: flex;\r\n  color: white;\r\n  margin-right: 1rem;\r\n  border-radius: 4px;\r\n  width: 192px;\r\n  padding: 4px;\r\n  background-color: ${({ theme }) => theme.bg2};\r\n  transition: opacity 0.25s ease;\r\n  color: ${({ theme }) => theme.green1};\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n  z-index: 9999;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToMedium`\r\n    display: none;\r\n  `}\r\n`\r\nconst StyledPollingDot = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  min-height: 8px;\r\n  min-width: 8px;\r\n  margin-left: 0.4rem;\r\n  margin-top: 3px;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  background-color: ${({ theme }) => theme.green1};\r\n`\r\n\r\nconst rotate360 = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nconst Spinner = styled.div`\r\n  animation: ${rotate360} 1s cubic-bezier(0.83, 0, 0.17, 1) infinite;\r\n  transform: translateZ(0);\r\n  border-top: 1px solid transparent;\r\n  border-right: 1px solid transparent;\r\n  border-bottom: 1px solid transparent;\r\n  border-left: 2px solid ${({ theme }) => theme.green1};\r\n  background: transparent;\r\n  width: 14px;\r\n  height: 14px;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  left: -3px;\r\n  top: -3px;\r\n`\r\n\r\nexport default function Polling() {\r\n  const theme = useTheme()\r\n\r\n  const [status] = useSubgraphStatus()\r\n\r\n  const [isMounted, setIsMounted] = useState(true)\r\n\r\n  const latestBlock = status.syncedBlock\r\n\r\n  useEffect(\r\n    () => {\r\n      const timer1 = setTimeout(() => setIsMounted(true), 1000)\r\n\r\n      // this will clear Timeout when component unmount like in willComponentUnmount\r\n      return () => {\r\n        setIsMounted(false)\r\n        clearTimeout(timer1)\r\n      }\r\n    },\r\n    [status] //useEffect will run only one time\r\n    //if you pass a value to array, like this [data] than clearTimeout will run every time this value changes (useEffect re-run)\r\n  )\r\n\r\n  return (\r\n    <ExternalLink href={latestBlock ? getEtherscanLink(1, latestBlock.toString(), 'block') : ''}>\r\n      <StyledPolling>\r\n        <TYPE.small mr=\"4px\" color={theme.text3}>\r\n          Latest synced block:{' '}\r\n        </TYPE.small>\r\n        <TYPE.small style={{ opacity: isMounted ? '0.6' : '0.8' }}>{latestBlock}</TYPE.small>\r\n        <StyledPollingDot>{!isMounted && <Spinner />}</StyledPollingDot>\r\n      </StyledPolling>\r\n    </ExternalLink>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { RowBetween, RowFixed, AutoRow } from 'components/Row'\r\nimport { TYPE, ExternalLink } from 'theme'\r\nimport { useEthPrices } from 'hooks/useEthPrices'\r\nimport { formatDollarAmount } from 'utils/numbers'\r\nimport Polling from './Polling'\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.black};\r\n  padding: 10px 20px;\r\n`\r\n\r\nconst Item = styled(TYPE.main)`\r\n  font-size: 12px;\r\n`\r\n\r\nconst StyledLink = styled(ExternalLink)`\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.text1};\r\n`\r\n\r\nconst TopBar = () => {\r\n  const ethPrices = useEthPrices()\r\n  return (\r\n    <Wrapper>\r\n      <RowBetween>\r\n        <Polling />\r\n        <AutoRow gap=\"6px\">\r\n          <RowFixed>\r\n            <Item>ETH Price:</Item>\r\n            <Item fontWeight=\"700\" ml=\"4px\">\r\n              {formatDollarAmount(ethPrices?.current)}\r\n            </Item>\r\n          </RowFixed>\r\n        </AutoRow>\r\n        <AutoRow gap=\"6px\" style={{ justifyContent: 'flex-end' }}>\r\n          <StyledLink href=\"https://v2.info.uniswap.org/#/\">V2 Analytics</StyledLink>\r\n          <StyledLink href=\"https://docs.uniswap.org/\">Docs</StyledLink>\r\n          <StyledLink href=\"https://app.uniswap.org/#/swap\">App</StyledLink>\r\n        </AutoRow>\r\n      </RowBetween>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TopBar\r\n","import { useState, useLayoutEffect, useMemo } from 'react'\r\nimport { shade } from 'polished'\r\nimport Vibrant from 'node-vibrant'\r\nimport { hex } from 'wcag-contrast'\r\nimport { Token, ChainId } from '@uniswap/sdk-core'\r\nimport uriToHttp from 'utils/uriToHttp'\r\nimport { isAddress } from 'utils'\r\n\r\nasync function getColorFromToken(token: Token): Promise<string | null> {\r\n  if (token.chainId === ChainId.RINKEBY && token.address === '0xc7AD46e0b8a400Bb3C915120d284AafbA8fc4735') {\r\n    return Promise.resolve('#FAAB14')\r\n  }\r\n\r\n  const path = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${token.address}/logo.png`\r\n\r\n  return Vibrant.from(path)\r\n    .getPalette()\r\n    .then((palette) => {\r\n      if (palette?.Vibrant) {\r\n        let detectedHex = palette.Vibrant.hex\r\n        let AAscore = hex(detectedHex, '#FFF')\r\n        while (AAscore < 3) {\r\n          detectedHex = shade(0.005, detectedHex)\r\n          AAscore = hex(detectedHex, '#FFF')\r\n        }\r\n        return detectedHex\r\n      }\r\n      return null\r\n    })\r\n    .catch(() => null)\r\n}\r\n\r\nasync function getColorFromUriPath(uri: string): Promise<string | null> {\r\n  const formattedPath = uriToHttp(uri)[0]\r\n\r\n  return Vibrant.from(formattedPath)\r\n    .getPalette()\r\n    .then((palette) => {\r\n      if (palette?.Vibrant) {\r\n        return palette.Vibrant.hex\r\n      }\r\n      return null\r\n    })\r\n    .catch(() => null)\r\n}\r\n\r\nexport function useColor(address?: string) {\r\n  const [color, setColor] = useState('#2172E5')\r\n\r\n  const formattedAddress = isAddress(address)\r\n\r\n  const token = useMemo(() => {\r\n    return formattedAddress ? new Token(1, formattedAddress, 0) : undefined\r\n  }, [formattedAddress])\r\n\r\n  useLayoutEffect(() => {\r\n    let stale = false\r\n\r\n    if (token) {\r\n      getColorFromToken(token).then((tokenColor) => {\r\n        if (!stale && tokenColor !== null) {\r\n          setColor(tokenColor)\r\n        }\r\n      })\r\n    }\r\n\r\n    return () => {\r\n      stale = true\r\n      setColor('#2172E5')\r\n    }\r\n  }, [token])\r\n\r\n  return color\r\n}\r\n\r\nexport function useListColor(listImageUri?: string) {\r\n  const [color, setColor] = useState('#2172E5')\r\n\r\n  useLayoutEffect(() => {\r\n    let stale = false\r\n\r\n    if (listImageUri) {\r\n      getColorFromUriPath(listImageUri).then((color) => {\r\n        if (!stale && color !== null) {\r\n          setColor(color)\r\n        }\r\n      })\r\n    }\r\n\r\n    return () => {\r\n      stale = true\r\n      setColor('#2172E5')\r\n    }\r\n  }, [listImageUri])\r\n\r\n  return color\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ToggleElement = styled.span<{ isActive?: boolean; isOnSwitch?: boolean }>`\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 14px;\r\n  background: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.primary1 : theme.text4) : 'none')};\r\n  color: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.white : theme.text2) : theme.text3)};\r\n  font-size: 1rem;\r\n  font-weight: 400;\r\n\r\n  padding: 0.35rem 0.6rem;\r\n  border-radius: 12px;\r\n  background: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.primary1 : theme.text4) : 'none')};\r\n  color: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.white : theme.text2) : theme.text2)};\r\n  font-size: 1rem;\r\n  font-weight: ${({ isOnSwitch }) => (isOnSwitch ? '500' : '400')};\r\n  :hover {\r\n    user-select: ${({ isOnSwitch }) => (isOnSwitch ? 'none' : 'initial')};\r\n    background: ${({ theme, isActive, isOnSwitch }) =>\r\n      isActive ? (isOnSwitch ? theme.primary1 : theme.text3) : 'none'};\r\n    color: ${({ theme, isActive, isOnSwitch }) => (isActive ? (isOnSwitch ? theme.white : theme.text2) : theme.text3)};\r\n  }\r\n`\r\n\r\nconst StyledToggle = styled.button<{ isActive?: boolean; activeElement?: boolean }>`\r\n  border-radius: 12px;\r\n  border: none;\r\n  background: ${({ theme }) => theme.bg3};\r\n  display: flex;\r\n  width: fit-content;\r\n  cursor: pointer;\r\n  outline: none;\r\n  padding: 0;\r\n`\r\n\r\nexport interface ToggleProps {\r\n  id?: string\r\n  isActive: boolean\r\n  toggle: () => void\r\n}\r\n\r\nexport default function Toggle({ id, isActive, toggle }: ToggleProps) {\r\n  return (\r\n    <StyledToggle id={id} isActive={isActive} onClick={toggle}>\r\n      <ToggleElement isActive={isActive} isOnSwitch={true}>\r\n        On\r\n      </ToggleElement>\r\n      <ToggleElement isActive={!isActive} isOnSwitch={false}>\r\n        Off\r\n      </ToggleElement>\r\n    </StyledToggle>\r\n  )\r\n}\r\n\r\nexport const ToggleWrapper = styled.button<{ width?: string }>`\r\n  display: flex;\r\n  align-items: center;\r\n  width: ${({ width }) => width ?? '100%'}\r\n  padding: 1px;\r\n  background: ${({ theme }) => theme.bg2};\r\n  border-radius: 12px;\r\n  border: ${({ theme }) => '2px solid ' + theme.bg2};\r\n  cursor: pointer;\r\n  outline: none;\r\n  color: ${({ theme }) => theme.text2};\r\n\r\n`\r\n\r\nexport const ToggleElementFree = styled.span<{ isActive?: boolean; fontSize?: string }>`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 2px 10px;\r\n  border-radius: 12px;\r\n  justify-content: center;\r\n  height: 100%;\r\n  background: ${({ theme, isActive }) => (isActive ? theme.black : 'none')};\r\n  color: ${({ theme, isActive }) => (isActive ? theme.text1 : theme.text2)};\r\n  font-size: ${({ fontSize }) => fontSize ?? '1rem'};\r\n  font-weight: 600;\r\n  white-space: nowrap;\r\n  :hover {\r\n    user-select: initial;\r\n    color: ${({ theme, isActive }) => (isActive ? theme.text2 : theme.text3)};\r\n  }\r\n  margin-top: 0.5px;\r\n`\r\n","import React, { useRef, useState, useEffect, useCallback, Dispatch, SetStateAction, ReactNode } from 'react'\r\nimport { createChart, IChartApi } from 'lightweight-charts'\r\nimport { RowBetween } from 'components/Row'\r\nimport Card from '../Card'\r\nimport styled from 'styled-components'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ndayjs.extend(utc)\r\n\r\nconst Wrapper = styled(Card)`\r\n  width: 100%;\r\n  padding: 1rem;\r\n  display: flex;\r\n  background-color: ${({ theme }) => theme.bg0}\r\n  flex-direction: column;\r\n  > * {\r\n    font-size: 1rem;\r\n  }\r\n`\r\n\r\nconst DEFAULT_HEIGHT = 300\r\n\r\nexport type LineChartProps = {\r\n  data: any[]\r\n  color?: string | undefined\r\n  height?: number | undefined\r\n  minHeight?: number\r\n  setValue?: Dispatch<SetStateAction<number | undefined>> // used for value on hover\r\n  setLabel?: Dispatch<SetStateAction<string | undefined>> // used for value label on hover\r\n  topLeft?: ReactNode | undefined\r\n  topRight?: ReactNode | undefined\r\n  bottomLeft?: ReactNode | undefined\r\n  bottomRight?: ReactNode | undefined\r\n} & React.HTMLAttributes<HTMLDivElement>\r\n\r\nconst CandleChart = ({\r\n  data,\r\n  color = '#56B2A4',\r\n  setValue,\r\n  setLabel,\r\n  topLeft,\r\n  topRight,\r\n  bottomLeft,\r\n  bottomRight,\r\n  height = DEFAULT_HEIGHT,\r\n  minHeight = DEFAULT_HEIGHT,\r\n  ...rest\r\n}: LineChartProps) => {\r\n  const theme = useTheme()\r\n  const textColor = theme.text3\r\n  const chartRef = useRef<HTMLDivElement>(null)\r\n  const [chartCreated, setChart] = useState<IChartApi | undefined>()\r\n\r\n  const handleResize = useCallback(() => {\r\n    if (chartCreated && chartRef?.current?.parentElement) {\r\n      chartCreated.resize(chartRef.current.parentElement.clientWidth - 32, height)\r\n      chartCreated.timeScale().fitContent()\r\n      chartCreated.timeScale().scrollToPosition(0, false)\r\n    }\r\n  }, [chartCreated, chartRef, height])\r\n\r\n  // add event listener for resize\r\n  const isClient = typeof window === 'object'\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [isClient, chartRef, handleResize]) // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  // if chart not instantiated in canvas, create it\r\n  useEffect(() => {\r\n    if (!chartCreated && data && !!chartRef?.current?.parentElement) {\r\n      const chart = createChart(chartRef.current, {\r\n        height: height,\r\n        width: chartRef.current.parentElement.clientWidth - 32,\r\n        layout: {\r\n          backgroundColor: 'transparent',\r\n          textColor: '#565A69',\r\n          fontFamily: 'Inter var',\r\n        },\r\n        rightPriceScale: {\r\n          scaleMargins: {\r\n            top: 0.1,\r\n            bottom: 0.1,\r\n          },\r\n          borderVisible: false,\r\n        },\r\n        timeScale: {\r\n          borderVisible: false,\r\n          secondsVisible: true,\r\n          tickMarkFormatter: (unixTime: number) => {\r\n            return dayjs.unix(unixTime).format('MM/DD h:mm A')\r\n          },\r\n        },\r\n        watermark: {\r\n          visible: false,\r\n        },\r\n        grid: {\r\n          horzLines: {\r\n            visible: false,\r\n          },\r\n          vertLines: {\r\n            visible: false,\r\n          },\r\n        },\r\n        crosshair: {\r\n          horzLine: {\r\n            visible: false,\r\n            labelVisible: false,\r\n          },\r\n          mode: 1,\r\n          vertLine: {\r\n            visible: true,\r\n            labelVisible: false,\r\n            style: 3,\r\n            width: 1,\r\n            color: '#505050',\r\n            labelBackgroundColor: color,\r\n          },\r\n        },\r\n      })\r\n\r\n      chart.timeScale().fitContent()\r\n      setChart(chart)\r\n    }\r\n  }, [color, chartCreated, data, height, setValue, textColor, theme])\r\n\r\n  useEffect(() => {\r\n    if (chartCreated && data) {\r\n      const series = chartCreated.addCandlestickSeries({\r\n        upColor: 'green',\r\n        downColor: 'red',\r\n        borderDownColor: 'red',\r\n        borderUpColor: 'green',\r\n        wickDownColor: 'red',\r\n        wickUpColor: 'green',\r\n      })\r\n\r\n      series.setData(data)\r\n\r\n      // update the title when hovering on the chart\r\n      chartCreated.subscribeCrosshairMove(function (param) {\r\n        if (\r\n          chartRef?.current &&\r\n          (param === undefined ||\r\n            param.time === undefined ||\r\n            (param && param.point && param.point.x < 0) ||\r\n            (param && param.point && param.point.x > chartRef.current.clientWidth) ||\r\n            (param && param.point && param.point.y < 0) ||\r\n            (param && param.point && param.point.y > height))\r\n        ) {\r\n          // reset values\r\n          setValue && setValue(undefined)\r\n          setLabel && setLabel(undefined)\r\n        } else if (series && param) {\r\n          const timestamp = param.time as number\r\n          const time = dayjs.unix(timestamp).utc().format('MMM D, YYYY h:mm A') + ' (UTC)'\r\n          const parsed = param.seriesPrices.get(series) as { open: number } | undefined\r\n          setValue && setValue(parsed?.open)\r\n          setLabel && setLabel(time)\r\n        }\r\n      })\r\n    }\r\n  }, [chartCreated, color, data, height, setValue, setLabel, theme.bg0])\r\n\r\n  return (\r\n    <Wrapper minHeight={minHeight}>\r\n      <RowBetween>\r\n        {topLeft ?? null}\r\n        {topRight ?? null}\r\n      </RowBetween>\r\n      <div ref={chartRef} id={'candle-chart'} {...rest} />\r\n      <RowBetween>\r\n        {bottomLeft ?? null}\r\n        {bottomRight ?? null}\r\n      </RowBetween>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CandleChart\r\n","import React, { useMemo, useState, useEffect } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport {\r\n  useTokenData,\r\n  usePoolsForToken,\r\n  useTokenChartData,\r\n  useTokenPriceData,\r\n  useTokenTransactions,\r\n} from 'state/tokens/hooks'\r\nimport styled from 'styled-components'\r\nimport { useColor } from 'hooks/useColor'\r\nimport { ThemedBackground, PageWrapper } from 'pages/styled'\r\nimport { shortenAddress, getEtherscanLink, currentTimestamp } from 'utils'\r\nimport { AutoColumn } from 'components/Column'\r\nimport { RowBetween, RowFixed, AutoRow, RowFlat } from 'components/Row'\r\nimport { TYPE, StyledInternalLink } from 'theme'\r\nimport Loader, { LocalLoader } from 'components/Loader'\r\nimport { ExternalLink, Download } from 'react-feather'\r\nimport { ExternalLink as StyledExternalLink } from '../../theme/components'\r\nimport useTheme from 'hooks/useTheme'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport { formatDollarAmount } from 'utils/numbers'\r\nimport Percent from 'components/Percent'\r\nimport { ButtonPrimary, ButtonGray, SavedIcon } from 'components/Button'\r\nimport { DarkGreyCard, LightGreyCard } from 'components/Card'\r\nimport { usePoolDatas } from 'state/pools/hooks'\r\nimport PoolTable from 'components/pools/PoolTable'\r\nimport LineChart from 'components/LineChart/alt'\r\nimport { unixToDate } from 'utils/date'\r\nimport { ToggleWrapper, ToggleElementFree } from 'components/Toggle/index'\r\nimport BarChart from 'components/BarChart/alt'\r\nimport CandleChart from 'components/CandleChart'\r\nimport TransactionTable from 'components/TransactionsTable'\r\nimport { useSavedTokens } from 'state/user/hooks'\r\nimport { ONE_HOUR_SECONDS, TimeWindow } from 'constants/intervals'\r\nimport { MonoSpace } from 'components/shared'\r\nimport dayjs from 'dayjs'\r\n// import { SmallOptionButton } from '../../components/Button'\r\n\r\nconst PriceText = styled(TYPE.label)`\r\n  font-size: 36px;\r\n  line-height: 0.8;\r\n`\r\n\r\nconst ContentLayout = styled.div`\r\n  margin-top: 16px;\r\n  display: grid;\r\n  grid-template-columns: 260px 1fr;\r\n  grid-gap: 1em;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 1fr 1fr;\r\n  }\r\n`\r\n\r\nconst ResponsiveRow = styled(RowBetween)`\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    row-gap: 24px;\r\n    width: 100%:\r\n  `};\r\n`\r\n\r\nenum ChartView {\r\n  TVL,\r\n  VOL,\r\n  PRICE,\r\n}\r\n\r\nconst DEFAULT_TIME_WINDOW = TimeWindow.WEEK\r\n\r\nexport default function TokenPage({\r\n  match: {\r\n    params: { address },\r\n  },\r\n}: RouteComponentProps<{ address: string }>) {\r\n  // theming\r\n  const backgroundColor = useColor(address)\r\n  const theme = useTheme()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  const tokenData = useTokenData(address)\r\n  const poolsForToken = usePoolsForToken(address)\r\n  const poolDatas = usePoolDatas(poolsForToken ?? [])\r\n  const transactions = useTokenTransactions(address)\r\n  const chartData = useTokenChartData(address)\r\n\r\n  // format for chart component\r\n  const formattedTvlData = useMemo(() => {\r\n    if (chartData) {\r\n      return chartData.map((day) => {\r\n        return {\r\n          time: unixToDate(day.date),\r\n          value: day.totalValueLockedUSD,\r\n        }\r\n      })\r\n    } else {\r\n      return []\r\n    }\r\n  }, [chartData])\r\n  const formattedVolumeData = useMemo(() => {\r\n    if (chartData) {\r\n      return chartData.map((day) => {\r\n        return {\r\n          time: unixToDate(day.date),\r\n          value: day.volumeUSD,\r\n        }\r\n      })\r\n    } else {\r\n      return []\r\n    }\r\n  }, [chartData])\r\n\r\n  // chart labels\r\n  const [view, setView] = useState(ChartView.VOL)\r\n  const [latestValue, setLatestValue] = useState<number | undefined>()\r\n  const [valueLabel, setValueLabel] = useState<string | undefined>()\r\n  const [timeWindow] = useState(DEFAULT_TIME_WINDOW)\r\n\r\n  // pricing data\r\n  const priceData = useTokenPriceData(address, ONE_HOUR_SECONDS, timeWindow)\r\n  const adjustedToCurrent = useMemo(() => {\r\n    if (priceData && tokenData && priceData.length > 0) {\r\n      const adjusted = Object.assign([], priceData)\r\n      adjusted.push({\r\n        time: currentTimestamp() / 1000,\r\n        open: priceData[priceData.length - 1].close,\r\n        close: tokenData?.priceUSD,\r\n        high: tokenData?.priceUSD,\r\n        low: priceData[priceData.length - 1].close,\r\n      })\r\n      return adjusted\r\n    } else {\r\n      return undefined\r\n    }\r\n  }, [priceData, tokenData])\r\n\r\n  // watchlist\r\n  const [savedTokens, addSavedToken] = useSavedTokens()\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <ThemedBackground backgroundColor={backgroundColor} />\r\n      {tokenData ? (\r\n        !tokenData.exists ? (\r\n          <LightGreyCard style={{ textAlign: 'center' }}>\r\n            No pool has been created with this token yet. Creat one\r\n            <StyledExternalLink style={{ marginLeft: '4px' }} href={`https://app.uniswap.org/#/add/${address}`}>\r\n              here.\r\n            </StyledExternalLink>\r\n          </LightGreyCard>\r\n        ) : (\r\n          <AutoColumn gap=\"lg\">\r\n            <AutoColumn gap=\"40px\">\r\n              <RowBetween>\r\n                <AutoRow gap=\"4px\">\r\n                  <StyledInternalLink to={'/'}>\r\n                    <TYPE.main>{`Home > `}</TYPE.main>\r\n                  </StyledInternalLink>\r\n                  <StyledInternalLink to={'/tokens'}>\r\n                    <TYPE.label>{` Tokens `}</TYPE.label>\r\n                  </StyledInternalLink>\r\n                  <TYPE.main>{` > `}</TYPE.main>\r\n                  <TYPE.label>{` ${tokenData.symbol} `}</TYPE.label>\r\n                  <StyledExternalLink href={getEtherscanLink(1, address, 'address')}>\r\n                    <TYPE.main>{` (${shortenAddress(address)}) `}</TYPE.main>\r\n                  </StyledExternalLink>\r\n                </AutoRow>\r\n                <RowFixed gap=\"10px\" align=\"center\">\r\n                  <SavedIcon fill={savedTokens.includes(address)} onClick={() => addSavedToken(address)} />\r\n                  <StyledExternalLink href={getEtherscanLink(1, address, 'address')}>\r\n                    <ExternalLink stroke={theme.text2} size={'17px'} style={{ marginLeft: '12px' }} />\r\n                  </StyledExternalLink>\r\n                </RowFixed>\r\n              </RowBetween>\r\n              <ResponsiveRow align=\"flex-end\">\r\n                <AutoColumn gap=\"md\">\r\n                  <RowFixed gap=\"4px\">\r\n                    <CurrencyLogo address={address} />\r\n                    <TYPE.label ml={'12px'} fontSize=\"20px\">\r\n                      {tokenData.name}\r\n                    </TYPE.label>\r\n                    <TYPE.main ml={'12px'} fontSize=\"20px\">\r\n                      ({tokenData.symbol})\r\n                    </TYPE.main>\r\n                  </RowFixed>\r\n                  <RowFlat style={{ marginTop: '8px' }}>\r\n                    <PriceText mr=\"10px\"> {formatDollarAmount(tokenData.priceUSD)}</PriceText>\r\n                    (<Percent value={tokenData.priceUSDChange} />)\r\n                  </RowFlat>\r\n                </AutoColumn>\r\n                <RowFixed>\r\n                  <StyledExternalLink href={`https://app.uniswap.org/#/add/${address}`}>\r\n                    <ButtonGray width=\"170px\" mr=\"12px\" height={'100%'} style={{ height: '44px' }}>\r\n                      <RowBetween>\r\n                        <Download size={24} />\r\n                        <div style={{ display: 'flex', alignItems: 'center' }}>Add Liquidity</div>\r\n                      </RowBetween>\r\n                    </ButtonGray>\r\n                  </StyledExternalLink>\r\n                  <StyledExternalLink href={`https://app.uniswap.org/#/swap?inputCurrency=${address}`}>\r\n                    <ButtonPrimary width=\"100px\" bgColor={backgroundColor} style={{ height: '44px' }}>\r\n                      Trade\r\n                    </ButtonPrimary>\r\n                  </StyledExternalLink>\r\n                </RowFixed>\r\n              </ResponsiveRow>\r\n            </AutoColumn>\r\n            <ContentLayout>\r\n              <DarkGreyCard>\r\n                <AutoColumn gap=\"lg\">\r\n                  <AutoColumn gap=\"4px\">\r\n                    <TYPE.main fontWeight={400}>TVL</TYPE.main>\r\n                    <TYPE.label fontSize=\"24px\">{formatDollarAmount(tokenData.tvlUSD)}</TYPE.label>\r\n                    <Percent value={tokenData.tvlUSDChange} />\r\n                  </AutoColumn>\r\n                  <AutoColumn gap=\"4px\">\r\n                    <TYPE.main fontWeight={400}>24h Trading Vol</TYPE.main>\r\n                    <TYPE.label fontSize=\"24px\">{formatDollarAmount(tokenData.volumeUSD)}</TYPE.label>\r\n                    <Percent value={tokenData.volumeUSDChange} />\r\n                  </AutoColumn>\r\n                  <AutoColumn gap=\"4px\">\r\n                    <TYPE.main fontWeight={400}>7d Trading Vol</TYPE.main>\r\n                    <TYPE.label fontSize=\"24px\">{formatDollarAmount(tokenData.volumeUSDWeek)}</TYPE.label>\r\n                  </AutoColumn>\r\n                  <AutoColumn gap=\"4px\">\r\n                    <TYPE.main fontWeight={400}>24h Fees</TYPE.main>\r\n                    <TYPE.label fontSize=\"24px\">{formatDollarAmount(tokenData.feesUSD)}</TYPE.label>\r\n                  </AutoColumn>\r\n                </AutoColumn>\r\n              </DarkGreyCard>\r\n              <DarkGreyCard>\r\n                <RowBetween align=\"flex-start\">\r\n                  <AutoColumn>\r\n                    <RowFixed>\r\n                      <TYPE.label fontSize=\"24px\" height=\"30px\">\r\n                        <MonoSpace>\r\n                          {latestValue\r\n                            ? formatDollarAmount(latestValue, 2)\r\n                            : view === ChartView.VOL\r\n                            ? formatDollarAmount(formattedVolumeData[formattedVolumeData.length - 1]?.value)\r\n                            : view === ChartView.TVL\r\n                            ? formatDollarAmount(formattedTvlData[formattedTvlData.length - 1]?.value)\r\n                            : formatDollarAmount(tokenData.priceUSD, 2)}\r\n                        </MonoSpace>\r\n                      </TYPE.label>\r\n                    </RowFixed>\r\n                    <TYPE.main height=\"20px\" fontSize=\"12px\">\r\n                      {valueLabel ? (\r\n                        <MonoSpace>{valueLabel}</MonoSpace>\r\n                      ) : (\r\n                        <MonoSpace>{dayjs.utc().format('MMM D, YYYY')}</MonoSpace>\r\n                      )}\r\n                    </TYPE.main>\r\n                  </AutoColumn>\r\n                  <ToggleWrapper width=\"180px\">\r\n                    <ToggleElementFree\r\n                      isActive={view === ChartView.VOL}\r\n                      fontSize=\"12px\"\r\n                      onClick={() => (view === ChartView.VOL ? setView(ChartView.TVL) : setView(ChartView.VOL))}\r\n                    >\r\n                      Volume\r\n                    </ToggleElementFree>\r\n                    <ToggleElementFree\r\n                      isActive={view === ChartView.TVL}\r\n                      fontSize=\"12px\"\r\n                      onClick={() => (view === ChartView.TVL ? setView(ChartView.PRICE) : setView(ChartView.TVL))}\r\n                    >\r\n                      TVL\r\n                    </ToggleElementFree>\r\n                    <ToggleElementFree\r\n                      isActive={view === ChartView.PRICE}\r\n                      fontSize=\"12px\"\r\n                      onClick={() => setView(ChartView.PRICE)}\r\n                    >\r\n                      Price\r\n                    </ToggleElementFree>\r\n                  </ToggleWrapper>\r\n                </RowBetween>\r\n                {view === ChartView.TVL ? (\r\n                  <LineChart\r\n                    data={formattedTvlData}\r\n                    color={backgroundColor}\r\n                    minHeight={340}\r\n                    value={latestValue}\r\n                    label={valueLabel}\r\n                    setValue={setLatestValue}\r\n                    setLabel={setValueLabel}\r\n                  />\r\n                ) : view === ChartView.VOL ? (\r\n                  <BarChart\r\n                    data={formattedVolumeData}\r\n                    color={backgroundColor}\r\n                    minHeight={340}\r\n                    value={latestValue}\r\n                    label={valueLabel}\r\n                    setValue={setLatestValue}\r\n                    setLabel={setValueLabel}\r\n                  />\r\n                ) : view === ChartView.PRICE ? (\r\n                  adjustedToCurrent ? (\r\n                    <CandleChart\r\n                      data={adjustedToCurrent}\r\n                      setValue={setLatestValue}\r\n                      setLabel={setValueLabel}\r\n                      color={backgroundColor}\r\n                    />\r\n                  ) : (\r\n                    <LocalLoader fill={false} />\r\n                  )\r\n                ) : null}\r\n                {/* <RowBetween width=\"100%\">\r\n                  <div> </div>\r\n                  <AutoRow gap=\"4px\" width=\"fit-content\">\r\n                    <SmallOptionButton\r\n                      active={timeWindow === TimeWindow.DAY}\r\n                      onClick={() => setTimeWindow(TimeWindow.DAY)}\r\n                    >\r\n                      24H\r\n                    </SmallOptionButton>\r\n                    <SmallOptionButton\r\n                      active={timeWindow === TimeWindow.WEEK}\r\n                      onClick={() => setTimeWindow(TimeWindow.WEEK)}\r\n                    >\r\n                      1W\r\n                    </SmallOptionButton>\r\n                    <SmallOptionButton\r\n                      active={timeWindow === TimeWindow.MONTH}\r\n                      onClick={() => setTimeWindow(TimeWindow.MONTH)}\r\n                    >\r\n                      1M\r\n                    </SmallOptionButton>\r\n                    <SmallOptionButton\r\n                      active={timeWindow === TimeWindow.DAY}\r\n                      onClick={() => setTimeWindow(TimeWindow.DAY)}\r\n                    >\r\n                      All\r\n                    </SmallOptionButton>\r\n                  </AutoRow>\r\n                </RowBetween> */}\r\n              </DarkGreyCard>\r\n            </ContentLayout>\r\n            <TYPE.main>Pools</TYPE.main>\r\n            <DarkGreyCard>\r\n              <PoolTable poolDatas={poolDatas} />\r\n            </DarkGreyCard>\r\n            <TYPE.main>Transactions</TYPE.main>\r\n            <DarkGreyCard>\r\n              {transactions ? (\r\n                <TransactionTable transactions={transactions} color={backgroundColor} />\r\n              ) : (\r\n                <LocalLoader fill={false} />\r\n              )}\r\n            </DarkGreyCard>\r\n          </AutoColumn>\r\n        )\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </PageWrapper>\r\n  )\r\n}\r\n","/**\r\n * Constanst for historical data fetching.\r\n *\r\n */\r\n\r\nimport { OpUnitType } from 'dayjs'\r\n\r\nexport const ONE_HOUR_SECONDS = 3600\r\n\r\nexport const TimeWindow: {\r\n  [key: string]: OpUnitType\r\n} = {\r\n  DAY: 'day',\r\n  WEEK: 'week',\r\n  MONTH: 'month',\r\n}\r\n","import React from 'react'\r\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\r\nimport TokenPage from './TokenPage'\r\nimport { isAddress } from 'ethers/lib/utils'\r\n\r\nexport function RedirectInvalidToken(props: RouteComponentProps<{ address: string }>) {\r\n  const {\r\n    match: {\r\n      params: { address },\r\n    },\r\n  } = props\r\n\r\n  if (!isAddress(address)) {\r\n    return <Redirect to={`/`} />\r\n  }\r\n  return <TokenPage {...props} />\r\n}\r\n","import gql from 'graphql-tag'\r\nimport { client } from 'apollo/client'\r\nimport JSBI from 'jsbi'\r\nimport keyBy from 'lodash.keyby'\r\nimport { TickMath, tickToPrice } from '@uniswap/v3-sdk'\r\nimport { Token } from '@uniswap/sdk-core'\r\n\r\nconst PRICE_FIXED_DIGITS = 4\r\nconst DEFAULT_SURROUNDING_TICKS = 300\r\nconst FEE_TIER_TO_TICK_SPACING = (feeTier: string): number => {\r\n  switch (feeTier) {\r\n    case '10000':\r\n      return 200\r\n    case '3000':\r\n      return 60\r\n    case '500':\r\n      return 10\r\n    default:\r\n      throw Error(`Tick spacing for fee tier ${feeTier} undefined.`)\r\n  }\r\n}\r\n\r\ninterface TickPool {\r\n  tick: string\r\n  feeTier: string\r\n  token0: {\r\n    symbol: string\r\n    id: string\r\n    decimals: string\r\n  }\r\n  token1: {\r\n    symbol: string\r\n    id: string\r\n    decimals: string\r\n  }\r\n  sqrtPrice: string\r\n  liquidity: string\r\n}\r\n\r\ninterface PoolResult {\r\n  pool: TickPool\r\n}\r\n\r\n// Raw tick returned from GQL\r\ninterface Tick {\r\n  tickIdx: string\r\n  liquidityGross: string\r\n  liquidityNet: string\r\n  price0: string\r\n  price1: string\r\n}\r\n\r\ninterface SurroundingTicksResult {\r\n  ticks: Tick[]\r\n}\r\n\r\n// Tick with fields parsed to JSBIs, and active liquidity computed.\r\nexport interface TickProcessed {\r\n  liquidityGross: JSBI\r\n  liquidityNet: JSBI\r\n  tickIdx: number\r\n  liquidityActive: JSBI\r\n  price0: string\r\n  price1: string\r\n}\r\n\r\nconst fetchInitializedTicks = async (\r\n  poolAddress: string,\r\n  tickIdxLowerBound: number,\r\n  tickIdxUpperBound: number\r\n): Promise<{ loading?: boolean; error?: boolean; ticks?: Tick[] }> => {\r\n  const tickQuery = gql`\r\n    query surroundingTicks(\r\n      $poolAddress: String!\r\n      $tickIdxLowerBound: BigInt!\r\n      $tickIdxUpperBound: BigInt!\r\n      $skip: Int!\r\n    ) {\r\n      ticks(\r\n        first: 1000\r\n        skip: $skip\r\n        where: { poolAddress: $poolAddress, tickIdx_lte: $tickIdxUpperBound, tickIdx_gte: $tickIdxLowerBound }\r\n      ) {\r\n        tickIdx\r\n        liquidityGross\r\n        liquidityNet\r\n        price0\r\n        price1\r\n      }\r\n    }\r\n  `\r\n\r\n  let surroundingTicks: Tick[] = []\r\n  let surroundingTicksResult: Tick[] = []\r\n  let skip = 0\r\n  do {\r\n    const { data, error, loading } = await client.query<SurroundingTicksResult>({\r\n      query: tickQuery,\r\n      fetchPolicy: 'network-only',\r\n      variables: {\r\n        poolAddress,\r\n        tickIdxLowerBound,\r\n        tickIdxUpperBound,\r\n        skip,\r\n      },\r\n    })\r\n\r\n    // console.log({ data, error, loading }, 'Result. Skip: ' + skip)\r\n\r\n    if (loading) {\r\n      continue\r\n    }\r\n\r\n    if (error) {\r\n      return { error: Boolean(error), loading, ticks: surroundingTicksResult }\r\n    }\r\n\r\n    surroundingTicks = data.ticks\r\n    surroundingTicksResult = surroundingTicksResult.concat(surroundingTicks)\r\n    skip += 1000\r\n  } while (surroundingTicks.length > 0)\r\n\r\n  return { ticks: surroundingTicksResult, loading: false, error: false }\r\n}\r\n\r\nexport interface PoolTickData {\r\n  ticksProcessed: TickProcessed[]\r\n  feeTier: string\r\n  tickSpacing: number\r\n  activeTickIdx: number\r\n}\r\n\r\nconst poolQuery = gql`\r\n  query pool($poolAddress: String!) {\r\n    pool(id: $poolAddress) {\r\n      tick\r\n      token0 {\r\n        symbol\r\n        id\r\n        decimals\r\n      }\r\n      token1 {\r\n        symbol\r\n        id\r\n        decimals\r\n      }\r\n      feeTier\r\n      sqrtPrice\r\n      liquidity\r\n    }\r\n  }\r\n`\r\n\r\nexport const fetchTicksSurroundingPrice = async (\r\n  poolAddress: string,\r\n  numSurroundingTicks = DEFAULT_SURROUNDING_TICKS\r\n): Promise<{\r\n  loading?: boolean\r\n  error?: boolean\r\n  data?: PoolTickData\r\n}> => {\r\n  const { data: poolResult, error, loading } = await client.query<PoolResult>({\r\n    query: poolQuery,\r\n    variables: {\r\n      poolAddress,\r\n    },\r\n  })\r\n\r\n  if (loading || error || !poolResult) {\r\n    return {\r\n      loading,\r\n      error: Boolean(error),\r\n      data: undefined,\r\n    }\r\n  }\r\n\r\n  const {\r\n    pool: {\r\n      tick: poolCurrentTick,\r\n      feeTier,\r\n      liquidity,\r\n      token0: { id: token0Address, decimals: token0Decimals },\r\n      token1: { id: token1Address, decimals: token1Decimals },\r\n    },\r\n  } = poolResult\r\n\r\n  const poolCurrentTickIdx = parseInt(poolCurrentTick)\r\n  const tickSpacing = FEE_TIER_TO_TICK_SPACING(feeTier)\r\n\r\n  // The pools current tick isn't necessarily a tick that can actually be initialized.\r\n  // Find the nearest valid tick given the tick spacing.\r\n  const activeTickIdx = Math.floor(poolCurrentTickIdx / tickSpacing) * tickSpacing\r\n\r\n  // Our search bounds must take into account fee spacing. i.e. for fee tier 1%, only\r\n  // ticks with index 200, 400, 600, etc can be active.\r\n  const tickIdxLowerBound = activeTickIdx - numSurroundingTicks * tickSpacing\r\n  const tickIdxUpperBound = activeTickIdx + numSurroundingTicks * tickSpacing\r\n\r\n  const initializedTicksResult = await fetchInitializedTicks(poolAddress, tickIdxLowerBound, tickIdxUpperBound)\r\n  if (initializedTicksResult.error || initializedTicksResult.loading) {\r\n    return {\r\n      error: initializedTicksResult.error,\r\n      loading: initializedTicksResult.loading,\r\n    }\r\n  }\r\n\r\n  const { ticks: initializedTicks } = initializedTicksResult\r\n\r\n  const tickIdxToInitializedTick = keyBy(initializedTicks, 'tickIdx')\r\n\r\n  const token0 = new Token(1, token0Address, parseInt(token0Decimals))\r\n  const token1 = new Token(1, token1Address, parseInt(token1Decimals))\r\n\r\n  // console.log({ activeTickIdx, poolCurrentTickIdx }, 'Active ticks')\r\n\r\n  // If the pool's tick is MIN_TICK (-887272), then when we find the closest\r\n  // initializable tick to its left, the value would be smaller than MIN_TICK.\r\n  // In this case we must ensure that the prices shown never go below/above.\r\n  // what actual possible from the protocol.\r\n  let activeTickIdxForPrice = activeTickIdx\r\n  if (activeTickIdxForPrice < TickMath.MIN_TICK) {\r\n    activeTickIdxForPrice = TickMath.MIN_TICK\r\n  }\r\n  if (activeTickIdxForPrice > TickMath.MAX_TICK) {\r\n    activeTickIdxForPrice = TickMath.MAX_TICK\r\n  }\r\n\r\n  const activeTickProcessed: TickProcessed = {\r\n    liquidityActive: JSBI.BigInt(liquidity),\r\n    tickIdx: activeTickIdx,\r\n    liquidityNet: JSBI.BigInt(0),\r\n    price0: tickToPrice(token0, token1, activeTickIdxForPrice).toFixed(PRICE_FIXED_DIGITS),\r\n    price1: tickToPrice(token1, token0, activeTickIdxForPrice).toFixed(PRICE_FIXED_DIGITS),\r\n    liquidityGross: JSBI.BigInt(0),\r\n  }\r\n\r\n  // If our active tick happens to be initialized (i.e. there is a position that starts or\r\n  // ends at that tick), ensure we set the gross and net.\r\n  // correctly.\r\n  const activeTick = tickIdxToInitializedTick[activeTickIdx]\r\n  if (activeTick) {\r\n    activeTickProcessed.liquidityGross = JSBI.BigInt(activeTick.liquidityGross)\r\n    activeTickProcessed.liquidityNet = JSBI.BigInt(activeTick.liquidityNet)\r\n  }\r\n\r\n  enum Direction {\r\n    ASC,\r\n    DESC,\r\n  }\r\n\r\n  // Computes the numSurroundingTicks above or below the active tick.\r\n  const computeSurroundingTicks = (\r\n    activeTickProcessed: TickProcessed,\r\n    tickSpacing: number,\r\n    numSurroundingTicks: number,\r\n    direction: Direction\r\n  ) => {\r\n    let previousTickProcessed: TickProcessed = {\r\n      ...activeTickProcessed,\r\n    }\r\n\r\n    // Iterate outwards (either up or down depending on 'Direction') from the active tick,\r\n    // building active liquidity for every tick.\r\n    let processedTicks: TickProcessed[] = []\r\n    for (let i = 0; i < numSurroundingTicks; i++) {\r\n      const currentTickIdx =\r\n        direction == Direction.ASC\r\n          ? previousTickProcessed.tickIdx + tickSpacing\r\n          : previousTickProcessed.tickIdx - tickSpacing\r\n\r\n      if (currentTickIdx < TickMath.MIN_TICK || currentTickIdx > TickMath.MAX_TICK) {\r\n        break\r\n      }\r\n\r\n      const currentTickProcessed: TickProcessed = {\r\n        liquidityActive: previousTickProcessed.liquidityActive,\r\n        tickIdx: currentTickIdx,\r\n        liquidityNet: JSBI.BigInt(0),\r\n        price0: tickToPrice(token0, token1, currentTickIdx).toFixed(PRICE_FIXED_DIGITS),\r\n        price1: tickToPrice(token1, token0, currentTickIdx).toFixed(PRICE_FIXED_DIGITS),\r\n        liquidityGross: JSBI.BigInt(0),\r\n      }\r\n\r\n      // Check if there is an initialized tick at our current tick.\r\n      // If so copy the gross and net liquidity from the initialized tick.\r\n      const currentInitializedTick = tickIdxToInitializedTick[currentTickIdx.toString()]\r\n      if (currentInitializedTick) {\r\n        currentTickProcessed.liquidityGross = JSBI.BigInt(currentInitializedTick.liquidityGross)\r\n        currentTickProcessed.liquidityNet = JSBI.BigInt(currentInitializedTick.liquidityNet)\r\n      }\r\n\r\n      // Update the active liquidity.\r\n      // If we are iterating ascending and we found an initialized tick we immediately apply\r\n      // it to the current processed tick we are building.\r\n      // If we are iterating descending, we don't want to apply the net liquidity until the following tick.\r\n      if (direction == Direction.ASC && currentInitializedTick) {\r\n        currentTickProcessed.liquidityActive = JSBI.add(\r\n          previousTickProcessed.liquidityActive,\r\n          JSBI.BigInt(currentInitializedTick.liquidityNet)\r\n        )\r\n      } else if (direction == Direction.DESC && JSBI.notEqual(previousTickProcessed.liquidityNet, JSBI.BigInt(0))) {\r\n        // We are iterating descending, so look at the previous tick and apply any net liquidity.\r\n        currentTickProcessed.liquidityActive = JSBI.subtract(\r\n          previousTickProcessed.liquidityActive,\r\n          previousTickProcessed.liquidityNet\r\n        )\r\n      }\r\n\r\n      processedTicks.push(currentTickProcessed)\r\n      previousTickProcessed = currentTickProcessed\r\n    }\r\n\r\n    if (direction == Direction.DESC) {\r\n      processedTicks = processedTicks.reverse()\r\n    }\r\n\r\n    return processedTicks\r\n  }\r\n\r\n  const subsequentTicks: TickProcessed[] = computeSurroundingTicks(\r\n    activeTickProcessed,\r\n    tickSpacing,\r\n    numSurroundingTicks,\r\n    Direction.ASC\r\n  )\r\n\r\n  const previousTicks: TickProcessed[] = computeSurroundingTicks(\r\n    activeTickProcessed,\r\n    tickSpacing,\r\n    numSurroundingTicks,\r\n    Direction.DESC\r\n  )\r\n\r\n  const ticksProcessed = previousTicks.concat(activeTickProcessed).concat(subsequentTicks)\r\n\r\n  return {\r\n    data: {\r\n      ticksProcessed,\r\n      feeTier,\r\n      tickSpacing,\r\n      activeTickIdx,\r\n    },\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { ChartEntry } from './index'\r\nimport { PoolData } from 'state/pools/reducer'\r\nimport useTheme from 'hooks/useTheme'\r\nimport styled from 'styled-components'\r\nimport { AutoColumn } from 'components/Column'\r\nimport { RowFixed } from 'components/Row'\r\nimport { TYPE } from 'theme'\r\n\r\nconst Wrapper = styled.div`\r\n  border-radius: 8px;\r\n  padding: 6px 12px;\r\n  color: white;\r\n  width: fit-content;\r\n  font-size: 14px;\r\n  background-color: ${({ theme }) => theme.bg2};\r\n`\r\n\r\ninterface LabelProps {\r\n  x: number\r\n  y: number\r\n  index: number\r\n}\r\n\r\ninterface CurrentPriceLabelProps {\r\n  data: ChartEntry[] | undefined\r\n  chartProps: any\r\n  poolData: PoolData\r\n}\r\n\r\nexport function CurrentPriceLabel({ data, chartProps, poolData }: CurrentPriceLabelProps) {\r\n  const theme = useTheme()\r\n  const labelData = chartProps as LabelProps\r\n  const entryData = data?.[labelData.index]\r\n  if (entryData?.isCurrent) {\r\n    const price0 = entryData.price0\r\n    const price1 = entryData.price1\r\n    return (\r\n      <g>\r\n        <foreignObject x={labelData.x - 80} y={318} width={'100%'} height={100}>\r\n          <Wrapper>\r\n            <AutoColumn gap=\"6px\">\r\n              <RowFixed align=\"center\">\r\n                <TYPE.main mr=\"6px\">Current Price</TYPE.main>\r\n                <div\r\n                  style={{\r\n                    marginTop: '2px',\r\n                    height: '6px',\r\n                    width: '6px',\r\n                    borderRadius: '50%',\r\n                    backgroundColor: theme.pink1,\r\n                  }}\r\n                ></div>\r\n              </RowFixed>\r\n              <TYPE.label>{`1 ${poolData.token0.symbol} = ${Number(price0).toLocaleString(undefined, {\r\n                minimumSignificantDigits: 1,\r\n              })} ${poolData.token1.symbol}`}</TYPE.label>\r\n              <TYPE.label>{`1 ${poolData.token1.symbol} = ${Number(price1).toLocaleString(undefined, {\r\n                minimumSignificantDigits: 1,\r\n              })} ${poolData.token0.symbol}`}</TYPE.label>\r\n            </AutoColumn>\r\n          </Wrapper>\r\n        </foreignObject>\r\n      </g>\r\n    )\r\n  }\r\n  return null\r\n}\r\n","import React from 'react'\r\nimport { PoolData } from 'state/pools/reducer'\r\nimport styled from 'styled-components'\r\nimport { LightCard } from 'components/Card'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { AutoColumn } from 'components/Column'\r\nimport { TYPE } from 'theme'\r\nimport { RowBetween } from 'components/Row'\r\nimport { formatAmount } from 'utils/numbers'\r\n\r\nconst TooltipWrapper = styled(LightCard)`\r\n  padding: 12px;\r\n  width: 320px;\r\n  opacity: 0.6;\r\n  font-size: 12px;\r\n  z-index: 10;\r\n`\r\n\r\ninterface CustomToolTipProps {\r\n  chartProps: any\r\n  poolData: PoolData\r\n  currentPrice: number | undefined\r\n}\r\n\r\nexport function CustomToolTip({ chartProps, poolData, currentPrice }: CustomToolTipProps) {\r\n  const theme = useTheme()\r\n  const price0 = chartProps?.payload?.[0]?.payload.price0\r\n  const price1 = chartProps?.payload?.[0]?.payload.price1\r\n  const tvlToken0 = chartProps?.payload?.[0]?.payload.tvlToken0\r\n  const tvlToken1 = chartProps?.payload?.[0]?.payload.tvlToken1\r\n\r\n  return (\r\n    <TooltipWrapper>\r\n      <AutoColumn gap=\"sm\">\r\n        <TYPE.main color={theme.text3}>Tick stats</TYPE.main>\r\n        <RowBetween>\r\n          <TYPE.label>{poolData?.token0?.symbol} Price: </TYPE.label>\r\n          <TYPE.label>\r\n            {price0\r\n              ? Number(price0).toLocaleString(undefined, {\r\n                  minimumSignificantDigits: 1,\r\n                })\r\n              : ''}{' '}\r\n            {poolData?.token1?.symbol}\r\n          </TYPE.label>\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <TYPE.label>{poolData?.token1?.symbol} Price: </TYPE.label>\r\n          <TYPE.label>\r\n            {price1\r\n              ? Number(price1).toLocaleString(undefined, {\r\n                  minimumSignificantDigits: 1,\r\n                })\r\n              : ''}{' '}\r\n            {poolData?.token0?.symbol}\r\n          </TYPE.label>\r\n        </RowBetween>\r\n        {currentPrice && price0 && currentPrice > price1 ? (\r\n          <RowBetween>\r\n            <TYPE.label>{poolData?.token0?.symbol} Locked: </TYPE.label>\r\n            <TYPE.label>\r\n              {tvlToken0 ? formatAmount(tvlToken0) : ''} {poolData?.token0?.symbol}\r\n            </TYPE.label>\r\n          </RowBetween>\r\n        ) : (\r\n          <RowBetween>\r\n            <TYPE.label>{poolData?.token1?.symbol} Locked: </TYPE.label>\r\n            <TYPE.label>\r\n              {tvlToken1 ? formatAmount(tvlToken1) : ''} {poolData?.token1?.symbol}\r\n            </TYPE.label>\r\n          </RowBetween>\r\n        )}\r\n      </AutoColumn>\r\n    </TooltipWrapper>\r\n  )\r\n}\r\n\r\nexport default CustomToolTip\r\n","import { fetchTicksSurroundingPrice, TickProcessed } from 'data/pools/tickData'\r\nimport React, { useEffect, useMemo, useState, useCallback } from 'react'\r\nimport { BarChart, Bar, LabelList, XAxis, Tooltip, ResponsiveContainer, Cell } from 'recharts'\r\nimport Loader from 'components/Loader'\r\nimport styled from 'styled-components'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { usePoolDatas, usePoolTickData } from 'state/pools/hooks'\r\nimport { MAX_UINT128 } from '../../constants/index'\r\nimport { isAddress } from 'utils'\r\nimport { Pool, TickMath, TICK_SPACINGS, FeeAmount } from '@uniswap/v3-sdk'\r\nimport { PoolData } from 'state/pools/reducer'\r\nimport { CurrentPriceLabel } from './CurrentPriceLabel'\r\nimport CustomToolTip from './CustomToolTip'\r\nimport { Token, CurrencyAmount } from '@uniswap/sdk-core'\r\nimport JSBI from 'jsbi'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 400px;\r\n`\r\n\r\nconst ControlsWrapper = styled.div`\r\n  position: absolute;\r\n  right: 40px;\r\n  bottom: 100px;\r\n  padding: 4px;\r\n  border-radius: 8px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-column-gap: 6px;\r\n`\r\n\r\nconst ActionButton = styled.div<{ disabled?: boolean }>`\r\n  width: 32x;\r\n  border-radius: 50%;\r\n  background-color: black;\r\n  padding: 4px 8px;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  align-items: center;\r\n  opacity: ${({ disabled }) => (disabled ? 0.4 : 0.9)};\r\n  background-color: ${({ theme, disabled }) => (disabled ? theme.bg3 : theme.bg2)};\r\n  user-select: none;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: 0.4;\r\n  }\r\n`\r\n\r\ninterface DensityChartProps {\r\n  address: string\r\n}\r\n\r\nexport interface ChartEntry {\r\n  index: number\r\n  isCurrent: boolean\r\n  activeLiquidity: number\r\n  price0: number\r\n  price1: number\r\n  tvlToken0: number\r\n  tvlToken1: number\r\n}\r\n\r\ninterface ZoomStateProps {\r\n  left: number\r\n  right: number\r\n  refAreaLeft: string | number\r\n  refAreaRight: string | number\r\n}\r\n\r\nconst INITIAL_TICKS_TO_FETCH = 200\r\nconst ZOOM_INTERVAL = 20\r\n\r\nconst initialState = {\r\n  left: 0,\r\n  right: INITIAL_TICKS_TO_FETCH * 2 + 1,\r\n  refAreaLeft: '',\r\n  refAreaRight: '',\r\n}\r\n\r\nexport default function DensityChart({ address }: DensityChartProps) {\r\n  const theme = useTheme()\r\n\r\n  // poolData\r\n  const poolData: PoolData = usePoolDatas([address])[0]\r\n  const formattedAddress0 = isAddress(poolData.token0.address)\r\n  const formattedAddress1 = isAddress(poolData.token1.address)\r\n  const feeTier = poolData?.feeTier\r\n\r\n  // parsed tokens\r\n  const token0 = useMemo(() => {\r\n    return poolData && formattedAddress0 && formattedAddress1\r\n      ? new Token(1, formattedAddress0, poolData.token0.decimals)\r\n      : undefined\r\n  }, [formattedAddress0, formattedAddress1, poolData])\r\n  const token1 = useMemo(() => {\r\n    return poolData && formattedAddress1 && formattedAddress1\r\n      ? new Token(1, formattedAddress1, poolData.token1.decimals)\r\n      : undefined\r\n  }, [formattedAddress1, poolData])\r\n\r\n  // tick data tracking\r\n  const [poolTickData, updatePoolTickData] = usePoolTickData(address)\r\n  const [ticksToFetch, setTicksToFetch] = useState(INITIAL_TICKS_TO_FETCH)\r\n  const amountTicks = ticksToFetch * 2 + 1\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [zoomState, setZoomState] = useState<ZoomStateProps>(initialState)\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      const { data } = await fetchTicksSurroundingPrice(address, ticksToFetch)\r\n      if (data) {\r\n        updatePoolTickData(address, data)\r\n      }\r\n    }\r\n    if (!poolTickData || (poolTickData && poolTickData.ticksProcessed.length < amountTicks)) {\r\n      fetch()\r\n    }\r\n  }, [address, poolTickData, updatePoolTickData, ticksToFetch, amountTicks])\r\n\r\n  const [formattedData, setFormattedData] = useState<ChartEntry[] | undefined>()\r\n  useEffect(() => {\r\n    async function formatData() {\r\n      if (poolTickData) {\r\n        const newData = await Promise.all(\r\n          poolTickData.ticksProcessed.map(async (t: TickProcessed, i) => {\r\n            const active = t.tickIdx === poolTickData.activeTickIdx\r\n            const sqrtPriceX96 = TickMath.getSqrtRatioAtTick(t.tickIdx)\r\n            const feeAmount: FeeAmount = poolData.feeTier\r\n            const mockTicks = [\r\n              {\r\n                index: t.tickIdx - TICK_SPACINGS[feeAmount],\r\n                liquidityGross: t.liquidityGross,\r\n                liquidityNet: JSBI.multiply(t.liquidityNet, JSBI.BigInt('-1')),\r\n              },\r\n              {\r\n                index: t.tickIdx,\r\n                liquidityGross: t.liquidityGross,\r\n                liquidityNet: t.liquidityNet,\r\n              },\r\n            ]\r\n            const pool =\r\n              token0 && token1 && feeTier\r\n                ? new Pool(token0, token1, feeTier, sqrtPriceX96, t.liquidityActive, t.tickIdx, mockTicks)\r\n                : undefined\r\n            const nextSqrtX96 = poolTickData.ticksProcessed[i - 1]\r\n              ? TickMath.getSqrtRatioAtTick(poolTickData.ticksProcessed[i - 1].tickIdx)\r\n              : undefined\r\n            const maxAmountToken0 = token0 ? CurrencyAmount.fromRawAmount(token0, MAX_UINT128.toString()) : undefined\r\n            const outputRes0 =\r\n              pool && maxAmountToken0 ? await pool.getOutputAmount(maxAmountToken0, nextSqrtX96) : undefined\r\n\r\n            const token1Amount = outputRes0?.[0] as CurrencyAmount<Token> | undefined\r\n\r\n            const amount0 = token1Amount ? parseFloat(token1Amount.toExact()) * parseFloat(t.price1) : 0\r\n            const amount1 = token1Amount ? parseFloat(token1Amount.toExact()) : 0\r\n\r\n            return {\r\n              index: i,\r\n              isCurrent: active,\r\n              activeLiquidity: parseFloat(t.liquidityActive.toString()),\r\n              price0: parseFloat(t.price0),\r\n              price1: parseFloat(t.price1),\r\n              tvlToken0: amount0,\r\n              tvlToken1: amount1,\r\n            }\r\n          })\r\n        )\r\n        // offset the values to line off bars with TVL used to swap across bar\r\n        newData?.map((entry, i) => {\r\n          if (i > 0) {\r\n            newData[i - 1].tvlToken0 = entry.tvlToken0\r\n            newData[i - 1].tvlToken1 = entry.tvlToken1\r\n          }\r\n        })\r\n\r\n        if (newData) {\r\n          if (loading) {\r\n            setLoading(false)\r\n          }\r\n          setFormattedData(newData)\r\n        }\r\n        return\r\n      } else {\r\n        return []\r\n      }\r\n    }\r\n    if (!formattedData) {\r\n      formatData()\r\n    }\r\n  }, [feeTier, formattedData, loading, poolData.feeTier, poolTickData, token0, token1])\r\n\r\n  const atZoomMax = zoomState.left + ZOOM_INTERVAL >= zoomState.right - ZOOM_INTERVAL - 1\r\n  const atZoomMin = zoomState.left - ZOOM_INTERVAL < 0\r\n\r\n  const handleZoomIn = useCallback(() => {\r\n    !atZoomMax &&\r\n      setZoomState({\r\n        ...zoomState,\r\n        left: zoomState.left + ZOOM_INTERVAL,\r\n        right: zoomState.right - ZOOM_INTERVAL,\r\n      })\r\n  }, [zoomState, atZoomMax])\r\n\r\n  const handleZoomOut = useCallback(() => {\r\n    if (atZoomMin) {\r\n      setLoading(true)\r\n      setTicksToFetch(ticksToFetch + ZOOM_INTERVAL)\r\n      setFormattedData(undefined)\r\n      setZoomState({\r\n        ...zoomState,\r\n        left: 0,\r\n        right: amountTicks,\r\n      })\r\n    } else {\r\n      setZoomState({\r\n        ...zoomState,\r\n        left: zoomState.left - ZOOM_INTERVAL,\r\n        right: zoomState.right + ZOOM_INTERVAL,\r\n      })\r\n    }\r\n  }, [amountTicks, atZoomMin, ticksToFetch, zoomState])\r\n\r\n  const zoomedData = useMemo(() => {\r\n    if (formattedData) {\r\n      return formattedData.slice(zoomState.left, zoomState.right)\r\n    }\r\n    return undefined\r\n  }, [formattedData, zoomState.left, zoomState.right])\r\n\r\n  // reset data on address change\r\n  useEffect(() => {\r\n    setFormattedData(undefined)\r\n  }, [address])\r\n\r\n  if (!poolTickData) {\r\n    return <Loader />\r\n  }\r\n\r\n  const CustomBar = ({\r\n    x,\r\n    y,\r\n    width,\r\n    height,\r\n    fill,\r\n  }: {\r\n    x: number\r\n    y: number\r\n    width: number\r\n    height: number\r\n    fill: string\r\n  }) => {\r\n    return (\r\n      <g>\r\n        <rect x={x} y={y} fill={fill} width={width} height={height} rx=\"2\" />\r\n      </g>\r\n    )\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      {!loading ? (\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <BarChart\r\n            width={500}\r\n            height={300}\r\n            data={zoomedData}\r\n            margin={{\r\n              top: 5,\r\n              right: 30,\r\n              left: 20,\r\n              bottom: 60,\r\n            }}\r\n          >\r\n            <Tooltip\r\n              content={(props) => (\r\n                <CustomToolTip chartProps={props} poolData={poolData} currentPrice={poolData.token0Price} />\r\n              )}\r\n            />\r\n            <XAxis reversed={true} tick={false} />\r\n            <Bar\r\n              dataKey=\"activeLiquidity\"\r\n              fill=\"#2172E5\"\r\n              isAnimationActive={false}\r\n              shape={(props) => {\r\n                // eslint-disable-next-line react/prop-types\r\n                return <CustomBar height={props.height} width={props.width} x={props.x} y={props.y} fill={props.fill} />\r\n              }}\r\n            >\r\n              {zoomedData?.map((entry, index) => {\r\n                return <Cell key={`cell-${index}`} fill={entry.isCurrent ? theme.pink1 : theme.blue1} />\r\n              })}\r\n              <LabelList\r\n                dataKey=\"activeLiquidity\"\r\n                position=\"inside\"\r\n                content={(props) => <CurrentPriceLabel chartProps={props} poolData={poolData} data={zoomedData} />}\r\n              />\r\n            </Bar>\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n      <ControlsWrapper>\r\n        <ActionButton disabled={false} onClick={handleZoomOut}>\r\n          -\r\n        </ActionButton>\r\n        <ActionButton disabled={atZoomMax} onClick={handleZoomIn}>\r\n          +\r\n        </ActionButton>\r\n      </ControlsWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React, { useMemo, useState, useEffect } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { useColor } from 'hooks/useColor'\r\nimport { ThemedBackground, PageWrapper } from 'pages/styled'\r\nimport { feeTierPercent, getEtherscanLink } from 'utils'\r\nimport { AutoColumn } from 'components/Column'\r\nimport { RowBetween, RowFixed, AutoRow } from 'components/Row'\r\nimport { TYPE, StyledInternalLink } from 'theme'\r\nimport Loader, { LocalLoader } from 'components/Loader'\r\nimport { ExternalLink, Download } from 'react-feather'\r\nimport { ExternalLink as StyledExternalLink } from '../../theme/components'\r\nimport useTheme from 'hooks/useTheme'\r\nimport CurrencyLogo from 'components/CurrencyLogo'\r\nimport { formatDollarAmount, formatAmount } from 'utils/numbers'\r\nimport Percent from 'components/Percent'\r\nimport { ButtonPrimary, ButtonGray, SavedIcon } from 'components/Button'\r\nimport { DarkGreyCard, GreyCard, GreyBadge } from 'components/Card'\r\nimport { usePoolDatas, usePoolChartData, usePoolTransactions } from 'state/pools/hooks'\r\nimport LineChart from 'components/LineChart/alt'\r\nimport { unixToDate } from 'utils/date'\r\nimport { ToggleWrapper, ToggleElementFree } from 'components/Toggle/index'\r\nimport BarChart from 'components/BarChart/alt'\r\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\r\nimport TransactionTable from 'components/TransactionsTable'\r\nimport { useSavedPools } from 'state/user/hooks'\r\nimport DensityChart from 'components/DensityChart'\r\nimport { MonoSpace } from 'components/shared'\r\n\r\nconst ContentLayout = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 300px 1fr;\r\n  grid-gap: 1em;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 1fr 1fr;\r\n  }\r\n`\r\n\r\nconst TokenButton = styled(GreyCard)`\r\n  padding: 8px 12px;\r\n  border-radius: 10px;\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n`\r\n\r\nconst ResponsiveRow = styled(RowBetween)`\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    row-gap: 24px;\r\n    width: 100%:\r\n  `};\r\n`\r\n\r\nenum ChartView {\r\n  TVL,\r\n  VOL,\r\n  PRICE,\r\n  DENSITY,\r\n}\r\n\r\nexport default function PoolPage({\r\n  match: {\r\n    params: { address },\r\n  },\r\n}: RouteComponentProps<{ address: string }>) {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  // theming\r\n  const backgroundColor = useColor(address)\r\n  const theme = useTheme()\r\n\r\n  // token data\r\n  const poolData = usePoolDatas([address])[0]\r\n  const chartData = usePoolChartData(address)\r\n  const transactions = usePoolTransactions(address)\r\n\r\n  const [view, setView] = useState(ChartView.VOL)\r\n  const [latestValue, setLatestValue] = useState<number | undefined>()\r\n  const [valueLabel, setValueLabel] = useState<string | undefined>()\r\n\r\n  const formattedTvlData = useMemo(() => {\r\n    if (chartData) {\r\n      return chartData.map((day) => {\r\n        return {\r\n          time: unixToDate(day.date),\r\n          value: day.totalValueLockedUSD,\r\n        }\r\n      })\r\n    } else {\r\n      return []\r\n    }\r\n  }, [chartData])\r\n\r\n  const formattedVolumeData = useMemo(() => {\r\n    if (chartData) {\r\n      return chartData.map((day) => {\r\n        return {\r\n          time: unixToDate(day.date),\r\n          value: day.volumeUSD,\r\n        }\r\n      })\r\n    } else {\r\n      return []\r\n    }\r\n  }, [chartData])\r\n\r\n  //watchlist\r\n  const [savedPools, addSavedPool] = useSavedPools()\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <ThemedBackground backgroundColor={backgroundColor} />\r\n      {poolData ? (\r\n        <AutoColumn gap=\"32px\">\r\n          <RowBetween>\r\n            <AutoRow gap=\"4px\">\r\n              <StyledInternalLink to=\"/\">\r\n                <TYPE.main>{`Home > `}</TYPE.main>\r\n              </StyledInternalLink>\r\n              <StyledInternalLink to=\"/pools\">\r\n                <TYPE.label>{` Pools `}</TYPE.label>\r\n              </StyledInternalLink>\r\n              <TYPE.main>{` > `}</TYPE.main>\r\n              <TYPE.label>{` ${poolData.token0.symbol} / ${poolData.token1.symbol} ${feeTierPercent(\r\n                poolData.feeTier\r\n              )} `}</TYPE.label>\r\n            </AutoRow>\r\n            <RowFixed gap=\"10px\" align=\"center\">\r\n              <SavedIcon fill={savedPools.includes(address)} onClick={() => addSavedPool(address)} />\r\n              <StyledExternalLink href={getEtherscanLink(1, address, 'address')}>\r\n                <ExternalLink stroke={theme.text2} size={'17px'} style={{ marginLeft: '12px' }} />\r\n              </StyledExternalLink>\r\n            </RowFixed>\r\n          </RowBetween>\r\n          <ResponsiveRow align=\"flex-end\">\r\n            <AutoColumn gap=\"lg\">\r\n              <RowFixed gap=\"4px\">\r\n                <DoubleCurrencyLogo address0={poolData.token0.address} address1={poolData.token1.address} size={24} />\r\n                <TYPE.label\r\n                  ml=\"8px\"\r\n                  mr=\"8px\"\r\n                  fontSize=\"24px\"\r\n                >{` ${poolData.token0.symbol} / ${poolData.token1.symbol} `}</TYPE.label>\r\n                <GreyBadge>{feeTierPercent(poolData.feeTier)}</GreyBadge>\r\n              </RowFixed>\r\n              <ResponsiveRow>\r\n                <StyledInternalLink to={'/tokens/' + poolData.token0.address}>\r\n                  <TokenButton>\r\n                    <RowFixed>\r\n                      <CurrencyLogo address={poolData.token0.address} size={'20px'} />\r\n                      <TYPE.label fontSize=\"16px\" ml=\"4px\" style={{ whiteSpace: 'nowrap' }} width={'fit-content'}>\r\n                        {`1 ${poolData.token0.symbol} =  ${formatAmount(poolData.token1Price)} ${\r\n                          poolData.token1.symbol\r\n                        }`}\r\n                      </TYPE.label>\r\n                    </RowFixed>\r\n                  </TokenButton>\r\n                </StyledInternalLink>\r\n                <StyledInternalLink to={'/tokens/' + poolData.token1.address}>\r\n                  <TokenButton ml=\"10px\">\r\n                    <RowFixed>\r\n                      <CurrencyLogo address={poolData.token1.address} size={'20px'} />\r\n                      <TYPE.label fontSize=\"16px\" ml=\"4px\" style={{ whiteSpace: 'nowrap' }} width={'fit-content'}>\r\n                        {`1 ${poolData.token1.symbol} =  ${formatAmount(poolData.token0Price)} ${\r\n                          poolData.token0.symbol\r\n                        }`}\r\n                      </TYPE.label>\r\n                    </RowFixed>\r\n                  </TokenButton>\r\n                </StyledInternalLink>\r\n              </ResponsiveRow>\r\n            </AutoColumn>\r\n            <AutoColumn gap=\"lg\">\r\n              <RowFixed>\r\n                <StyledExternalLink\r\n                  href={`https://app.uniswap.org/#/add/${poolData.token0.address}/${poolData.token1.address}/${poolData.feeTier}`}\r\n                >\r\n                  <ButtonGray width=\"170px\" mr=\"12px\" style={{ height: '44px' }}>\r\n                    <RowBetween>\r\n                      <Download size={24} />\r\n                      <div style={{ display: 'flex', alignItems: 'center' }}>Add Liquidity</div>\r\n                    </RowBetween>\r\n                  </ButtonGray>\r\n                </StyledExternalLink>\r\n                <StyledExternalLink\r\n                  href={`https://app.uniswap.org/#/swap?inputCurrency=${poolData.token0.address}&outputCurrency=${poolData.token1.address}`}\r\n                >\r\n                  <ButtonPrimary width=\"100px\" style={{ height: '44px' }}>\r\n                    Trade\r\n                  </ButtonPrimary>\r\n                </StyledExternalLink>\r\n              </RowFixed>\r\n            </AutoColumn>\r\n          </ResponsiveRow>\r\n          <ContentLayout>\r\n            <DarkGreyCard>\r\n              <AutoColumn gap=\"lg\">\r\n                <GreyCard padding=\"16px\">\r\n                  <AutoColumn gap=\"md\">\r\n                    <TYPE.main>Total Tokens Locked</TYPE.main>\r\n                    <RowBetween>\r\n                      <RowFixed>\r\n                        <CurrencyLogo address={poolData.token0.address} size={'20px'} />\r\n                        <TYPE.label fontSize=\"14px\" ml=\"8px\">\r\n                          {poolData.token0.symbol}\r\n                        </TYPE.label>\r\n                      </RowFixed>\r\n                      <TYPE.label fontSize=\"14px\">{formatAmount(poolData.tvlToken0)}</TYPE.label>\r\n                    </RowBetween>\r\n                    <RowBetween>\r\n                      <RowFixed>\r\n                        <CurrencyLogo address={poolData.token1.address} size={'20px'} />\r\n                        <TYPE.label fontSize=\"14px\" ml=\"8px\">\r\n                          {poolData.token1.symbol}\r\n                        </TYPE.label>\r\n                      </RowFixed>\r\n                      <TYPE.label fontSize=\"14px\">{formatAmount(poolData.tvlToken1)}</TYPE.label>\r\n                    </RowBetween>\r\n                  </AutoColumn>\r\n                </GreyCard>\r\n                <AutoColumn gap=\"4px\">\r\n                  <TYPE.main fontWeight={400}>TVL</TYPE.main>\r\n                  <TYPE.label fontSize=\"24px\">{formatDollarAmount(poolData.tvlUSD)}</TYPE.label>\r\n                  <Percent value={poolData.tvlUSDChange} />\r\n                </AutoColumn>\r\n                <AutoColumn gap=\"4px\">\r\n                  <TYPE.main fontWeight={400}>Volume 24h</TYPE.main>\r\n                  <TYPE.label fontSize=\"24px\">{formatDollarAmount(poolData.volumeUSD)}</TYPE.label>\r\n                  <Percent value={poolData.volumeUSDChange} />\r\n                </AutoColumn>\r\n                <AutoColumn gap=\"4px\">\r\n                  <TYPE.main fontWeight={400}>24h Fees</TYPE.main>\r\n                  <TYPE.label fontSize=\"24px\">\r\n                    {formatDollarAmount(poolData.volumeUSD * (poolData.feeTier / 1000000))}\r\n                  </TYPE.label>\r\n                </AutoColumn>\r\n              </AutoColumn>\r\n            </DarkGreyCard>\r\n            <DarkGreyCard>\r\n              <RowBetween align=\"flex-start\">\r\n                <AutoColumn>\r\n                  <TYPE.label fontSize=\"24px\" height=\"30px\">\r\n                    <MonoSpace>\r\n                      {latestValue\r\n                        ? formatDollarAmount(latestValue)\r\n                        : view === ChartView.VOL\r\n                        ? formatDollarAmount(formattedVolumeData[formattedVolumeData.length - 1]?.value)\r\n                        : view === ChartView.DENSITY\r\n                        ? ''\r\n                        : formatDollarAmount(formattedTvlData[formattedTvlData.length - 1]?.value)}{' '}\r\n                    </MonoSpace>\r\n                  </TYPE.label>\r\n                  <TYPE.main height=\"20px\" fontSize=\"12px\">\r\n                    {valueLabel ? <MonoSpace>{valueLabel}</MonoSpace> : ''}\r\n                  </TYPE.main>\r\n                </AutoColumn>\r\n                <ToggleWrapper width=\"200px\">\r\n                  <ToggleElementFree\r\n                    isActive={view === ChartView.VOL}\r\n                    fontSize=\"12px\"\r\n                    onClick={() => (view === ChartView.VOL ? setView(ChartView.TVL) : setView(ChartView.VOL))}\r\n                  >\r\n                    Volume\r\n                  </ToggleElementFree>\r\n                  <ToggleElementFree\r\n                    isActive={view === ChartView.TVL}\r\n                    fontSize=\"12px\"\r\n                    onClick={() => (view === ChartView.TVL ? setView(ChartView.DENSITY) : setView(ChartView.TVL))}\r\n                  >\r\n                    TVL\r\n                  </ToggleElementFree>\r\n                  <ToggleElementFree\r\n                    isActive={view === ChartView.DENSITY}\r\n                    fontSize=\"12px\"\r\n                    onClick={() => (view === ChartView.DENSITY ? setView(ChartView.VOL) : setView(ChartView.DENSITY))}\r\n                  >\r\n                    Liquidity\r\n                  </ToggleElementFree>\r\n                </ToggleWrapper>\r\n              </RowBetween>\r\n              {view === ChartView.TVL ? (\r\n                <LineChart\r\n                  data={formattedTvlData}\r\n                  setLabel={setValueLabel}\r\n                  color={backgroundColor}\r\n                  minHeight={340}\r\n                  setValue={setLatestValue}\r\n                  value={latestValue}\r\n                  label={valueLabel}\r\n                />\r\n              ) : view === ChartView.VOL ? (\r\n                <BarChart\r\n                  data={formattedVolumeData}\r\n                  color={backgroundColor}\r\n                  minHeight={340}\r\n                  setValue={setLatestValue}\r\n                  setLabel={setValueLabel}\r\n                  value={latestValue}\r\n                  label={valueLabel}\r\n                />\r\n              ) : (\r\n                <DensityChart address={address} />\r\n              )}\r\n            </DarkGreyCard>\r\n          </ContentLayout>\r\n          <TYPE.main fontSize=\"24px\">Transactions</TYPE.main>\r\n          <DarkGreyCard>\r\n            {transactions ? <TransactionTable transactions={transactions} /> : <LocalLoader fill={false} />}\r\n          </DarkGreyCard>\r\n        </AutoColumn>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </PageWrapper>\r\n  )\r\n}\r\n","import React, { Suspense, useState, useEffect } from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport GoogleAnalyticsReporter from '../components/analytics/GoogleAnalyticsReporter'\r\nimport Header from '../components/Header'\r\nimport URLWarning from '../components/Header/URLWarning'\r\nimport Popups from '../components/Popups'\r\nimport DarkModeQueryParamReader from '../theme/DarkModeQueryParamReader'\r\nimport Home from './Home'\r\nimport Protocol from './Protocol'\r\nimport PoolsOverview from './Pool/PoolsOverview'\r\nimport TokensOverview from './Token/TokensOverview'\r\nimport TopBar from 'components/Header/TopBar'\r\nimport { RedirectInvalidToken } from './Token/redirects'\r\nimport { LocalLoader } from 'components/Loader'\r\nimport PoolPage from './Pool/PoolPage'\r\nimport { ExternalLink, HideMedium, TYPE } from 'theme'\r\nimport { useSubgraphStatus } from 'state/application/hooks'\r\nimport { DarkGreyCard } from 'components/Card'\r\n\r\nconst AppWrapper = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: flex-start;\r\n  overflow-x: hidden;\r\n  min-height: 100vh;\r\n`\r\n\r\nconst HeaderWrapper = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap}\r\n  width: 100%;\r\n  position: fixed;\r\n  justify-content: space-between;\r\n  z-index: 2;\r\n`\r\n\r\nconst BodyWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding-top: 40px;\r\n  margin-top: 100px;\r\n  align-items: center;\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  z-index: 10;\r\n\r\n  ${({ theme }) => theme.mediaWidth.upToSmall`\r\n    padding-top: 2rem;\r\n    margin-top: 100px;\r\n  `};\r\n\r\n  z-index: 1;\r\n\r\n  > * {\r\n    max-width: 1200px;\r\n  }\r\n`\r\n\r\nconst Marginer = styled.div`\r\n  margin-top: 5rem;\r\n`\r\n\r\nexport default function App() {\r\n  // pretend load buffer\r\n  const [loading, setLoading] = useState(true)\r\n  useEffect(() => {\r\n    setTimeout(() => setLoading(false), 1300)\r\n  }, [])\r\n\r\n  // subgraph health\r\n  const [subgraphStatus] = useSubgraphStatus()\r\n\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <Route component={GoogleAnalyticsReporter} />\r\n      <Route component={DarkModeQueryParamReader} />\r\n      {loading ? (\r\n        <LocalLoader fill={true} />\r\n      ) : subgraphStatus.available === false ? (\r\n        <AppWrapper>\r\n          <BodyWrapper>\r\n            <DarkGreyCard style={{ maxWidth: '340px' }}>\r\n              <TYPE.label>\r\n                The Graph network which provides data for this site is temporarily down. Check status{' '}\r\n                <ExternalLink href=\"https://api.thegraph.com/subgraphs/name/james485713/t3-subgraphs1\">\r\n                  here.\r\n                </ExternalLink>\r\n              </TYPE.label>\r\n            </DarkGreyCard>\r\n          </BodyWrapper>\r\n        </AppWrapper>\r\n      ) : (\r\n        <AppWrapper>\r\n          <URLWarning />\r\n          <HeaderWrapper>\r\n            <HideMedium>\r\n              <TopBar />\r\n            </HideMedium>\r\n            <Header />\r\n          </HeaderWrapper>\r\n          <BodyWrapper>\r\n            <Popups />\r\n            <Switch>\r\n              <Route exact strict path=\"/\" component={Home} />\r\n              <Route exact strict path=\"/protocol\" component={Protocol} />\r\n              <Route exact strict path=\"/pools\" component={PoolsOverview} />\r\n              <Route exact strict path=\"/tokens\" component={TokensOverview} />\r\n              <Route exact strict path=\"/tokens/:address\" component={RedirectInvalidToken} />\r\n              <Route exact strict path=\"/pools/:address\" component={PoolPage} />\r\n            </Switch>\r\n            <Marginer />\r\n          </BodyWrapper>\r\n        </AppWrapper>\r\n      )}\r\n    </Suspense>\r\n  )\r\n}\r\n","import { createReducer, nanoid } from '@reduxjs/toolkit'\r\nimport {\r\n  addPopup,\r\n  PopupContent,\r\n  removePopup,\r\n  updateBlockNumber,\r\n  updateSubgraphStatus,\r\n  ApplicationModal,\r\n  setOpenModal,\r\n} from './actions'\r\n\r\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent; removeAfterMs: number | null }>\r\n\r\nexport interface ApplicationState {\r\n  readonly blockNumber: { readonly [chainId: number]: number }\r\n  readonly popupList: PopupList\r\n  readonly openModal: ApplicationModal | null\r\n  readonly subgraphStatus: {\r\n    available: boolean | null\r\n    syncedBlock: number | undefined\r\n  }\r\n}\r\n\r\nconst initialState: ApplicationState = {\r\n  blockNumber: {},\r\n  popupList: [],\r\n  openModal: null,\r\n  subgraphStatus: {\r\n    available: null,\r\n    syncedBlock: undefined,\r\n  },\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateBlockNumber, (state, action) => {\r\n      const { chainId, blockNumber } = action.payload\r\n      if (typeof state.blockNumber[chainId] !== 'number') {\r\n        state.blockNumber[chainId] = blockNumber\r\n      } else {\r\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\r\n      }\r\n    })\r\n    .addCase(setOpenModal, (state, action) => {\r\n      state.openModal = action.payload\r\n    })\r\n    .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 15000 } }) => {\r\n      state.popupList = (key ? state.popupList.filter((popup) => popup.key !== key) : state.popupList).concat([\r\n        {\r\n          key: key || nanoid(),\r\n          show: true,\r\n          content,\r\n          removeAfterMs,\r\n        },\r\n      ])\r\n    })\r\n    .addCase(removePopup, (state, { payload: { key } }) => {\r\n      state.popupList.forEach((p) => {\r\n        if (p.key === key) {\r\n          p.show = false\r\n        }\r\n      })\r\n    })\r\n    .addCase(updateSubgraphStatus, (state, { payload: { available, syncedBlock } }) => {\r\n      state.subgraphStatus = {\r\n        available,\r\n        syncedBlock,\r\n      }\r\n    })\r\n)\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\n// fired once when the app reloads but before the app renders\r\n// allows any updates to be applied to store data loaded from localStorage\r\nexport const updateVersion = createAction<void>('global/updateVersion')\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { updateVersion } from '../global/actions'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  removeSerializedPair,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  SerializedToken,\r\n  updateMatchesDarkMode,\r\n  updateUserDarkMode,\r\n  toggleURLWarning,\r\n  addSavedToken,\r\n  addSavedPool,\r\n} from './actions'\r\n\r\nconst currentTimestamp = () => new Date().getTime()\r\n\r\nexport interface UserState {\r\n  // the timestamp of the last updateVersion action\r\n  lastUpdateVersionTimestamp?: number\r\n\r\n  userDarkMode: boolean | null // the user's choice for dark mode or light mode\r\n  matchesDarkMode: boolean // whether the dark mode media query matches\r\n\r\n  tokens: {\r\n    [chainId: number]: {\r\n      [address: string]: SerializedToken\r\n    }\r\n  }\r\n\r\n  pairs: {\r\n    [chainId: number]: {\r\n      // keyed by token0Address:token1Address\r\n      [key: string]: SerializedPair\r\n    }\r\n  }\r\n\r\n  savedTokens: string[]\r\n  savedPools: string[]\r\n\r\n  timestamp: number\r\n  URLWarningVisible: boolean\r\n}\r\n\r\nfunction pairKey(token0Address: string, token1Address: string) {\r\n  return `${token0Address};${token1Address}`\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  userDarkMode: true,\r\n  matchesDarkMode: false,\r\n  tokens: {},\r\n  pairs: {},\r\n  savedTokens: [],\r\n  savedPools: [],\r\n  timestamp: currentTimestamp(),\r\n  URLWarningVisible: true,\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateVersion, (state) => {\r\n      state.lastUpdateVersionTimestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserDarkMode, (state, action) => {\r\n      state.userDarkMode = action.payload.userDarkMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateMatchesDarkMode, (state, action) => {\r\n      state.matchesDarkMode = action.payload.matchesDarkMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\r\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\r\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\r\n      state.tokens[chainId] = state.tokens[chainId] || {}\r\n      delete state.tokens[chainId][address]\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(addSavedToken, (state, { payload: { address } }) => {\r\n      if (!state.savedTokens || !state.savedTokens.includes(address)) {\r\n        const newTokens = state.savedTokens ?? []\r\n        newTokens.push(address)\r\n        state.savedTokens = newTokens\r\n      }\r\n      // toggle for delete\r\n      else if (state.savedTokens && state.savedTokens.includes(address)) {\r\n        const newTokens = state.savedTokens.filter((x) => x !== address)\r\n        state.savedTokens = newTokens\r\n      }\r\n    })\r\n    .addCase(addSavedPool, (state, { payload: { address } }) => {\r\n      if (!state.savedPools || !state.savedPools.includes(address)) {\r\n        const newPools = state.savedPools ?? []\r\n        newPools.push(address)\r\n        state.savedPools = newPools\r\n      } else if (state.savedPools && state.savedPools.includes(address)) {\r\n        const newPools = state.savedPools.filter((x) => x !== address)\r\n        state.savedPools = newPools\r\n      }\r\n    })\r\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\r\n      if (\r\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\r\n        serializedPair.token0.address !== serializedPair.token1.address\r\n      ) {\r\n        const chainId = serializedPair.token0.chainId\r\n        state.pairs[chainId] = state.pairs[chainId] || {}\r\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\r\n      if (state.pairs[chainId]) {\r\n        // just delete both keys if either exists\r\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\r\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(toggleURLWarning, (state) => {\r\n      state.URLWarningVisible = !state.URLWarningVisible\r\n    })\r\n)\r\n","// used to mark unsupported tokens, these are hosted lists of unsupported tokens\r\n/**\r\n * @TODO add list from blockchain association\r\n */\r\nexport const UNSUPPORTED_LIST_URLS: string[] = []\r\n\r\n// const COMPOUND_LIST = 'https://raw.githubusercontent.com/compound-finance/token-list/master/compound.tokenlist.json'\r\n// const UMA_LIST = 'https://umaproject.org/uma.tokenlist.json'\r\n// const AAVE_LIST = 'tokenlist.aave.eth'\r\n// const SYNTHETIX_LIST = 'synths.snx.eth'\r\n// const WRAPPED_LIST = 'wrapped.tokensoft.eth'\r\n// const SET_LIST = 'https://raw.githubusercontent.com/SetProtocol/uniswap-tokenlist/main/set.tokenlist.json'\r\n// const OPYN_LIST = 'https://raw.githubusercontent.com/opynfinance/opyn-tokenlist/master/opyn-v1.tokenlist.json'\r\n// const ROLL_LIST = 'https://app.tryroll.com/tokens.json'\r\n// const COINGECKO_LIST = 'https://tokens.coingecko.com/uniswap/all.json'\r\n// const CMC_ALL_LIST = 'defi.cmc.eth'\r\n// const CMC_STABLECOIN = 'stablecoin.cmc.eth'\r\n// const KLEROS_LIST = 't2crtokens.eth'\r\nconst GEMINI_LIST = 'https://www.gemini.com/uniswap/manifest.json'\r\n\r\n// lower index == higher priority for token import\r\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\r\n  GEMINI_LIST,\r\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\r\n]\r\n\r\n// default lists to be 'active' aka searched across\r\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = [GEMINI_LIST]\r\n","import { DEFAULT_ACTIVE_LIST_URLS } from './../../constants/lists'\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\r\nimport { TokenList } from '@uniswap/token-lists/dist/types'\r\nimport { DEFAULT_LIST_OF_LISTS } from '../../constants/lists'\r\nimport { updateVersion } from '../global/actions'\r\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\r\n\r\nexport interface ListsState {\r\n  readonly byUrl: {\r\n    readonly [url: string]: {\r\n      readonly current: TokenList | null\r\n      readonly pendingUpdate: TokenList | null\r\n      readonly loadingRequestId: string | null\r\n      readonly error: string | null\r\n    }\r\n  }\r\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\r\n  readonly lastInitializedDefaultListOfLists?: string[]\r\n\r\n  // currently active lists\r\n  readonly activeListUrls: string[] | undefined\r\n}\r\n\r\ntype ListState = ListsState['byUrl'][string]\r\n\r\nconst NEW_LIST_STATE: ListState = {\r\n  error: null,\r\n  current: null,\r\n  loadingRequestId: null,\r\n  pendingUpdate: null,\r\n}\r\n\r\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\r\n\r\nconst initialState: ListsState = {\r\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\r\n  byUrl: {\r\n    ...DEFAULT_LIST_OF_LISTS.reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\r\n      memo[listUrl] = NEW_LIST_STATE\r\n      return memo\r\n    }, {}),\r\n  },\r\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\r\n      state.byUrl[url] = {\r\n        current: null,\r\n        pendingUpdate: null,\r\n        ...state.byUrl[url],\r\n        loadingRequestId: requestId,\r\n        error: null,\r\n      }\r\n    })\r\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\r\n      const current = state.byUrl[url]?.current\r\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\r\n\r\n      // no-op if update does nothing\r\n      if (current) {\r\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\r\n\r\n        if (upgradeType === VersionUpgrade.NONE) return\r\n        if (loadingRequestId === null || loadingRequestId === requestId) {\r\n          state.byUrl[url] = {\r\n            ...state.byUrl[url],\r\n            loadingRequestId: null,\r\n            error: null,\r\n            current: current,\r\n            pendingUpdate: tokenList,\r\n          }\r\n        }\r\n      } else {\r\n        // activate if on default active\r\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\r\n          state.activeListUrls?.push(url)\r\n        }\r\n\r\n        state.byUrl[url] = {\r\n          ...state.byUrl[url],\r\n          loadingRequestId: null,\r\n          error: null,\r\n          current: tokenList,\r\n          pendingUpdate: null,\r\n        }\r\n      }\r\n    })\r\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\r\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\r\n        // no-op since it's not the latest request\r\n        return\r\n      }\r\n\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        loadingRequestId: null,\r\n        error: errorMessage,\r\n        current: null,\r\n        pendingUpdate: null,\r\n      }\r\n    })\r\n    .addCase(addList, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE\r\n      }\r\n    })\r\n    .addCase(removeList, (state, { payload: url }) => {\r\n      if (state.byUrl[url]) {\r\n        delete state.byUrl[url]\r\n      }\r\n      // remove list from active urls if needed\r\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\r\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\r\n      }\r\n    })\r\n    .addCase(enableList, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE\r\n      }\r\n\r\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\r\n        state.activeListUrls.push(url)\r\n      }\r\n\r\n      if (!state.activeListUrls) {\r\n        state.activeListUrls = [url]\r\n      }\r\n    })\r\n    .addCase(disableList, (state, { payload: url }) => {\r\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\r\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\r\n      }\r\n    })\r\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]?.pendingUpdate) {\r\n        throw new Error('accept list update called without pending update')\r\n      }\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        pendingUpdate: null,\r\n        current: state.byUrl[url].pendingUpdate,\r\n      }\r\n    })\r\n    .addCase(updateVersion, (state) => {\r\n      // state loaded from localStorage, but new lists have never been initialized\r\n      if (!state.lastInitializedDefaultListOfLists) {\r\n        state.byUrl = initialState.byUrl\r\n        state.activeListUrls = initialState.activeListUrls\r\n      } else if (state.lastInitializedDefaultListOfLists) {\r\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\r\n          (s, l) => s.add(l),\r\n          new Set()\r\n        )\r\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\r\n\r\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\r\n          if (!lastInitializedSet.has(listUrl)) {\r\n            state.byUrl[listUrl] = NEW_LIST_STATE\r\n          }\r\n        })\r\n\r\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\r\n          if (!newListOfListsSet.has(listUrl)) {\r\n            delete state.byUrl[listUrl]\r\n          }\r\n        })\r\n      }\r\n\r\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\r\n\r\n      // if no active lists, activate defaults\r\n      if (!state.activeListUrls) {\r\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\r\n\r\n        // for each list on default list, initialize if needed\r\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\r\n          if (!state.byUrl[listUrl]) {\r\n            state.byUrl[listUrl] = NEW_LIST_STATE\r\n          }\r\n          return true\r\n        })\r\n      }\r\n    })\r\n)\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport interface Call {\r\n  address: string\r\n  callData: string\r\n}\r\n\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\r\nexport function toCallKey(call: Call): string {\r\n  if (!ADDRESS_REGEX.test(call.address)) {\r\n    throw new Error(`Invalid address: ${call.address}`)\r\n  }\r\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\r\n    throw new Error(`Invalid hex: ${call.callData}`)\r\n  }\r\n  return `${call.address}-${call.callData}`\r\n}\r\n\r\nexport function parseCallKey(callKey: string): Call {\r\n  const pcs = callKey.split('-')\r\n  if (pcs.length !== 2) {\r\n    throw new Error(`Invalid call key: ${callKey}`)\r\n  }\r\n  return {\r\n    address: pcs[0],\r\n    callData: pcs[1],\r\n  }\r\n}\r\n\r\nexport interface ListenerOptions {\r\n  // how often this data should be fetched, by default 1\r\n  readonly blocksPerFetch?: number\r\n}\r\n\r\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/addMulticallListeners'\r\n)\r\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/removeMulticallListeners'\r\n)\r\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\r\n  'multicall/fetchingMulticallResults'\r\n)\r\nexport const errorFetchingMulticallResults = createAction<{\r\n  chainId: number\r\n  calls: Call[]\r\n  fetchingBlockNumber: number\r\n}>('multicall/errorFetchingMulticallResults')\r\nexport const updateMulticallResults = createAction<{\r\n  chainId: number\r\n  blockNumber: number\r\n  results: {\r\n    [callKey: string]: string | null\r\n  }\r\n}>('multicall/updateMulticallResults')\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  addMulticallListeners,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  removeMulticallListeners,\r\n  toCallKey,\r\n  updateMulticallResults,\r\n} from './actions'\r\n\r\nexport interface MulticallState {\r\n  callListeners?: {\r\n    // on a per-chain basis\r\n    [chainId: number]: {\r\n      // stores for each call key the listeners' preferences\r\n      [callKey: string]: {\r\n        // stores how many listeners there are per each blocks per fetch preference\r\n        [blocksPerFetch: number]: number\r\n      }\r\n    }\r\n  }\r\n\r\n  callResults: {\r\n    [chainId: number]: {\r\n      [callKey: string]: {\r\n        data?: string | null\r\n        blockNumber?: number\r\n        fetchingBlockNumber?: number\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState: MulticallState = {\r\n  callResults: {},\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\r\n      const listeners: MulticallState['callListeners'] = state.callListeners\r\n        ? state.callListeners\r\n        : (state.callListeners = {})\r\n      listeners[chainId] = listeners[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\r\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\r\n      })\r\n    })\r\n    .addCase(\r\n      removeMulticallListeners,\r\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\r\n        const listeners: MulticallState['callListeners'] = state.callListeners\r\n          ? state.callListeners\r\n          : (state.callListeners = {})\r\n\r\n        if (!listeners[chainId]) return\r\n        calls.forEach((call) => {\r\n          const callKey = toCallKey(call)\r\n          if (!listeners[chainId][callKey]) return\r\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\r\n\r\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\r\n            delete listeners[chainId][callKey][blocksPerFetch]\r\n          } else {\r\n            listeners[chainId][callKey][blocksPerFetch]--\r\n          }\r\n        })\r\n      }\r\n    )\r\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) {\r\n          state.callResults[chainId][callKey] = {\r\n            fetchingBlockNumber,\r\n          }\r\n        } else {\r\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\r\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    })\r\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) return // only should be dispatched if we are already fetching\r\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\r\n          delete current.fetchingBlockNumber\r\n          current.data = null\r\n          current.blockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    })\r\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      Object.keys(results).forEach((callKey) => {\r\n        const current = state.callResults[chainId][callKey]\r\n        if ((current?.blockNumber ?? 0) > blockNumber) return\r\n        state.callResults[chainId][callKey] = {\r\n          data: results[callKey],\r\n          blockNumber,\r\n        }\r\n      })\r\n    })\r\n)\r\n","import { currentTimestamp } from './../../utils/index'\r\nimport { updateProtocolData, updateChartData, updateTransactions } from './actions'\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { ChartDayData, Transaction } from 'types'\r\n\r\nexport interface ProtocolData {\r\n  // volume\r\n  volumeUSD: number\r\n  volumeUSDChange: number\r\n\r\n  // in range liquidity\r\n  tvlUSD: number\r\n  tvlUSDChange: number\r\n\r\n  // fees\r\n  feesUSD: number\r\n  feeChange: number\r\n\r\n  // transactions\r\n  txCount: number\r\n  txCountChange: number\r\n}\r\n\r\nexport interface ProtocolState {\r\n  // timestamp for last updated fetch\r\n  readonly lastUpdated: number | undefined\r\n\r\n  // overview data\r\n  readonly data: ProtocolData | undefined\r\n\r\n  readonly chartData: ChartDayData[] | undefined\r\n\r\n  readonly transactions: Transaction[] | undefined\r\n}\r\n\r\nexport const initialState: ProtocolState = {\r\n  data: undefined,\r\n  chartData: undefined,\r\n  transactions: undefined,\r\n  lastUpdated: undefined,\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\r\n      state.data = protocolData\r\n      // mark when last updated\r\n      state.lastUpdated = currentTimestamp()\r\n    })\r\n    .addCase(updateChartData, (state, { payload: { chartData } }) => {\r\n      state.chartData = chartData\r\n    })\r\n    .addCase(updateTransactions, (state, { payload: { transactions } }) => {\r\n      state.transactions = transactions\r\n    })\r\n)\r\n","import { currentTimestamp } from './../../utils/index'\r\nimport {\r\n  updateTokenData,\r\n  addTokenKeys,\r\n  addPoolAddresses,\r\n  updateChartData,\r\n  updatePriceData,\r\n  updateTransactions,\r\n} from './actions'\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { PriceChartEntry, Transaction } from 'types'\r\n\r\nexport type TokenData = {\r\n  // token is in some pool on uniswap\r\n  exists: boolean\r\n\r\n  // basic token info\r\n  name: string\r\n  symbol: string\r\n  address: string\r\n\r\n  // volume\r\n  volumeUSD: number\r\n  volumeUSDChange: number\r\n  volumeUSDWeek: number\r\n  txCount: number\r\n\r\n  //fees\r\n  feesUSD: number\r\n\r\n  // tvl\r\n  tvlToken: number\r\n  tvlUSD: number\r\n  tvlUSDChange: number\r\n\r\n  priceUSD: number\r\n  priceUSDChange: number\r\n  priceUSDChangeWeek: number\r\n}\r\n\r\nexport interface TokenChartEntry {\r\n  date: number\r\n  volumeUSD: number\r\n  totalValueLockedUSD: number\r\n}\r\n\r\nexport interface TokensState {\r\n  // analytics data from\r\n  byAddress: {\r\n    [address: string]: {\r\n      data: TokenData | undefined\r\n      poolAddresses: string[] | undefined\r\n      chartData: TokenChartEntry[] | undefined\r\n      priceData: {\r\n        oldestFetchedTimestamp?: number | undefined\r\n        [secondsInterval: number]: PriceChartEntry[] | undefined\r\n      }\r\n      transactions: Transaction[] | undefined\r\n      lastUpdated: number | undefined\r\n    }\r\n  }\r\n}\r\n\r\nexport const initialState: TokensState = { byAddress: {} }\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\r\n      tokens.map(\r\n        (tokenData) =>\r\n          (state.byAddress[tokenData.address] = {\r\n            ...state.byAddress[tokenData.address],\r\n            data: tokenData,\r\n            lastUpdated: currentTimestamp(),\r\n          })\r\n      )\r\n    }) // add address to byAddress keys if not included yet\r\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\r\n      tokenAddresses.map((address) => {\r\n        if (!state.byAddress[address]) {\r\n          state.byAddress[address] = {\r\n            poolAddresses: undefined,\r\n            data: undefined,\r\n            chartData: undefined,\r\n            priceData: {},\r\n            transactions: undefined,\r\n            lastUpdated: undefined,\r\n          }\r\n        }\r\n      })\r\n    })\r\n    // add list of pools the token is included in\r\n    .addCase(addPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\r\n      state.byAddress[tokenAddress] = { ...state.byAddress[tokenAddress], poolAddresses }\r\n    })\r\n    // add list of pools the token is included in\r\n    .addCase(updateChartData, (state, { payload: { tokenAddress, chartData } }) => {\r\n      state.byAddress[tokenAddress] = { ...state.byAddress[tokenAddress], chartData }\r\n    })\r\n    // add list of pools the token is included in\r\n    .addCase(updateTransactions, (state, { payload: { tokenAddress, transactions } }) => {\r\n      state.byAddress[tokenAddress] = { ...state.byAddress[tokenAddress], transactions }\r\n    })\r\n    // update historical price volume based on interval size\r\n    .addCase(\r\n      updatePriceData,\r\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\r\n        state.byAddress[tokenAddress] = {\r\n          ...state.byAddress[tokenAddress],\r\n          priceData: {\r\n            ...state.byAddress[tokenAddress].priceData,\r\n            [secondsInterval]: priceData,\r\n            oldestFetchedTimestamp,\r\n          },\r\n        }\r\n      }\r\n    )\r\n)\r\n","import { currentTimestamp } from './../../utils/index'\r\nimport { updatePoolData, addPoolKeys, updatePoolChartData, updatePoolTransactions, updateTickData } from './actions'\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { SerializedToken } from 'state/user/actions'\r\nimport { Transaction } from 'types'\r\nimport { PoolTickData } from 'data/pools/tickData'\r\n\r\nexport interface Pool {\r\n  address: string\r\n  token0: SerializedToken\r\n  token1: SerializedToken\r\n}\r\n\r\nexport interface PoolData {\r\n  // basic token info\r\n  address: string\r\n  feeTier: number\r\n\r\n  token0: {\r\n    name: string\r\n    symbol: string\r\n    address: string\r\n    decimals: number\r\n    derivedETH: number\r\n  }\r\n\r\n  token1: {\r\n    name: string\r\n    symbol: string\r\n    address: string\r\n    decimals: number\r\n    derivedETH: number\r\n  }\r\n\r\n  // for tick math\r\n  liquidity: number\r\n  sqrtPrice: number\r\n  tick: number\r\n\r\n  // volume\r\n  volumeUSD: number\r\n  volumeUSDChange: number\r\n  volumeUSDWeek: number\r\n\r\n  // liquidity\r\n  tvlUSD: number\r\n  tvlUSDChange: number\r\n\r\n  // prices\r\n  token0Price: number\r\n  token1Price: number\r\n\r\n  // token amounts\r\n  tvlToken0: number\r\n  tvlToken1: number\r\n}\r\n\r\nexport type PoolChartEntry = {\r\n  date: number\r\n  volumeUSD: number\r\n  totalValueLockedUSD: number\r\n}\r\n\r\nexport interface PoolsState {\r\n  // analytics data from\r\n  byAddress: {\r\n    [address: string]: {\r\n      data: PoolData | undefined\r\n      chartData: PoolChartEntry[] | undefined\r\n      transactions: Transaction[] | undefined\r\n      lastUpdated: number | undefined\r\n      tickData: PoolTickData | undefined\r\n    }\r\n  }\r\n}\r\n\r\nexport const initialState: PoolsState = { byAddress: {} }\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\r\n      pools.map(\r\n        (poolData) =>\r\n          (state.byAddress[poolData.address] = {\r\n            ...state.byAddress[poolData.address],\r\n            data: poolData,\r\n            lastUpdated: currentTimestamp(),\r\n          })\r\n      )\r\n    })\r\n    // add address to byAddress keys if not included yet\r\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\r\n      poolAddresses.map((address) => {\r\n        if (!state.byAddress[address]) {\r\n          state.byAddress[address] = {\r\n            data: undefined,\r\n            chartData: undefined,\r\n            transactions: undefined,\r\n            lastUpdated: undefined,\r\n            tickData: undefined,\r\n          }\r\n        }\r\n      })\r\n    })\r\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\r\n      state.byAddress[poolAddress] = { ...state.byAddress[poolAddress], chartData: chartData }\r\n    })\r\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\r\n      state.byAddress[poolAddress] = { ...state.byAddress[poolAddress], transactions }\r\n    })\r\n    .addCase(updateTickData, (state, { payload: { poolAddress, tickData } }) => {\r\n      state.byAddress[poolAddress] = { ...state.byAddress[poolAddress], tickData }\r\n    })\r\n)\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { save, load } from 'redux-localstorage-simple'\r\n\r\nimport application from './application/reducer'\r\nimport { updateVersion } from './global/actions'\r\nimport user from './user/reducer'\r\nimport lists from './lists/reducer'\r\nimport multicall from './multicall/reducer'\r\nimport protocol from './protocol/reducer'\r\nimport tokens from './tokens/reducer'\r\nimport pools from './pools/reducer'\r\n\r\nconst PERSISTED_KEYS: string[] = ['user', 'lists']\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    application,\r\n    user,\r\n    multicall,\r\n    lists,\r\n    protocol,\r\n    tokens,\r\n    pools,\r\n  },\r\n  middleware: [...getDefaultMiddleware({ thunk: false, immutableCheck: false }), save({ states: PERSISTED_KEYS })],\r\n  preloadedState: load({ states: PERSISTED_KEYS }),\r\n})\r\n\r\nstore.dispatch(updateVersion())\r\n\r\nexport default store\r\n\r\nexport type AppState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { AppDispatch } from '../index'\r\nimport { updateMatchesDarkMode } from './actions'\r\n\r\nexport default function Updater(): null {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  // keep dark mode in sync with the system\r\n  useEffect(() => {\r\n    const darkHandler = (match: MediaQueryListEvent) => {\r\n      dispatch(updateMatchesDarkMode({ matchesDarkMode: match.matches }))\r\n    }\r\n\r\n    const match = window?.matchMedia('(prefers-color-scheme: dark)')\r\n    dispatch(updateMatchesDarkMode({ matchesDarkMode: match.matches }))\r\n\r\n    if (match?.addListener) {\r\n      match?.addListener(darkHandler)\r\n    } else if (match?.addEventListener) {\r\n      match?.addEventListener('change', darkHandler)\r\n    }\r\n\r\n    return () => {\r\n      if (match?.removeListener) {\r\n        match?.removeListener(darkHandler)\r\n      } else if (match?.removeEventListener) {\r\n        match?.removeEventListener('change', darkHandler)\r\n      }\r\n    }\r\n  }, [dispatch])\r\n\r\n  return null\r\n}\r\n","import { getPercentChange } from '../../utils/data'\r\nimport { ProtocolData } from '../../state/protocol/reducer'\r\nimport gql from 'graphql-tag'\r\nimport { useQuery } from '@apollo/client'\r\nimport { useDeltaTimestamps } from 'utils/queries'\r\nimport { useBlocksFromTimestamps } from 'hooks/useBlocksFromTimestamps'\r\nimport { useMemo } from 'react'\r\n\r\nexport const GLOBAL_DATA = (block?: string) => {\r\n  const queryString = ` query uniswapFactories {\r\n      factories(\r\n       ${block ? `block: { number: ${block}}` : ``} \r\n       first: 1) {\r\n        txCount\r\n        totalVolumeUSD\r\n        totalFeesUSD\r\n        totalValueLockedUSD\r\n      }\r\n    }`\r\n  return gql(queryString)\r\n}\r\n\r\ninterface GlobalResponse {\r\n  factories: {\r\n    txCount: string\r\n    totalVolumeUSD: string\r\n    totalFeesUSD: string\r\n    totalValueLockedUSD: string\r\n  }[]\r\n}\r\n\r\n// mocked\r\nexport function useFetchProtocolData(): {\r\n  loading: boolean\r\n  error: boolean\r\n  data: ProtocolData | undefined\r\n} {\r\n  // get blocks from historic timestamps\r\n  const [t24, t48] = useDeltaTimestamps()\r\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24, t48])\r\n  const [block24, block48] = blocks ?? []\r\n\r\n  // fetch all data\r\n  const { loading, error, data } = useQuery<GlobalResponse>(GLOBAL_DATA())\r\n\r\n  const { loading: loading24, error: error24, data: data24 } = useQuery<GlobalResponse>(\r\n    GLOBAL_DATA(block24?.number ?? undefined)\r\n  )\r\n  const { loading: loading48, error: error48, data: data48 } = useQuery<GlobalResponse>(\r\n    GLOBAL_DATA(block48?.number ?? undefined)\r\n  )\r\n\r\n  const anyError = Boolean(error || error24 || error48 || blockError)\r\n  const anyLoading = Boolean(loading || loading24 || loading48)\r\n\r\n  const parsed = data?.factories?.[0]\r\n  const parsed24 = data24?.factories?.[0]\r\n  const parsed48 = data48?.factories?.[0]\r\n\r\n  const formattedData: ProtocolData | undefined = useMemo(() => {\r\n    if (anyError || anyLoading || !parsed || !blocks) {\r\n      return undefined\r\n    }\r\n\r\n    // volume data\r\n    const volumeUSD =\r\n      parsed && parsed24\r\n        ? parseFloat(parsed.totalVolumeUSD) - parseFloat(parsed24.totalVolumeUSD)\r\n        : parseFloat(parsed.totalVolumeUSD)\r\n\r\n    const volumeOneWindowAgo =\r\n      parsed24 && parsed48 ? parseFloat(parsed24.totalVolumeUSD) - parseFloat(parsed48.totalVolumeUSD) : undefined\r\n\r\n    const volumeUSDChange =\r\n      volumeUSD && volumeOneWindowAgo ? ((volumeUSD - volumeOneWindowAgo) / volumeOneWindowAgo) * 100 : 0\r\n\r\n    // total value locked\r\n    const tvlUSDChange = getPercentChange(parsed?.totalValueLockedUSD, parsed24?.totalValueLockedUSD)\r\n\r\n    // 24H transactions\r\n    const txCount =\r\n      parsed && parsed24 ? parseFloat(parsed.txCount) - parseFloat(parsed24.txCount) : parseFloat(parsed.txCount)\r\n\r\n    const txCountOneWindowAgo =\r\n      parsed24 && parsed48 ? parseFloat(parsed24.txCount) - parseFloat(parsed48.txCount) : undefined\r\n\r\n    const txCountChange =\r\n      txCount && txCountOneWindowAgo ? getPercentChange(txCount.toString(), txCountOneWindowAgo.toString()) : 0\r\n\r\n    const feesOneWindowAgo =\r\n      parsed24 && parsed48 ? parseFloat(parsed24.totalFeesUSD) - parseFloat(parsed48.totalFeesUSD) : undefined\r\n\r\n    const feesUSD =\r\n      parsed && parsed24\r\n        ? parseFloat(parsed.totalFeesUSD) - parseFloat(parsed24.totalFeesUSD)\r\n        : parseFloat(parsed.totalFeesUSD)\r\n\r\n    const feeChange =\r\n      feesUSD && feesOneWindowAgo ? getPercentChange(feesUSD.toString(), feesOneWindowAgo.toString()) : 0\r\n\r\n    return {\r\n      volumeUSD,\r\n      volumeUSDChange: typeof volumeUSDChange === 'number' ? volumeUSDChange : 0,\r\n      tvlUSD: parseFloat(parsed.totalValueLockedUSD),\r\n      tvlUSDChange,\r\n      feesUSD,\r\n      feeChange,\r\n      txCount,\r\n      txCountChange,\r\n    }\r\n  }, [anyError, anyLoading, blocks, parsed, parsed24, parsed48])\r\n\r\n  return {\r\n    loading: anyLoading,\r\n    error: anyError,\r\n    data: formattedData,\r\n  }\r\n}\r\n","import { ChartDayData } from '../../types/index'\r\nimport { useState, useEffect } from 'react'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\r\nimport gql from 'graphql-tag'\r\nimport { client } from 'apollo/client'\r\n\r\n// format dayjs with the libraries that we need\r\ndayjs.extend(utc)\r\ndayjs.extend(weekOfYear)\r\nconst ONE_DAY_UNIX = 24 * 60 * 60\r\n\r\nconst GLOBAL_CHART = gql`\r\n  query uniswapDayDatas($startTime: Int!, $skip: Int!) {\r\n    uniswapDayDatas(first: 1000, skip: $skip, where: { date_gt: $startTime }, orderBy: date, orderDirection: asc) {\r\n      id\r\n      date\r\n      volumeUSD\r\n      tvlUSD\r\n    }\r\n  }\r\n`\r\n\r\ninterface ChartResults {\r\n  uniswapDayDatas: {\r\n    date: number\r\n    volumeUSD: string\r\n    tvlUSD: string\r\n  }[]\r\n}\r\n\r\nasync function fetchChartData() {\r\n  let data: {\r\n    date: number\r\n    volumeUSD: string\r\n    tvlUSD: string\r\n  }[] = []\r\n  const startTimestamp = 1619170975\r\n  const endTimestamp = dayjs.utc().unix()\r\n\r\n  let error = false\r\n  let skip = 0\r\n  let allFound = false\r\n\r\n  try {\r\n    while (!allFound) {\r\n      const { data: chartResData, error, loading } = await client.query<ChartResults>({\r\n        query: GLOBAL_CHART,\r\n        variables: {\r\n          startTime: startTimestamp,\r\n          skip,\r\n        },\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      if (!loading) {\r\n        skip += 1000\r\n        if (chartResData.uniswapDayDatas.length < 1000 || error) {\r\n          allFound = true\r\n        }\r\n        if (chartResData) {\r\n          data = data.concat(chartResData.uniswapDayDatas)\r\n        }\r\n      }\r\n    }\r\n  } catch {\r\n    error = true\r\n  }\r\n\r\n  if (data) {\r\n    const formattedExisting = data.reduce((accum: { [date: number]: ChartDayData }, dayData) => {\r\n      const roundedDate = parseInt((dayData.date / ONE_DAY_UNIX).toFixed(0))\r\n      accum[roundedDate] = {\r\n        date: dayData.date,\r\n        volumeUSD: parseFloat(dayData.volumeUSD),\r\n        tvlUSD: parseFloat(dayData.tvlUSD),\r\n      }\r\n      return accum\r\n    }, {})\r\n\r\n    const firstEntry = formattedExisting[parseInt(Object.keys(formattedExisting)[0])]\r\n\r\n    // fill in empty days ( there will be no day datas if no trades made that day )\r\n    let timestamp = firstEntry?.date ?? startTimestamp\r\n    let latestTvl = firstEntry?.tvlUSD ?? 0\r\n    while (timestamp < endTimestamp - ONE_DAY_UNIX) {\r\n      const nextDay = timestamp + ONE_DAY_UNIX\r\n      const currentDayIndex = parseInt((nextDay / ONE_DAY_UNIX).toFixed(0))\r\n      if (!Object.keys(formattedExisting).includes(currentDayIndex.toString())) {\r\n        formattedExisting[currentDayIndex] = {\r\n          date: nextDay,\r\n          volumeUSD: 0,\r\n          tvlUSD: latestTvl,\r\n        }\r\n      } else {\r\n        latestTvl = formattedExisting[currentDayIndex].tvlUSD\r\n      }\r\n      timestamp = nextDay\r\n    }\r\n\r\n    const dateMap = Object.keys(formattedExisting).map((key) => {\r\n      return formattedExisting[parseInt(key)]\r\n    })\r\n\r\n    return {\r\n      data: dateMap,\r\n      error: false,\r\n    }\r\n  } else {\r\n    return {\r\n      data: undefined,\r\n      error,\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Fetch historic chart data\r\n */\r\nexport function useFetchGlobalChartData(): {\r\n  error: boolean\r\n  data: ChartDayData[] | undefined\r\n} {\r\n  const [data, setData] = useState<ChartDayData[] | undefined>()\r\n  const [error, setError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      const { data, error } = await fetchChartData()\r\n      if (data && !error) {\r\n        setData(data)\r\n      } else if (error) {\r\n        setError(true)\r\n      }\r\n    }\r\n    if (!data && !error) {\r\n      fetch()\r\n    }\r\n  }, [data, error])\r\n\r\n  return {\r\n    error,\r\n    data,\r\n  }\r\n}\r\n","import { client } from 'apollo/client'\r\nimport gql from 'graphql-tag'\r\nimport { Transaction, TransactionType } from 'types'\r\nimport { formatTokenSymbol } from 'utils/tokens'\r\n\r\nconst GLOBAL_TRANSACTIONS = gql`\r\n  query transactions {\r\n    transactions(first: 500, orderBy: timestamp, orderDirection: desc) {\r\n      id\r\n      timestamp\r\n      mints {\r\n        pool {\r\n          token0 {\r\n            id\r\n            symbol\r\n          }\r\n          token1 {\r\n            id\r\n            symbol\r\n          }\r\n        }\r\n        owner\r\n        sender\r\n        origin\r\n        amount0\r\n        amount1\r\n        amountUSD\r\n      }\r\n      swaps {\r\n        pool {\r\n          token0 {\r\n            id\r\n            symbol\r\n          }\r\n          token1 {\r\n            id\r\n            symbol\r\n          }\r\n        }\r\n        origin\r\n        amount0\r\n        amount1\r\n        amountUSD\r\n      }\r\n      burns {\r\n        pool {\r\n          token0 {\r\n            id\r\n            symbol\r\n          }\r\n          token1 {\r\n            id\r\n            symbol\r\n          }\r\n        }\r\n        owner\r\n        origin\r\n        amount0\r\n        amount1\r\n        amountUSD\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\ntype TransactionEntry = {\r\n  timestamp: string\r\n  id: string\r\n  mints: {\r\n    pool: {\r\n      token0: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n      token1: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n    }\r\n    origin: string\r\n    amount0: string\r\n    amount1: string\r\n    amountUSD: string\r\n  }[]\r\n  swaps: {\r\n    pool: {\r\n      token0: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n      token1: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n    }\r\n    origin: string\r\n    amount0: string\r\n    amount1: string\r\n    amountUSD: string\r\n  }[]\r\n  burns: {\r\n    pool: {\r\n      token0: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n      token1: {\r\n        id: string\r\n        symbol: string\r\n      }\r\n    }\r\n    owner: string\r\n    origin: string\r\n    amount0: string\r\n    amount1: string\r\n    amountUSD: string\r\n  }[]\r\n}\r\n\r\ninterface TransactionResults {\r\n  transactions: TransactionEntry[]\r\n}\r\n\r\nexport async function fetchTopTransactions(): Promise<Transaction[] | undefined> {\r\n  try {\r\n    const { data, error, loading } = await client.query<TransactionResults>({\r\n      query: GLOBAL_TRANSACTIONS,\r\n      fetchPolicy: 'network-only',\r\n    })\r\n\r\n    if (error || loading || !data) {\r\n      return undefined\r\n    }\r\n\r\n    const formatted = data.transactions.reduce((accum: Transaction[], t: TransactionEntry) => {\r\n      const mintEntries = t.mints.map((m) => {\r\n        return {\r\n          type: TransactionType.MINT,\r\n          hash: t.id,\r\n          timestamp: t.timestamp,\r\n          sender: m.origin,\r\n          token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\r\n          token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\r\n          token0Address: m.pool.token0.id,\r\n          token1Address: m.pool.token1.id,\r\n          amountUSD: parseFloat(m.amountUSD),\r\n          amountToken0: parseFloat(m.amount0),\r\n          amountToken1: parseFloat(m.amount1),\r\n        }\r\n      })\r\n      const burnEntries = t.burns.map((m) => {\r\n        return {\r\n          type: TransactionType.BURN,\r\n          hash: t.id,\r\n          timestamp: t.timestamp,\r\n          sender: m.origin,\r\n          token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\r\n          token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\r\n          token0Address: m.pool.token0.id,\r\n          token1Address: m.pool.token1.id,\r\n          amountUSD: parseFloat(m.amountUSD),\r\n          amountToken0: parseFloat(m.amount0),\r\n          amountToken1: parseFloat(m.amount1),\r\n        }\r\n      })\r\n\r\n      const swapEntries = t.swaps.map((m) => {\r\n        return {\r\n          hash: t.id,\r\n          type: TransactionType.SWAP,\r\n          timestamp: t.timestamp,\r\n          sender: m.origin,\r\n          token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\r\n          token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\r\n          token0Address: m.pool.token0.id,\r\n          token1Address: m.pool.token1.id,\r\n          amountUSD: parseFloat(m.amountUSD),\r\n          amountToken0: parseFloat(m.amount0),\r\n          amountToken1: parseFloat(m.amount1),\r\n        }\r\n      })\r\n      accum = [...accum, ...mintEntries, ...burnEntries, ...swapEntries]\r\n      return accum\r\n    }, [])\r\n\r\n    return formatted\r\n  } catch {\r\n    return undefined\r\n  }\r\n}\r\n","import { useProtocolData, useProtocolChartData, useProtocolTransactions } from './hooks'\r\nimport { useEffect } from 'react'\r\nimport { useFetchProtocolData } from 'data/protocol/overview'\r\nimport { useFetchGlobalChartData } from 'data/protocol/chart'\r\nimport { fetchTopTransactions } from 'data/protocol/transactions'\r\n\r\nexport default function Updater(): null {\r\n  const [protocolData, updateProtocolData] = useProtocolData()\r\n  const { data: fetchedProtocolData, error, loading } = useFetchProtocolData()\r\n\r\n  const [chartData, updateChartData] = useProtocolChartData()\r\n  const { data: fetchedChartData, error: chartError } = useFetchGlobalChartData()\r\n\r\n  const [transactions, updateTransactions] = useProtocolTransactions()\r\n\r\n  // update overview data if available and not set\r\n  useEffect(() => {\r\n    if (protocolData === undefined && fetchedProtocolData && !loading && !error) {\r\n      updateProtocolData(fetchedProtocolData)\r\n    }\r\n  }, [error, fetchedProtocolData, loading, protocolData, updateProtocolData])\r\n\r\n  // update global chart data if available and not set\r\n  useEffect(() => {\r\n    if (chartData === undefined && fetchedChartData && !chartError) {\r\n      updateChartData(fetchedChartData)\r\n    }\r\n  }, [chartData, chartError, fetchedChartData, updateChartData])\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      const data = await fetchTopTransactions()\r\n      if (data) {\r\n        updateTransactions(data)\r\n      }\r\n    }\r\n    if (!transactions) {\r\n      fetch()\r\n    }\r\n  }, [transactions, updateTransactions])\r\n\r\n  return null\r\n}\r\n","import { useMemo } from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport gql from 'graphql-tag'\r\n\r\nexport const TOP_TOKENS = gql`\r\n  query topPools {\r\n    tokens(first: 50, orderBy: totalValueLockedUSD, orderDirection: desc) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\ninterface TopTokensResponse {\r\n  tokens: {\r\n    id: string\r\n  }[]\r\n}\r\n\r\n/**\r\n * Fetch top addresses by volume\r\n */\r\nexport function useTopTokenAddresses(): {\r\n  loading: boolean\r\n  error: boolean\r\n  addresses: string[] | undefined\r\n} {\r\n  const { loading, error, data } = useQuery<TopTokensResponse>(TOP_TOKENS)\r\n\r\n  const formattedData = useMemo(() => {\r\n    if (data) {\r\n      return data.tokens.map((t) => t.id)\r\n    } else {\r\n      return undefined\r\n    }\r\n  }, [data])\r\n\r\n  return {\r\n    loading: loading,\r\n    error: Boolean(error),\r\n    addresses: formattedData,\r\n  }\r\n}\r\n","import { useAllTokenData, useUpdateTokenData, useAddTokenKeys } from './hooks'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useTopTokenAddresses } from '../../data/tokens/topTokens'\r\nimport { useFetchedTokenDatas } from 'data/tokens/tokenData'\r\n\r\nexport default function Updater(): null {\r\n  // updaters\r\n  const updateTokenDatas = useUpdateTokenData()\r\n  const addTokenKeys = useAddTokenKeys()\r\n\r\n  // intitial data\r\n  const allTokenData = useAllTokenData()\r\n  const { loading, error, addresses } = useTopTokenAddresses()\r\n\r\n  // add top pools on first load\r\n  useEffect(() => {\r\n    if (addresses && !error && !loading) {\r\n      addTokenKeys(addresses)\r\n    }\r\n  }, [addTokenKeys, addresses, error, loading])\r\n\r\n  // detect for which addresses we havent loaded token data yet\r\n  const unfetchedTokenAddresses = useMemo(() => {\r\n    return Object.keys(allTokenData).reduce((accum: string[], key) => {\r\n      const tokenData = allTokenData[key]\r\n      if (!tokenData.data || !tokenData.lastUpdated) {\r\n        accum.push(key)\r\n      }\r\n      return accum\r\n    }, [])\r\n  }, [allTokenData])\r\n\r\n  // update unloaded pool entries with fetched data\r\n  const { error: tokenDataError, loading: tokenDataLoading, data: tokenDatas } = useFetchedTokenDatas(\r\n    unfetchedTokenAddresses\r\n  )\r\n  useEffect(() => {\r\n    if (tokenDatas && !tokenDataError && !tokenDataLoading) {\r\n      updateTokenDatas(Object.values(tokenDatas))\r\n    }\r\n  }, [tokenDataError, tokenDataLoading, tokenDatas, updateTokenDatas])\r\n\r\n  return null\r\n}\r\n","import { useMemo } from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport gql from 'graphql-tag'\r\n\r\nexport const TOP_POOLS = gql`\r\n  query topPools {\r\n    pools(first: 50, orderBy: totalValueLockedUSD, orderDirection: desc) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\ninterface TopPoolsResponse {\r\n  pools: {\r\n    id: string\r\n  }[]\r\n}\r\n\r\n/**\r\n * Fetch top addresses by volume\r\n */\r\nexport function useTopPoolAddresses(): {\r\n  loading: boolean\r\n  error: boolean\r\n  addresses: string[] | undefined\r\n} {\r\n  const { loading, error, data } = useQuery<TopPoolsResponse>(TOP_POOLS, {\r\n    fetchPolicy: 'network-only',\r\n  })\r\n\r\n  const formattedData = useMemo(() => {\r\n    if (data) {\r\n      return data.pools.map((p) => p.id)\r\n    } else {\r\n      return undefined\r\n    }\r\n  }, [data])\r\n\r\n  return {\r\n    loading: loading,\r\n    error: Boolean(error),\r\n    addresses: formattedData,\r\n  }\r\n}\r\n","import { useQuery } from '@apollo/client'\r\nimport gql from 'graphql-tag'\r\nimport { useDeltaTimestamps } from 'utils/queries'\r\nimport { useBlocksFromTimestamps } from 'hooks/useBlocksFromTimestamps'\r\nimport { PoolData } from 'state/pools/reducer'\r\nimport { get2DayChange } from 'utils/data'\r\nimport { formatTokenName, formatTokenSymbol } from 'utils/tokens'\r\n\r\nexport const POOLS_BULK = (block: number | undefined, pools: string[]) => {\r\n  let poolString = `[`\r\n  pools.map((address) => {\r\n    return (poolString += `\"${address}\",`)\r\n  })\r\n  poolString += ']'\r\n  const queryString =\r\n    `\r\n    query pools {\r\n      pools(where: {id_in: ${poolString}},` +\r\n    (block ? `block: {number: ${block}} ,` : ``) +\r\n    ` orderBy: totalValueLockedUSD, orderDirection: desc) {\r\n        id\r\n        feeTier\r\n        liquidity\r\n        sqrtPrice\r\n        tick\r\n        token0 {\r\n            id\r\n            symbol \r\n            name\r\n            decimals\r\n            derivedETH\r\n        }\r\n        token1 {\r\n            id\r\n            symbol \r\n            name\r\n            decimals\r\n            derivedETH\r\n        }\r\n        token0Price\r\n        token1Price\r\n        volumeUSD\r\n        txCount\r\n        totalValueLockedToken0\r\n        totalValueLockedToken1\r\n        totalValueLockedUSD\r\n      }\r\n    }\r\n    `\r\n  return gql(queryString)\r\n}\r\n\r\ninterface PoolFields {\r\n  id: string\r\n  feeTier: string\r\n  liquidity: string\r\n  sqrtPrice: string\r\n  tick: string\r\n  token0: {\r\n    id: string\r\n    symbol: string\r\n    name: string\r\n    decimals: string\r\n    derivedETH: string\r\n  }\r\n  token1: {\r\n    id: string\r\n    symbol: string\r\n    name: string\r\n    decimals: string\r\n    derivedETH: string\r\n  }\r\n  token0Price: string\r\n  token1Price: string\r\n  volumeUSD: string\r\n  txCount: string\r\n  totalValueLockedToken0: string\r\n  totalValueLockedToken1: string\r\n  totalValueLockedUSD: string\r\n}\r\n\r\ninterface PoolDataResponse {\r\n  pools: PoolFields[]\r\n}\r\n\r\n/**\r\n * Fetch top addresses by volume\r\n */\r\nexport function usePoolDatas(\r\n  poolAddresses: string[]\r\n): {\r\n  loading: boolean\r\n  error: boolean\r\n  data:\r\n    | {\r\n        [address: string]: PoolData\r\n      }\r\n    | undefined\r\n} {\r\n  // get blocks from historic timestamps\r\n  const [t24, t48, tWeek] = useDeltaTimestamps()\r\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24, t48, tWeek])\r\n  const [block24, block48, blockWeek] = blocks ?? []\r\n\r\n  const { loading, error, data } = useQuery<PoolDataResponse>(POOLS_BULK(undefined, poolAddresses), {\r\n    fetchPolicy: 'network-only',\r\n  })\r\n\r\n  const { loading: loading24, error: error24, data: data24 } = useQuery<PoolDataResponse>(\r\n    POOLS_BULK(block24?.number, poolAddresses),\r\n    {\r\n      fetchPolicy: 'network-only',\r\n    }\r\n  )\r\n  const { loading: loading48, error: error48, data: data48 } = useQuery<PoolDataResponse>(\r\n    POOLS_BULK(block48?.number, poolAddresses),\r\n    {\r\n      fetchPolicy: 'network-only',\r\n    }\r\n  )\r\n  const { loading: loadingWeek, error: errorWeek, data: dataWeek } = useQuery<PoolDataResponse>(\r\n    POOLS_BULK(blockWeek?.number, poolAddresses),\r\n    {\r\n      fetchPolicy: 'network-only',\r\n    }\r\n  )\r\n\r\n  const anyError = Boolean(error || error24 || error48 || blockError || errorWeek)\r\n  const anyLoading = Boolean(loading || loading24 || loading48 || loadingWeek)\r\n\r\n  // return early if not all data yet\r\n  if (anyError || anyLoading) {\r\n    return {\r\n      loading: anyLoading,\r\n      error: anyError,\r\n      data: undefined,\r\n    }\r\n  }\r\n\r\n  const parsed = data?.pools\r\n    ? data.pools.reduce((accum: { [address: string]: PoolFields }, poolData) => {\r\n        accum[poolData.id] = poolData\r\n        return accum\r\n      }, {})\r\n    : {}\r\n  const parsed24 = data24?.pools\r\n    ? data24.pools.reduce((accum: { [address: string]: PoolFields }, poolData) => {\r\n        accum[poolData.id] = poolData\r\n        return accum\r\n      }, {})\r\n    : {}\r\n  const parsed48 = data48?.pools\r\n    ? data48.pools.reduce((accum: { [address: string]: PoolFields }, poolData) => {\r\n        accum[poolData.id] = poolData\r\n        return accum\r\n      }, {})\r\n    : {}\r\n  const parsedWeek = dataWeek?.pools\r\n    ? dataWeek.pools.reduce((accum: { [address: string]: PoolFields }, poolData) => {\r\n        accum[poolData.id] = poolData\r\n        return accum\r\n      }, {})\r\n    : {}\r\n\r\n  // format data and calculate daily changes\r\n  const formatted = poolAddresses.reduce((accum: { [address: string]: PoolData }, address) => {\r\n    const current: PoolFields | undefined = parsed[address]\r\n    const oneDay: PoolFields | undefined = parsed24[address]\r\n    const twoDay: PoolFields | undefined = parsed48[address]\r\n    const week: PoolFields | undefined = parsedWeek[address]\r\n\r\n    const [volumeUSD, volumeUSDChange] =\r\n      current && oneDay && twoDay\r\n        ? get2DayChange(current.volumeUSD, oneDay.volumeUSD, twoDay.volumeUSD)\r\n        : current\r\n        ? [parseFloat(current.volumeUSD), 0]\r\n        : [0, 0]\r\n\r\n    const volumeUSDWeek =\r\n      current && week\r\n        ? parseFloat(current.volumeUSD) - parseFloat(week.volumeUSD)\r\n        : current\r\n        ? parseFloat(current.volumeUSD)\r\n        : 0\r\n\r\n    const tvlUSD = current ? parseFloat(current.totalValueLockedUSD) : 0\r\n\r\n    const tvlUSDChange =\r\n      current && oneDay\r\n        ? ((parseFloat(current.totalValueLockedUSD) - parseFloat(oneDay.totalValueLockedUSD)) /\r\n            parseFloat(oneDay.totalValueLockedUSD)) *\r\n          100\r\n        : 0\r\n\r\n    const tvlToken0 = current ? parseFloat(current.totalValueLockedToken0) : 0\r\n    const tvlToken1 = current ? parseFloat(current.totalValueLockedToken1) : 0\r\n\r\n    const feeTier = current ? parseInt(current.feeTier) : 0\r\n\r\n    if (current) {\r\n      accum[address] = {\r\n        address,\r\n        feeTier,\r\n        liquidity: parseFloat(current.liquidity),\r\n        sqrtPrice: parseFloat(current.sqrtPrice),\r\n        tick: parseFloat(current.tick),\r\n        token0: {\r\n          address: current.token0.id,\r\n          name: formatTokenName(current.token0.id, current.token0.name),\r\n          symbol: formatTokenSymbol(current.token0.id, current.token0.symbol),\r\n          decimals: parseInt(current.token0.decimals),\r\n          derivedETH: parseFloat(current.token0.derivedETH),\r\n        },\r\n        token1: {\r\n          address: current.token1.id,\r\n          name: formatTokenName(current.token1.id, current.token1.name),\r\n          symbol: formatTokenSymbol(current.token1.id, current.token1.symbol),\r\n          decimals: parseInt(current.token1.decimals),\r\n          derivedETH: parseFloat(current.token1.derivedETH),\r\n        },\r\n        token0Price: parseFloat(current.token0Price),\r\n        token1Price: parseFloat(current.token1Price),\r\n        volumeUSD,\r\n        volumeUSDChange,\r\n        volumeUSDWeek,\r\n        tvlUSD,\r\n        tvlUSDChange,\r\n        tvlToken0,\r\n        tvlToken1,\r\n      }\r\n    }\r\n\r\n    return accum\r\n  }, {})\r\n\r\n  return {\r\n    loading: anyLoading,\r\n    error: anyError,\r\n    data: formatted,\r\n  }\r\n}\r\n","import { useUpdatePoolData, useAllPoolData, useAddPoolKeys } from './hooks'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useTopPoolAddresses } from 'data/pools/topPools'\r\nimport { usePoolDatas } from 'data/pools/poolData'\r\n\r\nexport default function Updater(): null {\r\n  // updaters\r\n  const updatePoolData = useUpdatePoolData()\r\n  const addPoolKeys = useAddPoolKeys()\r\n\r\n  // data\r\n  const allPoolData = useAllPoolData()\r\n  const { loading, error, addresses } = useTopPoolAddresses()\r\n\r\n  // add top pools on first load\r\n  useEffect(() => {\r\n    if (addresses && !error && !loading) {\r\n      addPoolKeys(addresses)\r\n    }\r\n  }, [addPoolKeys, addresses, error, loading])\r\n\r\n  // detect for which addresses we havent loaded pool data yet\r\n  const unfetchedPoolAddresses = useMemo(() => {\r\n    return Object.keys(allPoolData).reduce((accum: string[], key) => {\r\n      const poolData = allPoolData[key]\r\n      if (!poolData.data || !poolData.lastUpdated) {\r\n        accum.push(key)\r\n      }\r\n      return accum\r\n    }, [])\r\n  }, [allPoolData])\r\n\r\n  // update unloaded pool entries with fetched data\r\n  const { error: poolDataError, loading: poolDataLoading, data: poolDatas } = usePoolDatas(unfetchedPoolAddresses)\r\n  useEffect(() => {\r\n    if (poolDatas && !poolDataError && !poolDataLoading) {\r\n      updatePoolData(Object.values(poolDatas))\r\n    }\r\n  }, [poolDataError, poolDataLoading, poolDatas, updatePoolData])\r\n\r\n  return null\r\n}\r\n","import { healthClient } from './../../apollo/client'\r\nimport { useQuery } from '@apollo/client'\r\nimport gql from 'graphql-tag'\r\n\r\nexport const SUBGRAPH_HEALTH = gql`\r\n  query health {\r\n    indexingStatusForCurrentVersion(subgraphName: \"james485713/t3-subgraphs1\") {\r\n      synced\r\n      health\r\n      chains {\r\n        chainHeadBlock {\r\n          number\r\n        }\r\n        latestBlock {\r\n          number\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\ninterface HealthResponse {\r\n  indexingStatusForCurrentVersion: {\r\n    chains: {\r\n      chainHeadBlock: {\r\n        number: string\r\n      }\r\n      latestBlock: {\r\n        number: string\r\n      }\r\n    }[]\r\n    synced: boolean\r\n  }\r\n}\r\n\r\n/**\r\n * Fetch top addresses by volume\r\n */\r\nexport function useFetchedSubgraphStatus(): {\r\n  available: boolean | null\r\n  syncedBlock: number | undefined\r\n  headBlock: number | undefined\r\n} {\r\n  const { loading, error, data } = useQuery<HealthResponse>(SUBGRAPH_HEALTH, {\r\n    client: healthClient,\r\n    fetchPolicy: 'network-only',\r\n  })\r\n\r\n  const parsed = data?.indexingStatusForCurrentVersion\r\n\r\n  if (loading) {\r\n    return {\r\n      available: null,\r\n      syncedBlock: undefined,\r\n      headBlock: undefined,\r\n    }\r\n  }\r\n\r\n  if ((!loading && !parsed) || error) {\r\n    return {\r\n      available: false,\r\n      syncedBlock: undefined,\r\n      headBlock: undefined,\r\n    }\r\n  }\r\n\r\n  const syncedBlock = parsed?.chains[0].latestBlock.number\r\n  const headBlock = parsed?.chains[0].chainHeadBlock.number\r\n\r\n  return {\r\n    available: true,\r\n    syncedBlock: syncedBlock ? parseFloat(syncedBlock) : undefined,\r\n    headBlock: headBlock ? parseFloat(headBlock) : undefined,\r\n  }\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useSubgraphStatus } from './hooks'\r\nimport { useFetchedSubgraphStatus } from '../../data/application'\r\n\r\nexport default function Updater(): null {\r\n  // subgraph status\r\n  const [status, updateStatus] = useSubgraphStatus()\r\n  const { available, syncedBlock: newSyncedBlock } = useFetchedSubgraphStatus()\r\n\r\n  const syncedBlock = status.syncedBlock\r\n\r\n  useEffect(() => {\r\n    if (status.available === null && available !== null) {\r\n      updateStatus(available, syncedBlock)\r\n    }\r\n    if (!status.syncedBlock || (status.syncedBlock !== newSyncedBlock && syncedBlock)) {\r\n      updateStatus(status.available, newSyncedBlock)\r\n    }\r\n  }, [available, newSyncedBlock, status.available, status.syncedBlock, syncedBlock, updateStatus])\r\n\r\n  return null\r\n}\r\n","import 'inter-ui'\r\nimport React, { StrictMode } from 'react'\r\nimport { isMobile } from 'react-device-detect'\r\nimport ReactDOM from 'react-dom'\r\nimport ReactGA from 'react-ga'\r\nimport { Provider } from 'react-redux'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport './i18n'\r\nimport App from './pages/App'\r\nimport store from './state'\r\nimport UserUpdater from './state/user/updater'\r\nimport ProtocolUpdater from './state/protocol/updater'\r\nimport TokenUpdater from './state/tokens/updater'\r\nimport PoolUpdater from './state/pools/updater'\r\nimport ApplicationUpdater from './state/application/updater'\r\nimport ThemeProvider, { FixedGlobalStyle, ThemedGlobalStyle } from './theme'\r\nimport { ApolloProvider } from '@apollo/client/react'\r\nimport { client } from 'apollo/client'\r\n\r\nconst GOOGLE_ANALYTICS_ID: string | undefined = process.env.REACT_APP_GOOGLE_ANALYTICS_ID\r\nif (typeof GOOGLE_ANALYTICS_ID === 'string') {\r\n  ReactGA.initialize(GOOGLE_ANALYTICS_ID)\r\n  ReactGA.set({\r\n    customBrowserType: !isMobile\r\n      ? 'desktop'\r\n      : 'web3' in window || 'ethereum' in window\r\n      ? 'mobileWeb3'\r\n      : 'mobileRegular',\r\n  })\r\n} else {\r\n  ReactGA.initialize('test', { testMode: true, debug: true })\r\n}\r\n\r\nwindow.addEventListener('error', (error) => {\r\n  ReactGA.exception({\r\n    description: `${error.message} @ ${error.filename}:${error.lineno}:${error.colno}`,\r\n    fatal: true,\r\n  })\r\n})\r\n\r\nfunction Updaters() {\r\n  return (\r\n    <>\r\n      <UserUpdater />\r\n      <ProtocolUpdater />\r\n      <TokenUpdater />\r\n      <PoolUpdater />\r\n      <ApplicationUpdater />\r\n    </>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <FixedGlobalStyle />\r\n    <ApolloProvider client={client}>\r\n      <Provider store={store}>\r\n        <Updaters />\r\n        <ThemeProvider>\r\n          <ThemedGlobalStyle />\r\n          <HashRouter>\r\n            <App />\r\n          </HashRouter>\r\n        </ThemeProvider>\r\n      </Provider>\r\n    </ApolloProvider>\r\n  </StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}